//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EF6EdmxData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EF6EdmxModelContainer : DbContext
    {
        public EF6EdmxModelContainer()
            : base("name=EF6EdmxModelContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C_ErrorLogBase> C_ErrorLogBase { get; set; }
        public virtual DbSet<AccumConfig> AccumConfigs { get; set; }
        public virtual DbSet<ACH_History> ACH_History { get; set; }
        public virtual DbSet<ACH_HistoryCashedCheck> ACH_HistoryCashedCheck { get; set; }
        public virtual DbSet<ACH_Recv> ACH_Recv { get; set; }
        public virtual DbSet<ACH_ReturnCode> ACH_ReturnCode { get; set; }
        public virtual DbSet<ACH_Sent> ACH_Sent { get; set; }
        public virtual DbSet<ACHAck> ACHAcks { get; set; }
        public virtual DbSet<ACHBank> ACHBanks { get; set; }
        public virtual DbSet<ACHBankConfig> ACHBankConfigs { get; set; }
        public virtual DbSet<ACHBankConfigException> ACHBankConfigExceptions { get; set; }
        public virtual DbSet<ACHBatchHeader> ACHBatchHeaders { get; set; }
        public virtual DbSet<ACHDetail> ACHDetails { get; set; }
        public virtual DbSet<ACHDetailAddendum> ACHDetailAddendums { get; set; }
        public virtual DbSet<ACHPending> ACHPendings { get; set; }
        public virtual DbSet<ACHPresentment> ACHPresentments { get; set; }
        public virtual DbSet<ACHPresentmentType> ACHPresentmentTypes { get; set; }
        public virtual DbSet<ACHProcessingQueue> ACHProcessingQueues { get; set; }
        public virtual DbSet<ACHProcessingType> ACHProcessingTypes { get; set; }
        public virtual DbSet<ACHQueue> ACHQueues { get; set; }
        public virtual DbSet<ACHReason> ACHReasons { get; set; }
        public virtual DbSet<ACHSentParent> ACHSentParents { get; set; }
        public virtual DbSet<AdAstraWebInventory> AdAstraWebInventories { get; set; }
        public virtual DbSet<AgentAction> AgentActions { get; set; }
        public virtual DbSet<AgentResult> AgentResults { get; set; }
        public virtual DbSet<AlternateLender> AlternateLenders { get; set; }
        public virtual DbSet<AMLAdditionalParty> AMLAdditionalParties { get; set; }
        public virtual DbSet<AMLFileLog> AMLFileLogs { get; set; }
        public virtual DbSet<AMLForeignAddress> AMLForeignAddresses { get; set; }
        public virtual DbSet<AMLOccupation> AMLOccupations { get; set; }
        public virtual DbSet<AMLThresholdRule> AMLThresholdRules { get; set; }
        public virtual DbSet<AMLThresholdRuleTransXref> AMLThresholdRuleTransXrefs { get; set; }
        public virtual DbSet<ApiApplication> ApiApplications { get; set; }
        public virtual DbSet<AppConfig> AppConfigs { get; set; }
        public virtual DbSet<AppSetting> AppSettings { get; set; }
        public virtual DbSet<AppValue> AppValues { get; set; }
        public virtual DbSet<AreaCode> AreaCodes { get; set; }
        public virtual DbSet<Attorney> Attorneys { get; set; }
        public virtual DbSet<AttorneyLoan> AttorneyLoans { get; set; }
        public virtual DbSet<AttorneyPayment> AttorneyPayments { get; set; }
        public virtual DbSet<AUDDISAdviceReport> AUDDISAdviceReports { get; set; }
        public virtual DbSet<AUDDISReasonCodeMapping> AUDDISReasonCodeMappings { get; set; }
        public virtual DbSet<AutoBankingReport> AutoBankingReports { get; set; }
        public virtual DbSet<AutoReport> AutoReports { get; set; }
        public virtual DbSet<AutoReportEmail> AutoReportEmails { get; set; }
        public virtual DbSet<AutoReportRunSchedule> AutoReportRunSchedules { get; set; }
        public virtual DbSet<AutoReportSchedule> AutoReportSchedules { get; set; }
        public virtual DbSet<AutoReportTab> AutoReportTabs { get; set; }
        public virtual DbSet<BalSheet_TransDetail> BalSheet_TransDetail { get; set; }
        public virtual DbSet<BalSheet2> BalSheet2 { get; set; }
        public virtual DbSet<BalSheetColumns2> BalSheetColumns2 { get; set; }
        public virtual DbSet<Bank_Status> Bank_Status { get; set; }
        public virtual DbSet<BankClassification> BankClassifications { get; set; }
        public virtual DbSet<BankClassificationType> BankClassificationTypes { get; set; }
        public virtual DbSet<BANK> BANKS { get; set; }
        public virtual DbSet<BanksParent> BanksParents { get; set; }
        public virtual DbSet<BillerOCRRegion> BillerOCRRegions { get; set; }
        public virtual DbSet<BillPayBiller> BillPayBillers { get; set; }
        public virtual DbSet<BillPayVendor> BillPayVendors { get; set; }
        public virtual DbSet<BlockedAddress> BlockedAddresses { get; set; }
        public virtual DbSet<BlockMailing> BlockMailings { get; set; }
        public virtual DbSet<BlockReason> BlockReasons { get; set; }
        public virtual DbSet<BusinessLoan> BusinessLoans { get; set; }
        public virtual DbSet<CABLender> CABLenders { get; set; }
        public virtual DbSet<CapsCCTXRef> CapsCCTXRefs { get; set; }
        public virtual DbSet<CapsHold> CapsHolds { get; set; }
        public virtual DbSet<CapsRun> CapsRuns { get; set; }
        public virtual DbSet<CapsRunStatu> CapsRunStatus { get; set; }
        public virtual DbSet<CapsSkipReason> CapsSkipReasons { get; set; }
        public virtual DbSet<CapsUpdate> CapsUpdates { get; set; }
        public virtual DbSet<CardBatchSettle> CardBatchSettles { get; set; }
        public virtual DbSet<CashedCheck> CashedChecks { get; set; }
        public virtual DbSet<CashedCheckImage> CashedCheckImages { get; set; }
        public virtual DbSet<CashedCheckMICR> CashedCheckMICRs { get; set; }
        public virtual DbSet<CashedCheckPayment> CashedCheckPayments { get; set; }
        public virtual DbSet<CashedCheckPaymentRefund> CashedCheckPaymentRefunds { get; set; }
        public virtual DbSet<CashedCheckPaymentRefundXRef> CashedCheckPaymentRefundXRefs { get; set; }
        public virtual DbSet<CashMoneyToCuroXRef> CashMoneyToCuroXRefs { get; set; }
        public virtual DbSet<CC_Status> CC_Status { get; set; }
        public virtual DbSet<CCardResponse> CCardResponses { get; set; }
        public virtual DbSet<CCardRespons> CCardResponses1 { get; set; }
        public virtual DbSet<Certificate> Certificates { get; set; }
        public virtual DbSet<CheckAgain> CheckAgains { get; set; }
        public virtual DbSet<CheckAgainHistory> CheckAgainHistories { get; set; }
        public virtual DbSet<CheckPaymentType> CheckPaymentTypes { get; set; }
        public virtual DbSet<CheckReturn> CheckReturns { get; set; }
        public virtual DbSet<CheckType> CheckTypes { get; set; }
        public virtual DbSet<chk_type> chk_type { get; set; }
        public virtual DbSet<CollBonusDetail> CollBonusDetails { get; set; }
        public virtual DbSet<CollBonusPTP> CollBonusPTPs { get; set; }
        public virtual DbSet<CollBonusTask> CollBonusTasks { get; set; }
        public virtual DbSet<CollectionAction> CollectionActions { get; set; }
        public virtual DbSet<CollectionAgency> CollectionAgencies { get; set; }
        public virtual DbSet<CollectionAgencyPct> CollectionAgencyPcts { get; set; }
        public virtual DbSet<CollectionMovement> CollectionMovements { get; set; }
        public virtual DbSet<CollectionNote> CollectionNotes { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<CompanyACHBank> CompanyACHBanks { get; set; }
        public virtual DbSet<CompanyDetail> CompanyDetails { get; set; }
        public virtual DbSet<CompanyDocumentResource> CompanyDocumentResources { get; set; }
        public virtual DbSet<CompanyExpenseType> CompanyExpenseTypes { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CourtesyPayout> CourtesyPayouts { get; set; }
        public virtual DbSet<CpiuDetail> CpiuDetails { get; set; }
        public virtual DbSet<CpiuExceptionReport> CpiuExceptionReports { get; set; }
        public virtual DbSet<CpiuMaster> CpiuMasters { get; set; }
        public virtual DbSet<CreditCardAttempt> CreditCardAttempts { get; set; }
        public virtual DbSet<CreditCardBlock> CreditCardBlocks { get; set; }
        public virtual DbSet<CreditCardBrand> CreditCardBrands { get; set; }
        public virtual DbSet<CreditCardResultCode> CreditCardResultCodes { get; set; }
        public virtual DbSet<CreditCardResultCodeType> CreditCardResultCodeTypes { get; set; }
        public virtual DbSet<CreditCard> CreditCards { get; set; }
        public virtual DbSet<CreditCardsEdit> CreditCardsEdits { get; set; }
        public virtual DbSet<CreditCardTran> CreditCardTrans { get; set; }
        public virtual DbSet<CreditCardVendor> CreditCardVendors { get; set; }
        public virtual DbSet<CreditCardXRef> CreditCardXRefs { get; set; }
        public virtual DbSet<CreditRptPrint> CreditRptPrints { get; set; }
        public virtual DbSet<CreditVendor> CreditVendors { get; set; }
        public virtual DbSet<CreditVendorData> CreditVendorDatas { get; set; }
        public virtual DbSet<CuroHelp> CuroHelps { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<CurrencyExchangeConfig> CurrencyExchangeConfigs { get; set; }
        public virtual DbSet<CurrencyExchangeTran> CurrencyExchangeTrans { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerActivity> CustomerActivities { get; set; }
        public virtual DbSet<CustomerAddress> CustomerAddresses { get; set; }
        public virtual DbSet<CustomerAddressEdit> CustomerAddressEdits { get; set; }
        public virtual DbSet<CustomerAppDate> CustomerAppDates { get; set; }
        public virtual DbSet<CustomerBusiness> CustomerBusinesses { get; set; }
        public virtual DbSet<CustomerCreditRpt> CustomerCreditRpts { get; set; }
        public virtual DbSet<CustomerCreditRptDetail> CustomerCreditRptDetails { get; set; }
        public virtual DbSet<CustomerDocument> CustomerDocuments { get; set; }
        public virtual DbSet<CustomerEarnedCredit> CustomerEarnedCredits { get; set; }
        public virtual DbSet<CustomerEdit> CustomerEdits { get; set; }
        public virtual DbSet<CustomerEmployer> CustomerEmployers { get; set; }
        public virtual DbSet<CustomerEmployerEdit> CustomerEmployerEdits { get; set; }
        public virtual DbSet<CustomerExpense> CustomerExpenses { get; set; }
        public virtual DbSet<CustomerExpenseDetail> CustomerExpenseDetails { get; set; }
        public virtual DbSet<CustomerFeedback> CustomerFeedbacks { get; set; }
        public virtual DbSet<CustomerFeedbackCategory> CustomerFeedbackCategories { get; set; }
        public virtual DbSet<CustomerFeedbackResolution> CustomerFeedbackResolutions { get; set; }
        public virtual DbSet<CustomerFeedbackType> CustomerFeedbackTypes { get; set; }
        public virtual DbSet<CustomerFeedbackTypeCategoryXRef> CustomerFeedbackTypeCategoryXRefs { get; set; }
        public virtual DbSet<CustomerFlash> CustomerFlashes { get; set; }
        public virtual DbSet<CustomerFlashORRebate> CustomerFlashORRebates { get; set; }
        public virtual DbSet<CustomerFlashQuestion> CustomerFlashQuestions { get; set; }
        public virtual DbSet<CustomerFlashResponse> CustomerFlashResponses { get; set; }
        public virtual DbSet<CustomerIdentification> CustomerIdentifications { get; set; }
        public virtual DbSet<CustomerIdentificationEdit> CustomerIdentificationEdits { get; set; }
        public virtual DbSet<CustomerIncome> CustomerIncomes { get; set; }
        public virtual DbSet<CustomerLastCreditReport> CustomerLastCreditReports { get; set; }
        public virtual DbSet<CustomerLead> CustomerLeads { get; set; }
        public virtual DbSet<CustomerLeadAction> CustomerLeadActions { get; set; }
        public virtual DbSet<CustomerLeadActivity> CustomerLeadActivities { get; set; }
        public virtual DbSet<CustomerLeadLocation> CustomerLeadLocations { get; set; }
        public virtual DbSet<CustomerLeadNote> CustomerLeadNotes { get; set; }
        public virtual DbSet<CustomerLeadReason> CustomerLeadReasons { get; set; }
        public virtual DbSet<CustomerLeadStatu> CustomerLeadStatus { get; set; }
        public virtual DbSet<CustomerLeadStatusReason> CustomerLeadStatusReasons { get; set; }
        public virtual DbSet<CustomerMergeHistory> CustomerMergeHistories { get; set; }
        public virtual DbSet<CustomerNote> CustomerNotes { get; set; }
        public virtual DbSet<CustomerPhoneNumber> CustomerPhoneNumbers { get; set; }
        public virtual DbSet<CustomerPhoneNumberEdit> CustomerPhoneNumberEdits { get; set; }
        public virtual DbSet<CustomerResponse> CustomerResponses { get; set; }
        public virtual DbSet<CustomerSDNCert> CustomerSDNCerts { get; set; }
        public virtual DbSet<CustomerSurvey> CustomerSurveys { get; set; }
        public virtual DbSet<dba_indexDefragLog> dba_indexDefragLog { get; set; }
        public virtual DbSet<DCardChargeBackXRef> DCardChargeBackXRefs { get; set; }
        public virtual DbSet<DDI> DDIs { get; set; }
        public virtual DbSet<DDIACHHistory> DDIACHHistories { get; set; }
        public virtual DbSet<DDIEditHistory> DDIEditHistories { get; set; }
        public virtual DbSet<DDISend> DDISends { get; set; }
        public virtual DbSet<DDISendDetail> DDISendDetails { get; set; }
        public virtual DbSet<DDISendQueue> DDISendQueues { get; set; }
        public virtual DbSet<DDIStatu> DDIStatus { get; set; }
        public virtual DbSet<Denomination> Denominations { get; set; }
        public virtual DbSet<DepositBag> DepositBags { get; set; }
        public virtual DbSet<DepositBagDetail> DepositBagDetails { get; set; }
        public virtual DbSet<DepositChk> DepositChks { get; set; }
        public virtual DbSet<DepositChkDetail> DepositChkDetails { get; set; }
        public virtual DbSet<DepositDebitCard> DepositDebitCards { get; set; }
        public virtual DbSet<DepositDebitCardDetail> DepositDebitCardDetails { get; set; }
        public virtual DbSet<DialerJob> DialerJobs { get; set; }
        public virtual DbSet<DialerKey> DialerKeys { get; set; }
        public virtual DbSet<DialerResultCode> DialerResultCodes { get; set; }
        public virtual DbSet<DirtyDataGroup> DirtyDataGroups { get; set; }
        public virtual DbSet<DirtyDataJob> DirtyDataJobs { get; set; }
        public virtual DbSet<DirtyDataJobRun> DirtyDataJobRuns { get; set; }
        public virtual DbSet<DiscountLocation> DiscountLocations { get; set; }
        public virtual DbSet<DiscountMaster> DiscountMasters { get; set; }
        public virtual DbSet<DiscountMasterLoanProduct> DiscountMasterLoanProducts { get; set; }
        public virtual DbSet<DiscountSecurity> DiscountSecurities { get; set; }
        public virtual DbSet<DiscountType> DiscountTypes { get; set; }
        public virtual DbSet<DiscountUsed> DiscountUseds { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<DMA> DMAs { get; set; }
        public virtual DbSet<Doc10000Trans> Doc10000Trans { get; set; }
        public virtual DbSet<Doc10000TransDetail> Doc10000TransDetail { get; set; }
        public virtual DbSet<DocImage> DocImages { get; set; }
        public virtual DbSet<DocPrint> DocPrints { get; set; }
        public virtual DbSet<DocTemplate> DocTemplates { get; set; }
        public virtual DbSet<DocumentPrinting> DocumentPrintings { get; set; }
        public virtual DbSet<DocumentResource> DocumentResources { get; set; }
        public virtual DbSet<DocumentSigningStatu> DocumentSigningStatus { get; set; }
        public virtual DbSet<DocuwareCabinet> DocuwareCabinets { get; set; }
        public virtual DbSet<DocuwareLoanLkup> DocuwareLoanLkups { get; set; }
        public virtual DbSet<DocuwareStatu> DocuwareStatus { get; set; }
        public virtual DbSet<DrawerMaster> DrawerMasters { get; set; }
        public virtual DbSet<DrawerMasterParsedCash> DrawerMasterParsedCashes { get; set; }
        public virtual DbSet<DrawerService> DrawerServices { get; set; }
        public virtual DbSet<DrawerX> DrawerXes { get; set; }
        public virtual DbSet<DrawerXService> DrawerXServices { get; set; }
        public virtual DbSet<DrawerZ> DrawerZs { get; set; }
        public virtual DbSet<DrawerZCash> DrawerZCashes { get; set; }
        public virtual DbSet<DrawerZService> DrawerZServices { get; set; }
        public virtual DbSet<DualApprovalMessage> DualApprovalMessages { get; set; }
        public virtual DbSet<EarnedCreditTran> EarnedCreditTrans { get; set; }
        public virtual DbSet<EarnedCreditType> EarnedCreditTypes { get; set; }
        public virtual DbSet<EmailDisposition> EmailDispositions { get; set; }
        public virtual DbSet<EmailTemplate> EmailTemplates { get; set; }
        public virtual DbSet<EndOfDayInventoryDetail> EndOfDayInventoryDetails { get; set; }
        public virtual DbSet<EndOfDayRpt> EndOfDayRpts { get; set; }
        public virtual DbSet<EndOfDayRptDetail> EndOfDayRptDetails { get; set; }
        public virtual DbSet<EOscarBatch> EOscarBatches { get; set; }
        public virtual DbSet<EOscarBatchDetail> EOscarBatchDetails { get; set; }
        public virtual DbSet<EOscarDetailDisputeCode> EOscarDetailDisputeCodes { get; set; }
        public virtual DbSet<EOscarDisputeCode> EOscarDisputeCodes { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<ESignLoan> ESignLoans { get; set; }
        public virtual DbSet<ESignLoanStatu> ESignLoanStatus { get; set; }
        public virtual DbSet<ESignOptIn> ESignOptIns { get; set; }
        public virtual DbSet<ESignOptInDoc> ESignOptInDocs { get; set; }
        public virtual DbSet<ExchangeRate> ExchangeRates { get; set; }
        public virtual DbSet<ExchangeRateDaily> ExchangeRateDailies { get; set; }
        public virtual DbSet<ExcludeFromCapsHistory> ExcludeFromCapsHistories { get; set; }
        public virtual DbSet<ExpenseType> ExpenseTypes { get; set; }
        public virtual DbSet<ExperianCardValidation> ExperianCardValidations { get; set; }
        public virtual DbSet<ExternalAppConfig> ExternalAppConfigs { get; set; }
        public virtual DbSet<ExternalAppMaster> ExternalAppMasters { get; set; }
        public virtual DbSet<ExternalAppRunDate> ExternalAppRunDates { get; set; }
        public virtual DbSet<ExternalApp> ExternalApps { get; set; }
        public virtual DbSet<FcrmAmlCheckTypeXref> FcrmAmlCheckTypeXrefs { get; set; }
        public virtual DbSet<FcrmAmlServiceXRef> FcrmAmlServiceXRefs { get; set; }
        public virtual DbSet<FcrmAmlTransCode> FcrmAmlTransCodes { get; set; }
        public virtual DbSet<FcrmAmlTransCodeXRef> FcrmAmlTransCodeXRefs { get; set; }
        public virtual DbSet<ForceApprovalQuestion> ForceApprovalQuestions { get; set; }
        public virtual DbSet<ForceApprovalValue> ForceApprovalValues { get; set; }
        public virtual DbSet<FormLetter> FormLetters { get; set; }
        public virtual DbSet<FormLetterBatch> FormLetterBatches { get; set; }
        public virtual DbSet<FormLetterBatchBuildLetterProgress> FormLetterBatchBuildLetterProgresses { get; set; }
        public virtual DbSet<FormLetterBatchStatu> FormLetterBatchStatus { get; set; }
        public virtual DbSet<FormLetterBatchValidation> FormLetterBatchValidations { get; set; }
        public virtual DbSet<FormLetterBatchVendorFile> FormLetterBatchVendorFiles { get; set; }
        public virtual DbSet<FormLetterConfig> FormLetterConfigs { get; set; }
        public virtual DbSet<FormLetterEmail> FormLetterEmails { get; set; }
        public virtual DbSet<FormLetterLoanHistoryFile> FormLetterLoanHistoryFiles { get; set; }
        public virtual DbSet<FormLetterLoanHistoryState> FormLetterLoanHistoryStates { get; set; }
        public virtual DbSet<FormLetterOnDemand> FormLetterOnDemands { get; set; }
        public virtual DbSet<FormLetterPrinted> FormLetterPrinteds { get; set; }
        public virtual DbSet<FormLetterProduct> FormLetterProducts { get; set; }
        public virtual DbSet<FormLetterResult> FormLetterResults { get; set; }
        public virtual DbSet<FurtherFinanceExecutionLog> FurtherFinanceExecutionLogs { get; set; }
        public virtual DbSet<FurtherFinanceExecutionLogDetail> FurtherFinanceExecutionLogDetails { get; set; }
        public virtual DbSet<FurtherFinanceJobType> FurtherFinanceJobTypes { get; set; }
        public virtual DbSet<FurtherFinanceOutcome> FurtherFinanceOutcomes { get; set; }
        public virtual DbSet<FurtherFinanceQuery> FurtherFinanceQueries { get; set; }
        public virtual DbSet<FurtherFinanceResult> FurtherFinanceResults { get; set; }
        public virtual DbSet<FurtherFinanceResultDetail> FurtherFinanceResultDetails { get; set; }
        public virtual DbSet<GalileoResponseCode> GalileoResponseCodes { get; set; }
        public virtual DbSet<GiftCard> GiftCards { get; set; }
        public virtual DbSet<GLAcct> GLAccts { get; set; }
        public virtual DbSet<GLAcctGlobal> GLAcctGlobals { get; set; }
        public virtual DbSet<GLAcctGroup> GLAcctGroups { get; set; }
        public virtual DbSet<Global> Globals { get; set; }
        public virtual DbSet<GlobalState> GlobalStates { get; set; }
        public virtual DbSet<GoldConfig> GoldConfigs { get; set; }
        public virtual DbSet<GoldDailyBag> GoldDailyBags { get; set; }
        public virtual DbSet<GoldDailyBagDetail> GoldDailyBagDetails { get; set; }
        public virtual DbSet<GoldItem> GoldItems { get; set; }
        public virtual DbSet<GoldTran> GoldTrans { get; set; }
        public virtual DbSet<GoldTransCustomer> GoldTransCustomers { get; set; }
        public virtual DbSet<GoldTransDetail> GoldTransDetails { get; set; }
        public virtual DbSet<GoldTransfer> GoldTransfers { get; set; }
        public virtual DbSet<GoldTransferDetail> GoldTransferDetails { get; set; }
        public virtual DbSet<GoldTransStoneDetail> GoldTransStoneDetails { get; set; }
        public virtual DbSet<GoodCustomerStudy> GoodCustomerStudies { get; set; }
        public virtual DbSet<IatDialerResult> IatDialerResults { get; set; }
        public virtual DbSet<IdentificationType> IdentificationTypes { get; set; }
        public virtual DbSet<IdentificationTypeAML> IdentificationTypeAMLs { get; set; }
        public virtual DbSet<IdentificationTypeRule> IdentificationTypeRules { get; set; }
        public virtual DbSet<IdentificationTypeRuleXRef> IdentificationTypeRuleXRefs { get; set; }
        public virtual DbSet<IdentificationTypeState> IdentificationTypeStates { get; set; }
        public virtual DbSet<IdentificationTypeVerify> IdentificationTypeVerifies { get; set; }
        public virtual DbSet<IINRange> IINRanges { get; set; }
        public virtual DbSet<ImageCashLetter> ImageCashLetters { get; set; }
        public virtual DbSet<ImageCashLetterBundle> ImageCashLetterBundles { get; set; }
        public virtual DbSet<ImageCashLetterDetail> ImageCashLetterDetails { get; set; }
        public virtual DbSet<IncomeJobType> IncomeJobTypes { get; set; }
        public virtual DbSet<IncomeSource> IncomeSources { get; set; }
        public virtual DbSet<IncomeType> IncomeTypes { get; set; }
        public virtual DbSet<IncomeTypeLocation> IncomeTypeLocations { get; set; }
        public virtual DbSet<IncomeVerificationMessage> IncomeVerificationMessages { get; set; }
        public virtual DbSet<IncomeVerifyMethod> IncomeVerifyMethods { get; set; }
        public virtual DbSet<IncomeVerifyMethodLocation> IncomeVerifyMethodLocations { get; set; }
        public virtual DbSet<InitGLList> InitGLLists { get; set; }
        public virtual DbSet<InsuranceClaim> InsuranceClaims { get; set; }
        public virtual DbSet<InsuranceClaimEdit> InsuranceClaimEdits { get; set; }
        public virtual DbSet<InsuranceClaimStatu> InsuranceClaimStatus { get; set; }
        public virtual DbSet<InsurancePayment> InsurancePayments { get; set; }
        public virtual DbSet<InsurancePaymentBatch> InsurancePaymentBatches { get; set; }
        public virtual DbSet<InsuranceStatu> InsuranceStatus { get; set; }
        public virtual DbSet<InternalProcessEmail> InternalProcessEmails { get; set; }
        public virtual DbSet<InvalidCustomerAddress> InvalidCustomerAddresses { get; set; }
        public virtual DbSet<IPBlock> IPBlocks { get; set; }
        public virtual DbSet<IpToCountry> IpToCountries { get; set; }
        public virtual DbSet<Issuer> Issuers { get; set; }
        public virtual DbSet<IssuerEdit> IssuerEdits { get; set; }
        public virtual DbSet<LegalVerification> LegalVerifications { get; set; }
        public virtual DbSet<Lender> Lenders { get; set; }
        public virtual DbSet<LienHolder> LienHolders { get; set; }
        public virtual DbSet<Loan> Loans { get; set; }
        public virtual DbSet<LoanApplication> LoanApplications { get; set; }
        public virtual DbSet<LoanApplicationAddress> LoanApplicationAddresses { get; set; }
        public virtual DbSet<LoanApplicationAffordSurvey_ToBeDeleted> LoanApplicationAffordSurvey_ToBeDeleted { get; set; }
        public virtual DbSet<LoanApplicationEmployer> LoanApplicationEmployers { get; set; }
        public virtual DbSet<LoanApplicationExpense> LoanApplicationExpenses { get; set; }
        public virtual DbSet<LoanApplicationExpenseDetail> LoanApplicationExpenseDetails { get; set; }
        public virtual DbSet<LoanApplicationIncome> LoanApplicationIncomes { get; set; }
        public virtual DbSet<LoanApplicationProduct> LoanApplicationProducts { get; set; }
        public virtual DbSet<LoanApplicationVehicleInformation> LoanApplicationVehicleInformations { get; set; }
        public virtual DbSet<LoanCCallChange> LoanCCallChanges { get; set; }
        public virtual DbSet<LoanCheck> LoanChecks { get; set; }
        public virtual DbSet<LoanChkAcctChange> LoanChkAcctChanges { get; set; }
        public virtual DbSet<LoanConfigApplyPaymentOrder> LoanConfigApplyPaymentOrders { get; set; }
        public virtual DbSet<LoanCoPledger> LoanCoPledgers { get; set; }
        public virtual DbSet<LoanCreditLimit> LoanCreditLimits { get; set; }
        public virtual DbSet<LoanDepositOrderHistory> LoanDepositOrderHistories { get; set; }
        public virtual DbSet<LoanDepositOrderResetReason> LoanDepositOrderResetReasons { get; set; }
        public virtual DbSet<LoanDoc> LoanDocs { get; set; }
        public virtual DbSet<LoanDocPrinted> LoanDocPrinteds { get; set; }
        public virtual DbSet<LoanDocType> LoanDocTypes { get; set; }
        public virtual DbSet<LoanDocUpload> LoanDocUploads { get; set; }
        public virtual DbSet<LoanDocUsed> LoanDocUseds { get; set; }
        public virtual DbSet<LoanDueDateChange> LoanDueDateChanges { get; set; }
        public virtual DbSet<LoanFunding> LoanFundings { get; set; }
        public virtual DbSet<LoanFundingMethodHistory> LoanFundingMethodHistories { get; set; }
        public virtual DbSet<LoanImport> LoanImports { get; set; }
        public virtual DbSet<LoanImportXRef> LoanImportXRefs { get; set; }
        public virtual DbSet<LoanIncome> LoanIncomes { get; set; }
        public virtual DbSet<LoanNote> LoanNotes { get; set; }
        public virtual DbSet<LoanOverride> LoanOverrides { get; set; }
        public virtual DbSet<LoanPayment> LoanPayments { get; set; }
        public virtual DbSet<LoanPaymentAddToQueue> LoanPaymentAddToQueues { get; set; }
        public virtual DbSet<LoanPaymentCheckPaymentTypeXref> LoanPaymentCheckPaymentTypeXrefs { get; set; }
        public virtual DbSet<LoanPaymentDecreaseAmountOwed> LoanPaymentDecreaseAmountOweds { get; set; }
        public virtual DbSet<LoanPaymentDueDate> LoanPaymentDueDates { get; set; }
        public virtual DbSet<LoanPaymentInsuranceClaimXRef> LoanPaymentInsuranceClaimXRefs { get; set; }
        public virtual DbSet<LoanPaymentLoanCheckXref> LoanPaymentLoanCheckXrefs { get; set; }
        public virtual DbSet<LoanPaymentMPay> LoanPaymentMPays { get; set; }
        public virtual DbSet<LoanPaymentMPayRefund> LoanPaymentMPayRefunds { get; set; }
        public virtual DbSet<LoanPaymentOpenEnd> LoanPaymentOpenEnds { get; set; }
        public virtual DbSet<LoanPaymentOpenEndRefund> LoanPaymentOpenEndRefunds { get; set; }
        public virtual DbSet<LoanPaymentRefund> LoanPaymentRefunds { get; set; }
        public virtual DbSet<LoanPaymentRefundXRef> LoanPaymentRefundXRefs { get; set; }
        public virtual DbSet<LoanPaymentRescind> LoanPaymentRescinds { get; set; }
        public virtual DbSet<LoanPaymentSPay> LoanPaymentSPays { get; set; }
        public virtual DbSet<LoanPaymentSPayRefund> LoanPaymentSPayRefunds { get; set; }
        public virtual DbSet<LoanPaymentSuspendInterest> LoanPaymentSuspendInterests { get; set; }
        public virtual DbSet<LoanPaymentWaiveRIFee> LoanPaymentWaiveRIFees { get; set; }
        public virtual DbSet<LoanProduct> LoanProducts { get; set; }
        public virtual DbSet<LoanProductBlocked> LoanProductBlockeds { get; set; }
        public virtual DbSet<LoanProductConfig> LoanProductConfigs { get; set; }
        public virtual DbSet<LoanProductConfigApprovalRate> LoanProductConfigApprovalRates { get; set; }
        public virtual DbSet<LoanProductConfigEdit> LoanProductConfigEdits { get; set; }
        public virtual DbSet<LoanProductConfigInsuranceRate> LoanProductConfigInsuranceRates { get; set; }
        public virtual DbSet<LoanProductConfigInterestRate> LoanProductConfigInterestRates { get; set; }
        public virtual DbSet<LoanProductConfigLoanFeeRate> LoanProductConfigLoanFeeRates { get; set; }
        public virtual DbSet<LoanProductConfigLoanStat> LoanProductConfigLoanStats { get; set; }
        public virtual DbSet<LoanProductConfigMaxLoanAmtRate> LoanProductConfigMaxLoanAmtRates { get; set; }
        public virtual DbSet<LoanProductConfigOpenEnd> LoanProductConfigOpenEnds { get; set; }
        public virtual DbSet<LoanProductConfigRIRate> LoanProductConfigRIRates { get; set; }
        public virtual DbSet<LoanProductConfigTitle> LoanProductConfigTitles { get; set; }
        public virtual DbSet<LoanProductEnableNewLoan> LoanProductEnableNewLoans { get; set; }
        public virtual DbSet<LoanProductFeature> LoanProductFeatures { get; set; }
        public virtual DbSet<LoanProductFeatureType> LoanProductFeatureTypes { get; set; }
        public virtual DbSet<LoanProductRollover> LoanProductRollovers { get; set; }
        public virtual DbSet<LoanProductTila> LoanProductTilas { get; set; }
        public virtual DbSet<LoanService> LoanServices { get; set; }
        public virtual DbSet<LoanStatusChange> LoanStatusChanges { get; set; }
        public virtual DbSet<LoanWebReviewTemplateXref> LoanWebReviewTemplateXrefs { get; set; }
        public virtual DbSet<LocaleSetting> LocaleSettings { get; set; }
        public virtual DbSet<LocaleTranslator> LocaleTranslators { get; set; }
        public virtual DbSet<LocationConverted> LocationConverteds { get; set; }
        public virtual DbSet<LocationUS_ZipcodesXRef> LocationUS_ZipcodesXRef { get; set; }
        public virtual DbSet<MarketingInvitation> MarketingInvitations { get; set; }
        public virtual DbSet<MarketingInvitationHistory> MarketingInvitationHistories { get; set; }
        public virtual DbSet<Market> Markets { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<MessageClass> MessageClasses { get; set; }
        public virtual DbSet<MessageClient> MessageClients { get; set; }
        public virtual DbSet<MessageScenario> MessageScenarios { get; set; }
        public virtual DbSet<MetroIIBaseSegment> MetroIIBaseSegments { get; set; }
        public virtual DbSet<MimeType> MimeTypes { get; set; }
        public virtual DbSet<MOStatu> MOStatus { get; set; }
        public virtual DbSet<MOStatusHistory> MOStatusHistories { get; set; }
        public virtual DbSet<MPayAmort> MPayAmorts { get; set; }
        public virtual DbSet<MPayAmortDueDateChange> MPayAmortDueDateChanges { get; set; }
        public virtual DbSet<MPayInterest> MPayInterests { get; set; }
        public virtual DbSet<MPayLoan> MPayLoans { get; set; }
        public virtual DbSet<MPayLoanInSyncAdj> MPayLoanInSyncAdjs { get; set; }
        public virtual DbSet<MPayLoanInSyncAdj_Rows> MPayLoanInSyncAdj_Rows { get; set; }
        public virtual DbSet<MPayPayInFull> MPayPayInFulls { get; set; }
        public virtual DbSet<MPayRecalcInterestAdj> MPayRecalcInterestAdjs { get; set; }
        public virtual DbSet<MPayRecalcLoanPaymentAdj> MPayRecalcLoanPaymentAdjs { get; set; }
        public virtual DbSet<MSA> MSAs { get; set; }
        public virtual DbSet<NetSpendTran> NetSpendTrans { get; set; }
        public virtual DbSet<NobleConfiguration> NobleConfigurations { get; set; }
        public virtual DbSet<NoteType> NoteTypes { get; set; }
        public virtual DbSet<OCRRegion> OCRRegions { get; set; }
        public virtual DbSet<OOWSession> OOWSessions { get; set; }
        public virtual DbSet<OOWSessionAlert> OOWSessionAlerts { get; set; }
        public virtual DbSet<OOWSessionError> OOWSessionErrors { get; set; }
        public virtual DbSet<OOWSessionQuestion> OOWSessionQuestions { get; set; }
        public virtual DbSet<OpenEndInterest> OpenEndInterests { get; set; }
        public virtual DbSet<OpenEndInterestRate> OpenEndInterestRates { get; set; }
        public virtual DbSet<OpenEndLoan> OpenEndLoans { get; set; }
        public virtual DbSet<OpenEndLoanStatement> OpenEndLoanStatements { get; set; }
        public virtual DbSet<OpenEndLoanStatementSnapshot> OpenEndLoanStatementSnapshots { get; set; }
        public virtual DbSet<OpenEndRecalcInterestAdj> OpenEndRecalcInterestAdjs { get; set; }
        public virtual DbSet<OpenEndRecalcLoanPaymentAdj> OpenEndRecalcLoanPaymentAdjs { get; set; }
        public virtual DbSet<OpenEndRecalcStatementAdj> OpenEndRecalcStatementAdjs { get; set; }
        public virtual DbSet<OpenEndRecalcStatementSnapshot> OpenEndRecalcStatementSnapshots { get; set; }
        public virtual DbSet<OptInOut> OptInOuts { get; set; }
        public virtual DbSet<OptInOutEdit> OptInOutEdits { get; set; }
        public virtual DbSet<OptPlusBinProduct> OptPlusBinProducts { get; set; }
        public virtual DbSet<OptPlusBinService> OptPlusBinServices { get; set; }
        public virtual DbSet<OptPlusCardDetail> OptPlusCardDetails { get; set; }
        public virtual DbSet<OptPlusCardRIPayment> OptPlusCardRIPayments { get; set; }
        public virtual DbSet<OptPlusCarrier> OptPlusCarriers { get; set; }
        public virtual DbSet<OptPlusDirectDeposit> OptPlusDirectDeposits { get; set; }
        public virtual DbSet<OptPlusEdit> OptPlusEdits { get; set; }
        public virtual DbSet<OptPlusEmail> OptPlusEmails { get; set; }
        public virtual DbSet<OptPlusEmailLocation> OptPlusEmailLocations { get; set; }
        public virtual DbSet<OptPlusEmployment> OptPlusEmployments { get; set; }
        public virtual DbSet<OptPlusExportInitGL> OptPlusExportInitGLs { get; set; }
        public virtual DbSet<OptPlusGlobal> OptPlusGlobals { get; set; }
        public virtual DbSet<OptPlusMerchant> OptPlusMerchants { get; set; }
        public virtual DbSet<OptPlusProduct> OptPlusProducts { get; set; }
        public virtual DbSet<OptPlusRDFAccountCard> OptPlusRDFAccountCards { get; set; }
        public virtual DbSet<OptPlusRDFAuthorizedTransaction> OptPlusRDFAuthorizedTransactions { get; set; }
        public virtual DbSet<OptPlusRDFCustomerMaster> OptPlusRDFCustomerMasters { get; set; }
        public virtual DbSet<OptPlusRDFLookUp> OptPlusRDFLookUps { get; set; }
        public virtual DbSet<OptPlusRDFODTransition> OptPlusRDFODTransitions { get; set; }
        public virtual DbSet<OptPlusRDFPostedTran> OptPlusRDFPostedTrans { get; set; }
        public virtual DbSet<OverShort> OverShorts { get; set; }
        public virtual DbSet<ParseCash> ParseCashes { get; set; }
        public virtual DbSet<PaydayLoan> PaydayLoans { get; set; }
        public virtual DbSet<PaydayLoanApproval> PaydayLoanApprovals { get; set; }
        public virtual DbSet<PaydayLoanQualification> PaydayLoanQualifications { get; set; }
        public virtual DbSet<PaymentPlan> PaymentPlans { get; set; }
        public virtual DbSet<PAYROLL1> PAYROLL1 { get; set; }
        public virtual DbSet<PayStub> PayStubs { get; set; }
        public virtual DbSet<PersonTitle> PersonTitles { get; set; }
        public virtual DbSet<PhoneSkillsCall> PhoneSkillsCalls { get; set; }
        public virtual DbSet<PhoneSkillsGrade> PhoneSkillsGrades { get; set; }
        public virtual DbSet<PhoneSkillsGrader> PhoneSkillsGraders { get; set; }
        public virtual DbSet<PhoneSkillsReason> PhoneSkillsReasons { get; set; }
        public virtual DbSet<PhoneSkillsSequence> PhoneSkillsSequences { get; set; }
        public virtual DbSet<PrepaidCardBin> PrepaidCardBins { get; set; }
        public virtual DbSet<PrepaidCardBinCompany> PrepaidCardBinCompanies { get; set; }
        public virtual DbSet<PrepaidCardGroup> PrepaidCardGroups { get; set; }
        public virtual DbSet<PrepaidCardStopPayment> PrepaidCardStopPayments { get; set; }
        public virtual DbSet<PrepaidCardStopPaymentEdit> PrepaidCardStopPaymentEdits { get; set; }
        public virtual DbSet<PrepaidCardStopPaymentReason> PrepaidCardStopPaymentReasons { get; set; }
        public virtual DbSet<PrepaidCardTran> PrepaidCardTrans { get; set; }
        public virtual DbSet<PrepaidCardTransAction> PrepaidCardTransActions { get; set; }
        public virtual DbSet<PrepaidFISAccountBalance> PrepaidFISAccountBalances { get; set; }
        public virtual DbSet<PrepaidFISAuthTran> PrepaidFISAuthTrans { get; set; }
        public virtual DbSet<PrepaidFISCustomerMaster> PrepaidFISCustomerMasters { get; set; }
        public virtual DbSet<PrepaidFISPostedTran> PrepaidFISPostedTrans { get; set; }
        public virtual DbSet<PrescreenQuestion> PrescreenQuestions { get; set; }
        public virtual DbSet<PrescreenQuestionState> PrescreenQuestionStates { get; set; }
        public virtual DbSet<PrescreenQuestionType> PrescreenQuestionTypes { get; set; }
        public virtual DbSet<PRICE> PRICES { get; set; }
        public virtual DbSet<ProcessConfig> ProcessConfigs { get; set; }
        public virtual DbSet<ProcessConfigDetail> ProcessConfigDetails { get; set; }
        public virtual DbSet<ProcessConfigDetailHistory> ProcessConfigDetailHistories { get; set; }
        public virtual DbSet<ProcessConfigInstance> ProcessConfigInstances { get; set; }
        public virtual DbSet<ProcessConfigInstanceGroup> ProcessConfigInstanceGroups { get; set; }
        public virtual DbSet<ProcessConfigInstanceTeller> ProcessConfigInstanceTellers { get; set; }
        public virtual DbSet<ProcessSchedule> ProcessSchedules { get; set; }
        public virtual DbSet<ProductOpenLoanMatrix> ProductOpenLoanMatrices { get; set; }
        public virtual DbSet<PromiseToPay> PromiseToPays { get; set; }
        public virtual DbSet<PromiseToPayDetail> PromiseToPayDetails { get; set; }
        public virtual DbSet<PromiseToPayDetailEdit> PromiseToPayDetailEdits { get; set; }
        public virtual DbSet<PromiseToPayDetailTran> PromiseToPayDetailTrans { get; set; }
        public virtual DbSet<PromiseToPayTimeSlotConfig> PromiseToPayTimeSlotConfigs { get; set; }
        public virtual DbSet<PurchaseService> PurchaseServices { get; set; }
        public virtual DbSet<PushNotification> PushNotifications { get; set; }
        public virtual DbSet<RbcEFundBatch> RbcEFundBatches { get; set; }
        public virtual DbSet<RbcEFundBatchDetail> RbcEFundBatchDetails { get; set; }
        public virtual DbSet<RbcEFundBatchSummary> RbcEFundBatchSummaries { get; set; }
        public virtual DbSet<RbcEFundResponseCode> RbcEFundResponseCodes { get; set; }
        public virtual DbSet<RbcEFundSecurity> RbcEFundSecurities { get; set; }
        public virtual DbSet<ReasonForArrear> ReasonForArrears { get; set; }
        public virtual DbSet<Receipt> Receipts { get; set; }
        public virtual DbSet<RedactedWord> RedactedWords { get; set; }
        public virtual DbSet<ReferralMethod> ReferralMethods { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<REL> RELS { get; set; }
        public virtual DbSet<RemovedReason> RemovedReasons { get; set; }
        public virtual DbSet<RepoCaseHistory> RepoCaseHistories { get; set; }
        public virtual DbSet<ReturnCheckDetail> ReturnCheckDetails { get; set; }
        public virtual DbSet<ReturnCheckFile> ReturnCheckFiles { get; set; }
        public virtual DbSet<ReturnCheckMatch> ReturnCheckMatches { get; set; }
        public virtual DbSet<RIAgingHistory> RIAgingHistories { get; set; }
        public virtual DbSet<RiBalanceHistory> RiBalanceHistories { get; set; }
        public virtual DbSet<RiccAutoRoll> RiccAutoRolls { get; set; }
        public virtual DbSet<RICCConfig> RICCConfigs { get; set; }
        public virtual DbSet<RiccHold> RiccHolds { get; set; }
        public virtual DbSet<RiccPayment> RiccPayments { get; set; }
        public virtual DbSet<RiccUpdate> RiccUpdates { get; set; }
        public virtual DbSet<RIPTPPaymentPlanConfig> RIPTPPaymentPlanConfigs { get; set; }
        public virtual DbSet<RI> RIS { get; set; }
        public virtual DbSet<RISAUDIT> RISAUDITs { get; set; }
        public virtual DbSet<RISREPT> RISREPTs { get; set; }
        public virtual DbSet<RisTask> RisTasks { get; set; }
        public virtual DbSet<RISTYPE> RISTYPEs { get; set; }
        public virtual DbSet<RiUrgentNote> RiUrgentNotes { get; set; }
        public virtual DbSet<RolloverRequest> RolloverRequests { get; set; }
        public virtual DbSet<RolloverRequestDeclineReason> RolloverRequestDeclineReasons { get; set; }
        public virtual DbSet<RolloverRequestStatu> RolloverRequestStatus { get; set; }
        public virtual DbSet<RuleDef> RuleDefs { get; set; }
        public virtual DbSet<RuleDefEdit> RuleDefEdits { get; set; }
        public virtual DbSet<RuleDefSet> RuleDefSets { get; set; }
        public virtual DbSet<RuleDefSetDetail> RuleDefSetDetails { get; set; }
        public virtual DbSet<RuleDefSetDetailEdit> RuleDefSetDetailEdits { get; set; }
        public virtual DbSet<RuleDefType> RuleDefTypes { get; set; }
        public virtual DbSet<ScannedDocument> ScannedDocuments { get; set; }
        public virtual DbSet<ScannedDocumentOverride> ScannedDocumentOverrides { get; set; }
        public virtual DbSet<SDNAdd> SDNAdds { get; set; }
        public virtual DbSet<SDNAlt> SDNAlts { get; set; }
        public virtual DbSet<SDNList> SDNLists { get; set; }
        public virtual DbSet<SDNMain> SDNMains { get; set; }
        public virtual DbSet<SdnMatch> SdnMatches { get; set; }
        public virtual DbSet<SecurityAnswer> SecurityAnswers { get; set; }
        public virtual DbSet<SecurityGroup> SecurityGroups { get; set; }
        public virtual DbSet<SecurityQuestion> SecurityQuestions { get; set; }
        public virtual DbSet<ServiceDetail> ServiceDetails { get; set; }
        public virtual DbSet<ServiceMaster> ServiceMasters { get; set; }
        public virtual DbSet<ServiceSubItem> ServiceSubItems { get; set; }
        public virtual DbSet<ServiceTran> ServiceTrans { get; set; }
        public virtual DbSet<ServiceTransDetail> ServiceTransDetails { get; set; }
        public virtual DbSet<SG_RIGHTS> SG_RIGHTS { get; set; }
        public virtual DbSet<SignatureLoanApproval> SignatureLoanApprovals { get; set; }
        public virtual DbSet<SkipTraceConfig> SkipTraceConfigs { get; set; }
        public virtual DbSet<SkipTraceEvents_NotUsed> SkipTraceEvents_NotUsed { get; set; }
        public virtual DbSet<SkipTraceStep> SkipTraceSteps { get; set; }
        public virtual DbSet<SkipTraceStep_AuditCategory> SkipTraceStep_AuditCategory { get; set; }
        public virtual DbSet<SkipTraceStep_Location> SkipTraceStep_Location { get; set; }
        public virtual DbSet<SkipTraceStep_ProductCode> SkipTraceStep_ProductCode { get; set; }
        public virtual DbSet<SkipTraceThread> SkipTraceThreads { get; set; }
        public virtual DbSet<SkipTraceVendor> SkipTraceVendors { get; set; }
        public virtual DbSet<SMSCommandMapping> SMSCommandMappings { get; set; }
        public virtual DbSet<SMSFailedSend> SMSFailedSends { get; set; }
        public virtual DbSet<SMSInbound> SMSInbounds { get; set; }
        public virtual DbSet<SMSOutbound> SMSOutbounds { get; set; }
        public virtual DbSet<SMSOxygenErrorCode> SMSOxygenErrorCodes { get; set; }
        public virtual DbSet<SMSResponse> SMSResponses { get; set; }
        public virtual DbSet<SMSSender> SMSSenders { get; set; }
        public virtual DbSet<SMSTemplate> SMSTemplates { get; set; }
        public virtual DbSet<SPayInterest> SPayInterests { get; set; }
        public virtual DbSet<SPayLoan> SPayLoans { get; set; }
        public virtual DbSet<SPayLoanInSyncAdj> SPayLoanInSyncAdjs { get; set; }
        public virtual DbSet<SPaySchedRollover> SPaySchedRollovers { get; set; }
        public virtual DbSet<SPaySchedRolloverDetail> SPaySchedRolloverDetails { get; set; }
        public virtual DbSet<SpecialMessage> SpecialMessages { get; set; }
        public virtual DbSet<SpecialMessage_AzCusts> SpecialMessage_AzCusts { get; set; }
        public virtual DbSet<SpecialMessageLoanProduct> SpecialMessageLoanProducts { get; set; }
        public virtual DbSet<SpecialMessageLocation> SpecialMessageLocations { get; set; }
        public virtual DbSet<Store_Windows> Store_Windows { get; set; }
        public virtual DbSet<StoreClosed> StoreCloseds { get; set; }
        public virtual DbSet<StoreClosedDetail> StoreClosedDetails { get; set; }
        public virtual DbSet<TaskActionResult> TaskActionResults { get; set; }
        public virtual DbSet<TaskActionResultXref> TaskActionResultXrefs { get; set; }
        public virtual DbSet<TellerComputer> TellerComputers { get; set; }
        public virtual DbSet<TELLERID> TELLERIDs { get; set; }
        public virtual DbSet<TellerIDEdit> TellerIDEdits { get; set; }
        public virtual DbSet<TellerLogin> TellerLogins { get; set; }
        public virtual DbSet<TellerParsedCashException> TellerParsedCashExceptions { get; set; }
        public virtual DbSet<TellerPwdHistory> TellerPwdHistories { get; set; }
        public virtual DbSet<TellerSecurity> TellerSecurities { get; set; }
        public virtual DbSet<TellerTitle> TellerTitles { get; set; }
        public virtual DbSet<TellerTitleEdit> TellerTitleEdits { get; set; }
        public virtual DbSet<TellerType> TellerTypes { get; set; }
        public virtual DbSet<TempLoanProductSplit> TempLoanProductSplits { get; set; }
        public virtual DbSet<TestCreditCard> TestCreditCards { get; set; }
        public virtual DbSet<TitleLoan> TitleLoans { get; set; }
        public virtual DbSet<TitleLoanApproval> TitleLoanApprovals { get; set; }
        public virtual DbSet<TotalDailyFee> TotalDailyFees { get; set; }
        public virtual DbSet<TransDetail> TransDetails { get; set; }
        public virtual DbSet<TransDetailAcct> TransDetailAccts { get; set; }
        public virtual DbSet<TransDetailCash> TransDetailCashes { get; set; }
        public virtual DbSet<TransDetailCashParsedCash> TransDetailCashParsedCashes { get; set; }
        public virtual DbSet<TransDetailCheck> TransDetailChecks { get; set; }
        public virtual DbSet<TransDetailIntShort> TransDetailIntShorts { get; set; }
        public virtual DbSet<TransDetailLoan> TransDetailLoans { get; set; }
        public virtual DbSet<TransDetailService> TransDetailServices { get; set; }
        public virtual DbSet<TransferFund> TransferFunds { get; set; }
        public virtual DbSet<TransPOS> TransPOS { get; set; }
        public virtual DbSet<TransUnionCode> TransUnionCodes { get; set; }
        public virtual DbSet<UDDReport> UDDReports { get; set; }
        public virtual DbSet<UDDReportDetail> UDDReportDetails { get; set; }
        public virtual DbSet<US_States> US_States { get; set; }
        public virtual DbSet<US_Zipcodes> US_Zipcodes { get; set; }
        public virtual DbSet<UtilRecalcLog> UtilRecalcLogs { get; set; }
        public virtual DbSet<UtilRecalcLogDetail> UtilRecalcLogDetails { get; set; }
        public virtual DbSet<VaultCount> VaultCounts { get; set; }
        public virtual DbSet<VaultCountCalcParsedCash> VaultCountCalcParsedCashes { get; set; }
        public virtual DbSet<VaultCountEnteredParsedCash> VaultCountEnteredParsedCashes { get; set; }
        public virtual DbSet<VaultCountService> VaultCountServices { get; set; }
        public virtual DbSet<VaultMaster> VaultMasters { get; set; }
        public virtual DbSet<VaultMasterParsedCash> VaultMasterParsedCashes { get; set; }
        public virtual DbSet<VaultMgrAssignment> VaultMgrAssignments { get; set; }
        public virtual DbSet<VaultMgrAuthorization> VaultMgrAuthorizations { get; set; }
        public virtual DbSet<VaultMgrAuthorizationDetail> VaultMgrAuthorizationDetails { get; set; }
        public virtual DbSet<VaultMgrAuthorizationNote> VaultMgrAuthorizationNotes { get; set; }
        public virtual DbSet<VaultRecalcAdj> VaultRecalcAdjs { get; set; }
        public virtual DbSet<VaultService> VaultServices { get; set; }
        public virtual DbSet<Vehicle> Vehicles { get; set; }
        public virtual DbSet<VehicleHistory> VehicleHistories { get; set; }
        public virtual DbSet<VehicleQuote> VehicleQuotes { get; set; }
        public virtual DbSet<VeritecLoanID> VeritecLoanIDs { get; set; }
        public virtual DbSet<Visitor> Visitors { get; set; }
        public virtual DbSet<VisitorApiAuthorization> VisitorApiAuthorizations { get; set; }
        public virtual DbSet<VisitorDevice> VisitorDevices { get; set; }
        public virtual DbSet<VisitorEdit> VisitorEdits { get; set; }
        public virtual DbSet<VisitorEmail> VisitorEmails { get; set; }
        public virtual DbSet<VisitorEmailDisposition> VisitorEmailDispositions { get; set; }
        public virtual DbSet<VisitorEmailExcludedSender> VisitorEmailExcludedSenders { get; set; }
        public virtual DbSet<VisitorHistory> VisitorHistories { get; set; }
        public virtual DbSet<VisitorSecurityQuestion> VisitorSecurityQuestions { get; set; }
        public virtual DbSet<VMATransType> VMATransTypes { get; set; }
        public virtual DbSet<WebArchive> WebArchives { get; set; }
        public virtual DbSet<WebBlob> WebBlobs { get; set; }
        public virtual DbSet<WebBlobLoanApplicationXref> WebBlobLoanApplicationXrefs { get; set; }
        public virtual DbSet<WebBlobLoanXref> WebBlobLoanXrefs { get; set; }
        public virtual DbSet<WebBlobType> WebBlobTypes { get; set; }
        public virtual DbSet<WebBlobVisitorEmailXref> WebBlobVisitorEmailXrefs { get; set; }
        public virtual DbSet<WebCallApplicationModeAudit> WebCallApplicationModeAudits { get; set; }
        public virtual DbSet<WebCallApplicationMode> WebCallApplicationModes { get; set; }
        public virtual DbSet<WebCallApplicationStatusHistory> WebCallApplicationStatusHistories { get; set; }
        public virtual DbSet<WebCallAuthorizedVisitorContact> WebCallAuthorizedVisitorContacts { get; set; }
        public virtual DbSet<WebCallBatchAction> WebCallBatchActions { get; set; }
        public virtual DbSet<WebCallBatchCriteria> WebCallBatchCriterias { get; set; }
        public virtual DbSet<WebCallBatchTask> WebCallBatchTasks { get; set; }
        public virtual DbSet<WebCallBatchTaskExecutionHistory> WebCallBatchTaskExecutionHistories { get; set; }
        public virtual DbSet<WebCallCampaign> WebCallCampaigns { get; set; }
        public virtual DbSet<WebCallCampaignCategory> WebCallCampaignCategories { get; set; }
        public virtual DbSet<WebCallCategory> WebCallCategories { get; set; }
        public virtual DbSet<WebCallCatRarrAlia> WebCallCatRarrAlias { get; set; }
        public virtual DbSet<WebCallCCTimerLog> WebCallCCTimerLogs { get; set; }
        public virtual DbSet<WebCallCenterLogin> WebCallCenterLogins { get; set; }
        public virtual DbSet<WebCallChatCannedRespons> WebCallChatCannedResponses { get; set; }
        public virtual DbSet<WebCallChatMessage> WebCallChatMessages { get; set; }
        public virtual DbSet<WebCallChatSession> WebCallChatSessions { get; set; }
        public virtual DbSet<WebCallChatStatu> WebCallChatStatus { get; set; }
        public virtual DbSet<WebCallChatTopic> WebCallChatTopics { get; set; }
        public virtual DbSet<WebCallChatUser> WebCallChatUsers { get; set; }
        public virtual DbSet<WebCallCSRReportColumn> WebCallCSRReportColumns { get; set; }
        public virtual DbSet<WebCallCSRReportColumnRARR> WebCallCSRReportColumnRARRs { get; set; }
        public virtual DbSet<WebCallDualAuth> WebCallDualAuths { get; set; }
        public virtual DbSet<WebCallEmailTemplate> WebCallEmailTemplates { get; set; }
        public virtual DbSet<WebCallFAQ> WebCallFAQs { get; set; }
        public virtual DbSet<WebCallFAQAttachment> WebCallFAQAttachments { get; set; }
        public virtual DbSet<WebCallFAQCategory> WebCallFAQCategories { get; set; }
        public virtual DbSet<WebCallFeature> WebCallFeatures { get; set; }
        public virtual DbSet<WebCallIntraChatMessage> WebCallIntraChatMessages { get; set; }
        public virtual DbSet<WebCallIntraChatSession> WebCallIntraChatSessions { get; set; }
        public virtual DbSet<WebCallInvalidPhoneNumber> WebCallInvalidPhoneNumbers { get; set; }
        public virtual DbSet<WebCallLoanAppSourceApp> WebCallLoanAppSourceApps { get; set; }
        public virtual DbSet<WebCallLoanProductConfig> WebCallLoanProductConfigs { get; set; }
        public virtual DbSet<WebCallLoggingCategory> WebCallLoggingCategories { get; set; }
        public virtual DbSet<WebCallLoggingCategoryLog> WebCallLoggingCategoryLogs { get; set; }
        public virtual DbSet<WebCallLoggingLog> WebCallLoggingLogs { get; set; }
        public virtual DbSet<WebCallOnlineStatusDisplayLookup> WebCallOnlineStatusDisplayLookups { get; set; }
        public virtual DbSet<WebCallQueue> WebCallQueues { get; set; }
        public virtual DbSet<WebCallQueueAudit> WebCallQueueAudits { get; set; }
        public virtual DbSet<WebCallQueueConfiguration> WebCallQueueConfigurations { get; set; }
        public virtual DbSet<WebCallQueueLoanAppAudit> WebCallQueueLoanAppAudits { get; set; }
        public virtual DbSet<WebCallQueueStatu> WebCallQueueStatus { get; set; }
        public virtual DbSet<WebCallQueueType> WebCallQueueTypes { get; set; }
        public virtual DbSet<WebCallQuickNote> WebCallQuickNotes { get; set; }
        public virtual DbSet<WebCallRARR> WebCallRARRs { get; set; }
        public virtual DbSet<WebCallRARRAction> WebCallRARRActions { get; set; }
        public virtual DbSet<WebCallRARRCategoryReason> WebCallRARRCategoryReasons { get; set; }
        public virtual DbSet<WebCallRARReason> WebCallRARReasons { get; set; }
        public virtual DbSet<WebCallRARResult1> WebCallRARResult1 { get; set; }
        public virtual DbSet<WebCallRARResult2> WebCallRARResult2 { get; set; }
        public virtual DbSet<WebCallRARRFeature> WebCallRARRFeatures { get; set; }
        public virtual DbSet<WebCallRarrGroup> WebCallRarrGroups { get; set; }
        public virtual DbSet<WebCallRARRHistory> WebCallRARRHistories { get; set; }
        public virtual DbSet<WebCallRecordingArchive> WebCallRecordingArchives { get; set; }
        public virtual DbSet<WebCallTeam> WebCallTeams { get; set; }
        public virtual DbSet<WebCallTeamUser> WebCallTeamUsers { get; set; }
        public virtual DbSet<WebCallUserSetting> WebCallUserSettings { get; set; }
        public virtual DbSet<WebCallVisitorAlert> WebCallVisitorAlerts { get; set; }
        public virtual DbSet<WebCallVisitorAlertsAudit> WebCallVisitorAlertsAudits { get; set; }
        public virtual DbSet<WebCallWebEmergencyAlertTemplate> WebCallWebEmergencyAlertTemplates { get; set; }
        public virtual DbSet<WebCallWorkItemCategoryHistory> WebCallWorkItemCategoryHistories { get; set; }
        public virtual DbSet<WebCallWorkQueue> WebCallWorkQueues { get; set; }
        public virtual DbSet<WebDailyReport> WebDailyReports { get; set; }
        public virtual DbSet<WebDailyReportField> WebDailyReportFields { get; set; }
        public virtual DbSet<WebDailyReportState> WebDailyReportStates { get; set; }
        public virtual DbSet<WebDialerCallResult> WebDialerCallResults { get; set; }
        public virtual DbSet<WebDialerPhoneLine> WebDialerPhoneLines { get; set; }
        public virtual DbSet<WebDialerResult> WebDialerResults { get; set; }
        public virtual DbSet<WebDialerResultType> WebDialerResultTypes { get; set; }
        public virtual DbSet<WebDialerStatu> WebDialerStatus { get; set; }
        public virtual DbSet<WebDialerUploadHistory> WebDialerUploadHistories { get; set; }
        public virtual DbSet<WebDialerUser> WebDialerUsers { get; set; }
        public virtual DbSet<WebEmailNote> WebEmailNotes { get; set; }
        public virtual DbSet<WebErrorLog> WebErrorLogs { get; set; }
        public virtual DbSet<WebImage> WebImages { get; set; }
        public virtual DbSet<WebLead> WebLeads { get; set; }
        public virtual DbSet<WebLeadBuyer> WebLeadBuyers { get; set; }
        public virtual DbSet<WebLeadGen> WebLeadGens { get; set; }
        public virtual DbSet<WebLeadGenAddress> WebLeadGenAddresses { get; set; }
        public virtual DbSet<WebLeadGenField> WebLeadGenFields { get; set; }
        public virtual DbSet<WebLeadGenStatistic> WebLeadGenStatistics { get; set; }
        public virtual DbSet<WebLeadGenTier> WebLeadGenTiers { get; set; }
        public virtual DbSet<WebLeadGenTranslation> WebLeadGenTranslations { get; set; }
        public virtual DbSet<WebLeadPostData> WebLeadPostDatas { get; set; }
        public virtual DbSet<WebLeadSale> WebLeadSales { get; set; }
        public virtual DbSet<WebLoanCreditFraud> WebLoanCreditFrauds { get; set; }
        public virtual DbSet<WebPixelVendor> WebPixelVendors { get; set; }
        public virtual DbSet<WebPixelVendorData> WebPixelVendorDatas { get; set; }
        public virtual DbSet<WebPixelVendorDetail> WebPixelVendorDetails { get; set; }
        public virtual DbSet<WebReferralMethod> WebReferralMethods { get; set; }
        public virtual DbSet<WebRemoteControl> WebRemoteControls { get; set; }
        public virtual DbSet<WebReportByApp> WebReportByApps { get; set; }
        public virtual DbSet<WebReportByLoan> WebReportByLoans { get; set; }
        public virtual DbSet<WebReviewTemplate> WebReviewTemplates { get; set; }
        public virtual DbSet<WebSiteEvent> WebSiteEvents { get; set; }
        public virtual DbSet<WebVisit> WebVisits { get; set; }
        public virtual DbSet<WebVisitSource> WebVisitSources { get; set; }
        public virtual DbSet<WebVisitSrcXref> WebVisitSrcXrefs { get; set; }
        public virtual DbSet<WireTransferFileImport> WireTransferFileImports { get; set; }
        public virtual DbSet<WireTransferMatch> WireTransferMatches { get; set; }
        public virtual DbSet<WireTransferMatchEdit> WireTransferMatchEdits { get; set; }
        public virtual DbSet<WSConfig> WSConfigs { get; set; }
        public virtual DbSet<WSOperation> WSOperations { get; set; }
        public virtual DbSet<WSResponse> WSResponses { get; set; }
        public virtual DbSet<ZeroDollarAuth> ZeroDollarAuths { get; set; }
        public virtual DbSet<ZipArea> ZipAreas { get; set; }
        public virtual DbSet<C_ErrorLogTest> C_ErrorLogTest { get; set; }
        public virtual DbSet<AACbExportDataArchive> AACbExportDataArchives { get; set; }
        public virtual DbSet<ACHGroup> ACHGroups { get; set; }
        public virtual DbSet<AUDDISAdviceReportDetail> AUDDISAdviceReportDetails { get; set; }
        public virtual DbSet<CreditCardResultCodeEdit> CreditCardResultCodeEdits { get; set; }
        public virtual DbSet<CustomerFlashMPayRebate> CustomerFlashMPayRebates { get; set; }
        public virtual DbSet<CustomerIncomeBackup> CustomerIncomeBackups { get; set; }
        public virtual DbSet<EmploymentRegion> EmploymentRegions { get; set; }
        public virtual DbSet<EmploymentRequest> EmploymentRequests { get; set; }
        public virtual DbSet<InternalProcessEmailBody> InternalProcessEmailBodies { get; set; }
        public virtual DbSet<InternalProcessEmailType> InternalProcessEmailTypes { get; set; }
        public virtual DbSet<KBB_Log_Config> KBB_Log_Config { get; set; }
        public virtual DbSet<LoanApplicationBU> LoanApplicationBUs { get; set; }
        public virtual DbSet<LoanApplicationDiscount> LoanApplicationDiscounts { get; set; }
        public virtual DbSet<LoanProductEnableNewLoanBackup> LoanProductEnableNewLoanBackups { get; set; }
        public virtual DbSet<MPayIntDupNeg> MPayIntDupNegs { get; set; }
        public virtual DbSet<MPayIntDupPos> MPayIntDupPos { get; set; }
        public virtual DbSet<OEndLoanInSyncAdj> OEndLoanInSyncAdjs { get; set; }
        public virtual DbSet<OEndVaultTroubleshooting> OEndVaultTroubleshootings { get; set; }
        public virtual DbSet<OptPlusExportTransCode> OptPlusExportTransCodes { get; set; }
        public virtual DbSet<RitaPwd> RitaPwds { get; set; }
        public virtual DbSet<SkipTraceConfig_RisAudit> SkipTraceConfig_RisAudit { get; set; }
        public virtual DbSet<SkipTraceThreadBackUp> SkipTraceThreadBackUps { get; set; }
        public virtual DbSet<TransferFundsInterStore> TransferFundsInterStores { get; set; }
        public virtual DbSet<WebAlert> WebAlerts { get; set; }
        public virtual DbSet<WebCallRARRType> WebCallRARRTypes { get; set; }
        public virtual DbSet<Docuware_View> Docuware_View { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<Svc_Tran> Svc_Tran { get; set; }
        public virtual DbSet<syscolumns_view> syscolumns_view { get; set; }
        public virtual DbSet<sysobjects_view> sysobjects_view { get; set; }
        public virtual DbSet<systypes_view> systypes_view { get; set; }
        public virtual DbSet<vw_Ach_Trecs> vw_Ach_Trecs { get; set; }
        public virtual DbSet<vw_AppSetting> vw_AppSetting { get; set; }
        public virtual DbSet<vw_CashedCheckRate> vw_CashedCheckRate { get; set; }
        public virtual DbSet<vw_CashedCheckRateTable> vw_CashedCheckRateTable { get; set; }
        public virtual DbSet<vw_CustomerEmployerIncome> vw_CustomerEmployerIncome { get; set; }
        public virtual DbSet<vw_DocuwareInfoByCustomerDocumentKey> vw_DocuwareInfoByCustomerDocumentKey { get; set; }
        public virtual DbSet<vw_DocuwareInfoByTransDetailKey> vw_DocuwareInfoByTransDetailKey { get; set; }
        public virtual DbSet<vw_Eos310> vw_Eos310 { get; set; }
        public virtual DbSet<vw_EosMoneyGrams> vw_EosMoneyGrams { get; set; }
        public virtual DbSet<vw_EosMoneyOrder> vw_EosMoneyOrder { get; set; }
        public virtual DbSet<vw_LoanApplication> vw_LoanApplication { get; set; }
        public virtual DbSet<vw_LoanApplicationEmployerIncome> vw_LoanApplicationEmployerIncome { get; set; }
        public virtual DbSet<vw_LoansByStatus> vw_LoansByStatus { get; set; }
        public virtual DbSet<vw_Notes_AchHistory> vw_Notes_AchHistory { get; set; }
        public virtual DbSet<vw_Notes_CheckAgain> vw_Notes_CheckAgain { get; set; }
        public virtual DbSet<vw_Notes_CheckPayment> vw_Notes_CheckPayment { get; set; }
        public virtual DbSet<vw_Notes_CollectionMovement> vw_Notes_CollectionMovement { get; set; }
        public virtual DbSet<vw_Notes_Contacts> vw_Notes_Contacts { get; set; }
        public virtual DbSet<vw_Notes_CustomerEdit> vw_Notes_CustomerEdit { get; set; }
        public virtual DbSet<vw_Notes_IssuerEdit> vw_Notes_IssuerEdit { get; set; }
        public virtual DbSet<vw_Notes_Letters> vw_Notes_Letters { get; set; }
        public virtual DbSet<vw_Notes_LoanPayment> vw_Notes_LoanPayment { get; set; }
        public virtual DbSet<vw_Notes_ManualCcAttempt> vw_Notes_ManualCcAttempt { get; set; }
        public virtual DbSet<vw_Notes_NoteHistory> vw_Notes_NoteHistory { get; set; }
        public virtual DbSet<vw_Notes_RICC> vw_Notes_RICC { get; set; }
        public virtual DbSet<vw_QuickAndDirtyChkRates> vw_QuickAndDirtyChkRates { get; set; }
        public virtual DbSet<vw_SharePoint_StoresList> vw_SharePoint_StoresList { get; set; }
        public virtual DbSet<vw_TaskActionResult> vw_TaskActionResult { get; set; }
        public virtual DbSet<Xah> Xahs { get; set; }
        public virtual DbSet<Xca> Xcas { get; set; }
        public virtual DbSet<Xccp> Xccps { get; set; }
        public virtual DbSet<Xcct> Xccts { get; set; }
        public virtual DbSet<Xcm> Xcms { get; set; }
        public virtual DbSet<Xfl> Xfls { get; set; }
        public virtual DbSet<Xflb> Xflbs { get; set; }
        public virtual DbSet<Xflp> Xflps { get; set; }
        public virtual DbSet<Xflr> Xflrs { get; set; }
        public virtual DbSet<Xl> Xls { get; set; }
        public virtual DbSet<Xlddc> Xlddcs { get; set; }
        public virtual DbSet<Xlp> Xlps { get; set; }
        public virtual DbSet<Xlpc> Xlpcs { get; set; }
        public virtual DbSet<Xlpenl> Xlpenls { get; set; }
        public virtual DbSet<Xlpmp> Xlpmps { get; set; }
        public virtual DbSet<Xlpoe> Xlpoes { get; set; }
        public virtual DbSet<Xlpsp> Xlpsps { get; set; }
        public virtual DbSet<Xmpi> Xmpis { get; set; }
        public virtual DbSet<Xmpl> Xmpls { get; set; }
        public virtual DbSet<Xmplisa> Xmplisas { get; set; }
        public virtual DbSet<Xoei> Xoeis { get; set; }
        public virtual DbSet<Xoel> Xoels { get; set; }
        public virtual DbSet<Xrr> Xrrs { get; set; }
        public virtual DbSet<Xsd> Xsds { get; set; }
        public virtual DbSet<Xsm> Xsms { get; set; }
        public virtual DbSet<Xsplisa> Xsplisas { get; set; }
        public virtual DbSet<Xssrd> Xssrds { get; set; }
        public virtual DbSet<Xst> Xsts { get; set; }
        public virtual DbSet<Xtd> Xtds { get; set; }
        public virtual DbSet<Xtda> Xtdas { get; set; }
        public virtual DbSet<Xtdcash> Xtdcashes { get; set; }
        public virtual DbSet<Xtdcheck> Xtdchecks { get; set; }
        public virtual DbSet<Xtdloan> Xtdloans { get; set; }
        public virtual DbSet<Xti> Xtis { get; set; }
        public virtual DbSet<Xtp> Xtps { get; set; }
    
        public virtual int CommandExecute(string command, string comment, Nullable<int> mode, string execute)
        {
            var commandParameter = command != null ?
                new ObjectParameter("Command", command) :
                new ObjectParameter("Command", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var modeParameter = mode.HasValue ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(int));
    
            var executeParameter = execute != null ?
                new ObjectParameter("Execute", execute) :
                new ObjectParameter("Execute", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CommandExecute", commandParameter, commentParameter, modeParameter, executeParameter);
        }
    
        public virtual int CustomerLeadUpdateProcess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerLeadUpdateProcess");
        }
    
        public virtual int DatabaseBackup(string databases, string directory, string backupType, string verify, Nullable<int> cleanupTime, string compress, string copyOnly, string changeBackupType, string backupSoftware, string checkSum, string execute)
        {
            var databasesParameter = databases != null ?
                new ObjectParameter("Databases", databases) :
                new ObjectParameter("Databases", typeof(string));
    
            var directoryParameter = directory != null ?
                new ObjectParameter("Directory", directory) :
                new ObjectParameter("Directory", typeof(string));
    
            var backupTypeParameter = backupType != null ?
                new ObjectParameter("BackupType", backupType) :
                new ObjectParameter("BackupType", typeof(string));
    
            var verifyParameter = verify != null ?
                new ObjectParameter("Verify", verify) :
                new ObjectParameter("Verify", typeof(string));
    
            var cleanupTimeParameter = cleanupTime.HasValue ?
                new ObjectParameter("CleanupTime", cleanupTime) :
                new ObjectParameter("CleanupTime", typeof(int));
    
            var compressParameter = compress != null ?
                new ObjectParameter("Compress", compress) :
                new ObjectParameter("Compress", typeof(string));
    
            var copyOnlyParameter = copyOnly != null ?
                new ObjectParameter("CopyOnly", copyOnly) :
                new ObjectParameter("CopyOnly", typeof(string));
    
            var changeBackupTypeParameter = changeBackupType != null ?
                new ObjectParameter("ChangeBackupType", changeBackupType) :
                new ObjectParameter("ChangeBackupType", typeof(string));
    
            var backupSoftwareParameter = backupSoftware != null ?
                new ObjectParameter("BackupSoftware", backupSoftware) :
                new ObjectParameter("BackupSoftware", typeof(string));
    
            var checkSumParameter = checkSum != null ?
                new ObjectParameter("CheckSum", checkSum) :
                new ObjectParameter("CheckSum", typeof(string));
    
            var executeParameter = execute != null ?
                new ObjectParameter("Execute", execute) :
                new ObjectParameter("Execute", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DatabaseBackup", databasesParameter, directoryParameter, backupTypeParameter, verifyParameter, cleanupTimeParameter, compressParameter, copyOnlyParameter, changeBackupTypeParameter, backupSoftwareParameter, checkSumParameter, executeParameter);
        }
    
        public virtual int DatabaseIntegrityCheck(string databases, string physicalOnly, string noIndex, string extendedLogicalChecks, string execute)
        {
            var databasesParameter = databases != null ?
                new ObjectParameter("Databases", databases) :
                new ObjectParameter("Databases", typeof(string));
    
            var physicalOnlyParameter = physicalOnly != null ?
                new ObjectParameter("PhysicalOnly", physicalOnly) :
                new ObjectParameter("PhysicalOnly", typeof(string));
    
            var noIndexParameter = noIndex != null ?
                new ObjectParameter("NoIndex", noIndex) :
                new ObjectParameter("NoIndex", typeof(string));
    
            var extendedLogicalChecksParameter = extendedLogicalChecks != null ?
                new ObjectParameter("ExtendedLogicalChecks", extendedLogicalChecks) :
                new ObjectParameter("ExtendedLogicalChecks", typeof(string));
    
            var executeParameter = execute != null ?
                new ObjectParameter("Execute", execute) :
                new ObjectParameter("Execute", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DatabaseIntegrityCheck", databasesParameter, physicalOnlyParameter, noIndexParameter, extendedLogicalChecksParameter, executeParameter);
        }
    
        [DbFunction("EF6EdmxModelContainer", "DatabaseSelect")]
        public virtual IQueryable<string> DatabaseSelect(string databaseList)
        {
            var databaseListParameter = databaseList != null ?
                new ObjectParameter("DatabaseList", databaseList) :
                new ObjectParameter("DatabaseList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[EF6EdmxModelContainer].[DatabaseSelect](@DatabaseList)", databaseListParameter);
        }
    
        public virtual int dba_indexDefrag_sp(Nullable<double> minFragmentation, Nullable<double> rebuildThreshold, Nullable<bool> executeSQL, string dATABASE, string tableName, Nullable<bool> onlineRebuild, Nullable<byte> maxDopRestriction, Nullable<bool> printCommands, Nullable<bool> printFragmentation, string defragDelay, string scanMode, Nullable<bool> debugMode)
        {
            var minFragmentationParameter = minFragmentation.HasValue ?
                new ObjectParameter("minFragmentation", minFragmentation) :
                new ObjectParameter("minFragmentation", typeof(double));
    
            var rebuildThresholdParameter = rebuildThreshold.HasValue ?
                new ObjectParameter("rebuildThreshold", rebuildThreshold) :
                new ObjectParameter("rebuildThreshold", typeof(double));
    
            var executeSQLParameter = executeSQL.HasValue ?
                new ObjectParameter("executeSQL", executeSQL) :
                new ObjectParameter("executeSQL", typeof(bool));
    
            var dATABASEParameter = dATABASE != null ?
                new ObjectParameter("DATABASE", dATABASE) :
                new ObjectParameter("DATABASE", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var onlineRebuildParameter = onlineRebuild.HasValue ?
                new ObjectParameter("onlineRebuild", onlineRebuild) :
                new ObjectParameter("onlineRebuild", typeof(bool));
    
            var maxDopRestrictionParameter = maxDopRestriction.HasValue ?
                new ObjectParameter("maxDopRestriction", maxDopRestriction) :
                new ObjectParameter("maxDopRestriction", typeof(byte));
    
            var printCommandsParameter = printCommands.HasValue ?
                new ObjectParameter("printCommands", printCommands) :
                new ObjectParameter("printCommands", typeof(bool));
    
            var printFragmentationParameter = printFragmentation.HasValue ?
                new ObjectParameter("printFragmentation", printFragmentation) :
                new ObjectParameter("printFragmentation", typeof(bool));
    
            var defragDelayParameter = defragDelay != null ?
                new ObjectParameter("defragDelay", defragDelay) :
                new ObjectParameter("defragDelay", typeof(string));
    
            var scanModeParameter = scanMode != null ?
                new ObjectParameter("scanMode", scanMode) :
                new ObjectParameter("scanMode", typeof(string));
    
            var debugModeParameter = debugMode.HasValue ?
                new ObjectParameter("debugMode", debugMode) :
                new ObjectParameter("debugMode", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dba_indexDefrag_sp", minFragmentationParameter, rebuildThresholdParameter, executeSQLParameter, dATABASEParameter, tableNameParameter, onlineRebuildParameter, maxDopRestrictionParameter, printCommandsParameter, printFragmentationParameter, defragDelayParameter, scanModeParameter, debugModeParameter);
        }
    
        public virtual int dba_replicationLatencyGet_sp(string publicationToTest, string replicationDelay, Nullable<int> iterations, string iterationDelay, Nullable<bool> deleteTokens, Nullable<bool> deleteTempTable)
        {
            var publicationToTestParameter = publicationToTest != null ?
                new ObjectParameter("publicationToTest", publicationToTest) :
                new ObjectParameter("publicationToTest", typeof(string));
    
            var replicationDelayParameter = replicationDelay != null ?
                new ObjectParameter("replicationDelay", replicationDelay) :
                new ObjectParameter("replicationDelay", typeof(string));
    
            var iterationsParameter = iterations.HasValue ?
                new ObjectParameter("iterations", iterations) :
                new ObjectParameter("iterations", typeof(int));
    
            var iterationDelayParameter = iterationDelay != null ?
                new ObjectParameter("iterationDelay", iterationDelay) :
                new ObjectParameter("iterationDelay", typeof(string));
    
            var deleteTokensParameter = deleteTokens.HasValue ?
                new ObjectParameter("deleteTokens", deleteTokens) :
                new ObjectParameter("deleteTokens", typeof(bool));
    
            var deleteTempTableParameter = deleteTempTable.HasValue ?
                new ObjectParameter("deleteTempTable", deleteTempTable) :
                new ObjectParameter("deleteTempTable", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dba_replicationLatencyGet_sp", publicationToTestParameter, replicationDelayParameter, iterationsParameter, iterationDelayParameter, deleteTokensParameter, deleteTempTableParameter);
        }
    
        public virtual ObjectResult<describe_Result> describe(string tableName, string columnNameFilter)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var columnNameFilterParameter = columnNameFilter != null ?
                new ObjectParameter("columnNameFilter", columnNameFilter) :
                new ObjectParameter("columnNameFilter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<describe_Result>("describe", tableNameParameter, columnNameFilterParameter);
        }
    
        [DbFunction("EF6EdmxModelContainer", "fn_Customer_FirstLoan")]
        public virtual IQueryable<fn_Customer_FirstLoan_Result> fn_Customer_FirstLoan(Nullable<int> customer_key, string product_type, string loan_type)
        {
            var customer_keyParameter = customer_key.HasValue ?
                new ObjectParameter("customer_key", customer_key) :
                new ObjectParameter("customer_key", typeof(int));
    
            var product_typeParameter = product_type != null ?
                new ObjectParameter("product_type", product_type) :
                new ObjectParameter("product_type", typeof(string));
    
            var loan_typeParameter = loan_type != null ?
                new ObjectParameter("loan_type", loan_type) :
                new ObjectParameter("loan_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Customer_FirstLoan_Result>("[EF6EdmxModelContainer].[fn_Customer_FirstLoan](@customer_key, @product_type, @loan_type)", customer_keyParameter, product_typeParameter, loan_typeParameter);
        }
    
        [DbFunction("EF6EdmxModelContainer", "FN_MKTG_SELECTION_LIST")]
        public virtual IQueryable<FN_MKTG_SELECTION_LIST_Result> FN_MKTG_SELECTION_LIST(Nullable<int> sQL_FIELD_KEY)
        {
            var sQL_FIELD_KEYParameter = sQL_FIELD_KEY.HasValue ?
                new ObjectParameter("SQL_FIELD_KEY", sQL_FIELD_KEY) :
                new ObjectParameter("SQL_FIELD_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_MKTG_SELECTION_LIST_Result>("[EF6EdmxModelContainer].[FN_MKTG_SELECTION_LIST](@SQL_FIELD_KEY)", sQL_FIELD_KEYParameter);
        }
    
        public virtual int GenerateTellerID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateTellerID");
        }
    
        public virtual int IndexOptimize(string databases, string fragmentationHigh_LOB, string fragmentationHigh_NonLOB, string fragmentationMedium_LOB, string fragmentationMedium_NonLOB, string fragmentationLow_LOB, string fragmentationLow_NonLOB, Nullable<byte> fragmentationLevel1, Nullable<byte> fragmentationLevel2, Nullable<int> pageCountLevel, string sortInTempdb, Nullable<byte> maxDOP, Nullable<byte> fillFactor, string lOBCompaction, Nullable<byte> statisticsSample, string partitionLevel, Nullable<int> timeLimit, string execute)
        {
            var databasesParameter = databases != null ?
                new ObjectParameter("Databases", databases) :
                new ObjectParameter("Databases", typeof(string));
    
            var fragmentationHigh_LOBParameter = fragmentationHigh_LOB != null ?
                new ObjectParameter("FragmentationHigh_LOB", fragmentationHigh_LOB) :
                new ObjectParameter("FragmentationHigh_LOB", typeof(string));
    
            var fragmentationHigh_NonLOBParameter = fragmentationHigh_NonLOB != null ?
                new ObjectParameter("FragmentationHigh_NonLOB", fragmentationHigh_NonLOB) :
                new ObjectParameter("FragmentationHigh_NonLOB", typeof(string));
    
            var fragmentationMedium_LOBParameter = fragmentationMedium_LOB != null ?
                new ObjectParameter("FragmentationMedium_LOB", fragmentationMedium_LOB) :
                new ObjectParameter("FragmentationMedium_LOB", typeof(string));
    
            var fragmentationMedium_NonLOBParameter = fragmentationMedium_NonLOB != null ?
                new ObjectParameter("FragmentationMedium_NonLOB", fragmentationMedium_NonLOB) :
                new ObjectParameter("FragmentationMedium_NonLOB", typeof(string));
    
            var fragmentationLow_LOBParameter = fragmentationLow_LOB != null ?
                new ObjectParameter("FragmentationLow_LOB", fragmentationLow_LOB) :
                new ObjectParameter("FragmentationLow_LOB", typeof(string));
    
            var fragmentationLow_NonLOBParameter = fragmentationLow_NonLOB != null ?
                new ObjectParameter("FragmentationLow_NonLOB", fragmentationLow_NonLOB) :
                new ObjectParameter("FragmentationLow_NonLOB", typeof(string));
    
            var fragmentationLevel1Parameter = fragmentationLevel1.HasValue ?
                new ObjectParameter("FragmentationLevel1", fragmentationLevel1) :
                new ObjectParameter("FragmentationLevel1", typeof(byte));
    
            var fragmentationLevel2Parameter = fragmentationLevel2.HasValue ?
                new ObjectParameter("FragmentationLevel2", fragmentationLevel2) :
                new ObjectParameter("FragmentationLevel2", typeof(byte));
    
            var pageCountLevelParameter = pageCountLevel.HasValue ?
                new ObjectParameter("PageCountLevel", pageCountLevel) :
                new ObjectParameter("PageCountLevel", typeof(int));
    
            var sortInTempdbParameter = sortInTempdb != null ?
                new ObjectParameter("SortInTempdb", sortInTempdb) :
                new ObjectParameter("SortInTempdb", typeof(string));
    
            var maxDOPParameter = maxDOP.HasValue ?
                new ObjectParameter("MaxDOP", maxDOP) :
                new ObjectParameter("MaxDOP", typeof(byte));
    
            var fillFactorParameter = fillFactor.HasValue ?
                new ObjectParameter("FillFactor", fillFactor) :
                new ObjectParameter("FillFactor", typeof(byte));
    
            var lOBCompactionParameter = lOBCompaction != null ?
                new ObjectParameter("LOBCompaction", lOBCompaction) :
                new ObjectParameter("LOBCompaction", typeof(string));
    
            var statisticsSampleParameter = statisticsSample.HasValue ?
                new ObjectParameter("StatisticsSample", statisticsSample) :
                new ObjectParameter("StatisticsSample", typeof(byte));
    
            var partitionLevelParameter = partitionLevel != null ?
                new ObjectParameter("PartitionLevel", partitionLevel) :
                new ObjectParameter("PartitionLevel", typeof(string));
    
            var timeLimitParameter = timeLimit.HasValue ?
                new ObjectParameter("TimeLimit", timeLimit) :
                new ObjectParameter("TimeLimit", typeof(int));
    
            var executeParameter = execute != null ?
                new ObjectParameter("Execute", execute) :
                new ObjectParameter("Execute", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IndexOptimize", databasesParameter, fragmentationHigh_LOBParameter, fragmentationHigh_NonLOBParameter, fragmentationMedium_LOBParameter, fragmentationMedium_NonLOBParameter, fragmentationLow_LOBParameter, fragmentationLow_NonLOBParameter, fragmentationLevel1Parameter, fragmentationLevel2Parameter, pageCountLevelParameter, sortInTempdbParameter, maxDOPParameter, fillFactorParameter, lOBCompactionParameter, statisticsSampleParameter, partitionLevelParameter, timeLimitParameter, executeParameter);
        }
    
        public virtual int IT_LendDirectStats()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_LendDirectStats");
        }
    
        public virtual int IT_LendDirectStatsTEST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_LendDirectStatsTEST");
        }
    
        public virtual int IT_LendDirectSummary(string colHead, Nullable<System.DateTime> forMonth, Nullable<bool> summOnly)
        {
            var colHeadParameter = colHead != null ?
                new ObjectParameter("ColHead", colHead) :
                new ObjectParameter("ColHead", typeof(string));
    
            var forMonthParameter = forMonth.HasValue ?
                new ObjectParameter("forMonth", forMonth) :
                new ObjectParameter("forMonth", typeof(System.DateTime));
    
            var summOnlyParameter = summOnly.HasValue ?
                new ObjectParameter("summOnly", summOnly) :
                new ObjectParameter("summOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_LendDirectSummary", colHeadParameter, forMonthParameter, summOnlyParameter);
        }
    
        public virtual int LDExistingCustomerCheck(Nullable<int> keyValue, string fName, string lName, string ssn, Nullable<System.DateTime> dob, string postCode, string aBA, string acct, Nullable<int> incomingLoanApplicationKey)
        {
            var keyValueParameter = keyValue.HasValue ?
                new ObjectParameter("keyValue", keyValue) :
                new ObjectParameter("keyValue", typeof(int));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("fName", fName) :
                new ObjectParameter("fName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("lName", lName) :
                new ObjectParameter("lName", typeof(string));
    
            var ssnParameter = ssn != null ?
                new ObjectParameter("ssn", ssn) :
                new ObjectParameter("ssn", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var postCodeParameter = postCode != null ?
                new ObjectParameter("postCode", postCode) :
                new ObjectParameter("postCode", typeof(string));
    
            var aBAParameter = aBA != null ?
                new ObjectParameter("ABA", aBA) :
                new ObjectParameter("ABA", typeof(string));
    
            var acctParameter = acct != null ?
                new ObjectParameter("Acct", acct) :
                new ObjectParameter("Acct", typeof(string));
    
            var incomingLoanApplicationKeyParameter = incomingLoanApplicationKey.HasValue ?
                new ObjectParameter("incomingLoanApplicationKey", incomingLoanApplicationKey) :
                new ObjectParameter("incomingLoanApplicationKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LDExistingCustomerCheck", keyValueParameter, fNameParameter, lNameParameter, ssnParameter, dobParameter, postCodeParameter, aBAParameter, acctParameter, incomingLoanApplicationKeyParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SGHCTestCustomer(Nullable<int> key, Nullable<short> location)
        {
            var keyParameter = key.HasValue ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SGHCTestCustomer", keyParameter, locationParameter);
        }
    
        public virtual int sp_ExternalAppMaster_Insert(string tASK_NAME, string sERVER_NAME, string dTS_OR_EXE, string rUN_FILE, string rUN_START_FOLDER, string sTATUS_DESC, Nullable<System.DateTime> nEXT_RUN_DATE, Nullable<System.DateTime> lAST_RUN_DATE, string lAST_RESULT)
        {
            var tASK_NAMEParameter = tASK_NAME != null ?
                new ObjectParameter("TASK_NAME", tASK_NAME) :
                new ObjectParameter("TASK_NAME", typeof(string));
    
            var sERVER_NAMEParameter = sERVER_NAME != null ?
                new ObjectParameter("SERVER_NAME", sERVER_NAME) :
                new ObjectParameter("SERVER_NAME", typeof(string));
    
            var dTS_OR_EXEParameter = dTS_OR_EXE != null ?
                new ObjectParameter("DTS_OR_EXE", dTS_OR_EXE) :
                new ObjectParameter("DTS_OR_EXE", typeof(string));
    
            var rUN_FILEParameter = rUN_FILE != null ?
                new ObjectParameter("RUN_FILE", rUN_FILE) :
                new ObjectParameter("RUN_FILE", typeof(string));
    
            var rUN_START_FOLDERParameter = rUN_START_FOLDER != null ?
                new ObjectParameter("RUN_START_FOLDER", rUN_START_FOLDER) :
                new ObjectParameter("RUN_START_FOLDER", typeof(string));
    
            var sTATUS_DESCParameter = sTATUS_DESC != null ?
                new ObjectParameter("STATUS_DESC", sTATUS_DESC) :
                new ObjectParameter("STATUS_DESC", typeof(string));
    
            var nEXT_RUN_DATEParameter = nEXT_RUN_DATE.HasValue ?
                new ObjectParameter("NEXT_RUN_DATE", nEXT_RUN_DATE) :
                new ObjectParameter("NEXT_RUN_DATE", typeof(System.DateTime));
    
            var lAST_RUN_DATEParameter = lAST_RUN_DATE.HasValue ?
                new ObjectParameter("LAST_RUN_DATE", lAST_RUN_DATE) :
                new ObjectParameter("LAST_RUN_DATE", typeof(System.DateTime));
    
            var lAST_RESULTParameter = lAST_RESULT != null ?
                new ObjectParameter("LAST_RESULT", lAST_RESULT) :
                new ObjectParameter("LAST_RESULT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExternalAppMaster_Insert", tASK_NAMEParameter, sERVER_NAMEParameter, dTS_OR_EXEParameter, rUN_FILEParameter, rUN_START_FOLDERParameter, sTATUS_DESCParameter, nEXT_RUN_DATEParameter, lAST_RUN_DATEParameter, lAST_RESULTParameter);
        }
    
        public virtual int sp_helpindex3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpindex3");
        }
    
        [DbFunction("EF6EdmxModelContainer", "Split")]
        public virtual IQueryable<string> Split(string list, string delim)
        {
            var listParameter = list != null ?
                new ObjectParameter("list", list) :
                new ObjectParameter("list", typeof(string));
    
            var delimParameter = delim != null ?
                new ObjectParameter("delim", delim) :
                new ObjectParameter("delim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[EF6EdmxModelContainer].[Split](@list, @delim)", listParameter, delimParameter);
        }
    
        [DbFunction("EF6EdmxModelContainer", "sys_PhysicalIndexStatistics_Wrapper")]
        public virtual IQueryable<sys_PhysicalIndexStatistics_Wrapper_Result> sys_PhysicalIndexStatistics_Wrapper(Nullable<int> databaseID, Nullable<int> objectID, Nullable<int> indexID, Nullable<int> partitionNumber, Nullable<int> mode)
        {
            var databaseIDParameter = databaseID.HasValue ?
                new ObjectParameter("DatabaseID", databaseID) :
                new ObjectParameter("DatabaseID", typeof(int));
    
            var objectIDParameter = objectID.HasValue ?
                new ObjectParameter("ObjectID", objectID) :
                new ObjectParameter("ObjectID", typeof(int));
    
            var indexIDParameter = indexID.HasValue ?
                new ObjectParameter("IndexID", indexID) :
                new ObjectParameter("IndexID", typeof(int));
    
            var partitionNumberParameter = partitionNumber.HasValue ?
                new ObjectParameter("PartitionNumber", partitionNumber) :
                new ObjectParameter("PartitionNumber", typeof(int));
    
            var modeParameter = mode.HasValue ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<sys_PhysicalIndexStatistics_Wrapper_Result>("[EF6EdmxModelContainer].[sys_PhysicalIndexStatistics_Wrapper](@DatabaseID, @ObjectID, @IndexID, @PartitionNumber, @Mode)", databaseIDParameter, objectIDParameter, indexIDParameter, partitionNumberParameter, modeParameter);
        }
    
        public virtual int temp_delete_me()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("temp_delete_me");
        }
    
        public virtual int temp_fix_ACHHistory_TDKey()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("temp_fix_ACHHistory_TDKey");
        }
    
        public virtual int usp_AcctgInternetCompensation(Nullable<System.DateTime> startdate, Nullable<System.DateTime> endDate, string productType, string loanType)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("Startdate", startdate) :
                new ObjectParameter("Startdate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var productTypeParameter = productType != null ?
                new ObjectParameter("ProductType", productType) :
                new ObjectParameter("ProductType", typeof(string));
    
            var loanTypeParameter = loanType != null ?
                new ObjectParameter("LoanType", loanType) :
                new ObjectParameter("LoanType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AcctgInternetCompensation", startdateParameter, endDateParameter, productTypeParameter, loanTypeParameter);
        }
    
        public virtual int usp_AcctgOpenInventoryExportReport(Nullable<System.DateTime> runDate, Nullable<int> lender)
        {
            var runDateParameter = runDate.HasValue ?
                new ObjectParameter("runDate", runDate) :
                new ObjectParameter("runDate", typeof(System.DateTime));
    
            var lenderParameter = lender.HasValue ?
                new ObjectParameter("lender", lender) :
                new ObjectParameter("lender", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AcctgOpenInventoryExportReport", runDateParameter, lenderParameter);
        }
    
        public virtual int usp_AccumRule_Insert(Nullable<byte> rULE_TYPE, Nullable<int> aCCUM_CONFIG_KEY, Nullable<byte> sTATUS_CODE, Nullable<byte> oPERATOR_TYPE, Nullable<byte> tHRESHOLD_VALUE, Nullable<byte> cHANGE_STATUS_CODE, Nullable<short> cHANGE_PRIORITY_CODE, Nullable<bool> rULE_DISABLED, Nullable<System.DateTime> dATE_ENTERED, Nullable<bool> uSE_CONSECUTIVE, Nullable<short> pROCESS_SEQUENCE)
        {
            var rULE_TYPEParameter = rULE_TYPE.HasValue ?
                new ObjectParameter("RULE_TYPE", rULE_TYPE) :
                new ObjectParameter("RULE_TYPE", typeof(byte));
    
            var aCCUM_CONFIG_KEYParameter = aCCUM_CONFIG_KEY.HasValue ?
                new ObjectParameter("ACCUM_CONFIG_KEY", aCCUM_CONFIG_KEY) :
                new ObjectParameter("ACCUM_CONFIG_KEY", typeof(int));
    
            var sTATUS_CODEParameter = sTATUS_CODE.HasValue ?
                new ObjectParameter("STATUS_CODE", sTATUS_CODE) :
                new ObjectParameter("STATUS_CODE", typeof(byte));
    
            var oPERATOR_TYPEParameter = oPERATOR_TYPE.HasValue ?
                new ObjectParameter("OPERATOR_TYPE", oPERATOR_TYPE) :
                new ObjectParameter("OPERATOR_TYPE", typeof(byte));
    
            var tHRESHOLD_VALUEParameter = tHRESHOLD_VALUE.HasValue ?
                new ObjectParameter("THRESHOLD_VALUE", tHRESHOLD_VALUE) :
                new ObjectParameter("THRESHOLD_VALUE", typeof(byte));
    
            var cHANGE_STATUS_CODEParameter = cHANGE_STATUS_CODE.HasValue ?
                new ObjectParameter("CHANGE_STATUS_CODE", cHANGE_STATUS_CODE) :
                new ObjectParameter("CHANGE_STATUS_CODE", typeof(byte));
    
            var cHANGE_PRIORITY_CODEParameter = cHANGE_PRIORITY_CODE.HasValue ?
                new ObjectParameter("CHANGE_PRIORITY_CODE", cHANGE_PRIORITY_CODE) :
                new ObjectParameter("CHANGE_PRIORITY_CODE", typeof(short));
    
            var rULE_DISABLEDParameter = rULE_DISABLED.HasValue ?
                new ObjectParameter("RULE_DISABLED", rULE_DISABLED) :
                new ObjectParameter("RULE_DISABLED", typeof(bool));
    
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            var uSE_CONSECUTIVEParameter = uSE_CONSECUTIVE.HasValue ?
                new ObjectParameter("USE_CONSECUTIVE", uSE_CONSECUTIVE) :
                new ObjectParameter("USE_CONSECUTIVE", typeof(bool));
    
            var pROCESS_SEQUENCEParameter = pROCESS_SEQUENCE.HasValue ?
                new ObjectParameter("PROCESS_SEQUENCE", pROCESS_SEQUENCE) :
                new ObjectParameter("PROCESS_SEQUENCE", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AccumRule_Insert", rULE_TYPEParameter, aCCUM_CONFIG_KEYParameter, sTATUS_CODEParameter, oPERATOR_TYPEParameter, tHRESHOLD_VALUEParameter, cHANGE_STATUS_CODEParameter, cHANGE_PRIORITY_CODEParameter, rULE_DISABLEDParameter, dATE_ENTEREDParameter, uSE_CONSECUTIVEParameter, pROCESS_SEQUENCEParameter);
        }
    
        public virtual int usp_ACH_Ack_Insert(string file_Name, Nullable<bool> file_Rejected, Nullable<int> ach_Sent_Key, Nullable<int> reject_Item_Count, Nullable<decimal> reject_Credit_Amt, Nullable<int> total_Item_Count, Nullable<decimal> total_Credit_Amt)
        {
            var file_NameParameter = file_Name != null ?
                new ObjectParameter("File_Name", file_Name) :
                new ObjectParameter("File_Name", typeof(string));
    
            var file_RejectedParameter = file_Rejected.HasValue ?
                new ObjectParameter("File_Rejected", file_Rejected) :
                new ObjectParameter("File_Rejected", typeof(bool));
    
            var ach_Sent_KeyParameter = ach_Sent_Key.HasValue ?
                new ObjectParameter("Ach_Sent_Key", ach_Sent_Key) :
                new ObjectParameter("Ach_Sent_Key", typeof(int));
    
            var reject_Item_CountParameter = reject_Item_Count.HasValue ?
                new ObjectParameter("Reject_Item_Count", reject_Item_Count) :
                new ObjectParameter("Reject_Item_Count", typeof(int));
    
            var reject_Credit_AmtParameter = reject_Credit_Amt.HasValue ?
                new ObjectParameter("Reject_Credit_Amt", reject_Credit_Amt) :
                new ObjectParameter("Reject_Credit_Amt", typeof(decimal));
    
            var total_Item_CountParameter = total_Item_Count.HasValue ?
                new ObjectParameter("Total_Item_Count", total_Item_Count) :
                new ObjectParameter("Total_Item_Count", typeof(int));
    
            var total_Credit_AmtParameter = total_Credit_Amt.HasValue ?
                new ObjectParameter("Total_Credit_Amt", total_Credit_Amt) :
                new ObjectParameter("Total_Credit_Amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACH_Ack_Insert", file_NameParameter, file_RejectedParameter, ach_Sent_KeyParameter, reject_Item_CountParameter, reject_Credit_AmtParameter, total_Item_CountParameter, total_Credit_AmtParameter);
        }
    
        public virtual ObjectResult<usp_ACH_Bank_Get_Configs_Result> usp_ACH_Bank_Get_Configs(Nullable<int> ach_Bank_Key, Nullable<short> loc)
        {
            var ach_Bank_KeyParameter = ach_Bank_Key.HasValue ?
                new ObjectParameter("Ach_Bank_Key", ach_Bank_Key) :
                new ObjectParameter("Ach_Bank_Key", typeof(int));
    
            var locParameter = loc.HasValue ?
                new ObjectParameter("Loc", loc) :
                new ObjectParameter("Loc", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ACH_Bank_Get_Configs_Result>("usp_ACH_Bank_Get_Configs", ach_Bank_KeyParameter, locParameter);
        }
    
        public virtual int usp_ACH_Recv_Insert(string file_name_recv, Nullable<System.DateTime> date_recv, Nullable<int> paid_count, Nullable<decimal> paid_total, Nullable<int> unpaid_count, Nullable<decimal> unpaid_total)
        {
            var file_name_recvParameter = file_name_recv != null ?
                new ObjectParameter("File_name_recv", file_name_recv) :
                new ObjectParameter("File_name_recv", typeof(string));
    
            var date_recvParameter = date_recv.HasValue ?
                new ObjectParameter("Date_recv", date_recv) :
                new ObjectParameter("Date_recv", typeof(System.DateTime));
    
            var paid_countParameter = paid_count.HasValue ?
                new ObjectParameter("Paid_count", paid_count) :
                new ObjectParameter("Paid_count", typeof(int));
    
            var paid_totalParameter = paid_total.HasValue ?
                new ObjectParameter("Paid_total", paid_total) :
                new ObjectParameter("Paid_total", typeof(decimal));
    
            var unpaid_countParameter = unpaid_count.HasValue ?
                new ObjectParameter("Unpaid_count", unpaid_count) :
                new ObjectParameter("Unpaid_count", typeof(int));
    
            var unpaid_totalParameter = unpaid_total.HasValue ?
                new ObjectParameter("Unpaid_total", unpaid_total) :
                new ObjectParameter("Unpaid_total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACH_Recv_Insert", file_name_recvParameter, date_recvParameter, paid_countParameter, paid_totalParameter, unpaid_countParameter, unpaid_totalParameter);
        }
    
        public virtual int usp_ACH_Results_Insert(string fileName, Nullable<System.DateTime> dateSent, Nullable<int> location)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var dateSentParameter = dateSent.HasValue ?
                new ObjectParameter("DateSent", dateSent) :
                new ObjectParameter("DateSent", typeof(System.DateTime));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ACH_Results_Insert", fileNameParameter, dateSentParameter, locationParameter);
        }
    
        public virtual int usp_AchLoansToFundBofA(string fILENAME, Nullable<System.DateTime> eXPECTEDDATE, Nullable<int> aCH_SENT_KEY, Nullable<bool> mIDDAY_PROCESSING, Nullable<int> aCH_GROUP_KEY)
        {
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var eXPECTEDDATEParameter = eXPECTEDDATE.HasValue ?
                new ObjectParameter("EXPECTEDDATE", eXPECTEDDATE) :
                new ObjectParameter("EXPECTEDDATE", typeof(System.DateTime));
    
            var aCH_SENT_KEYParameter = aCH_SENT_KEY.HasValue ?
                new ObjectParameter("ACH_SENT_KEY", aCH_SENT_KEY) :
                new ObjectParameter("ACH_SENT_KEY", typeof(int));
    
            var mIDDAY_PROCESSINGParameter = mIDDAY_PROCESSING.HasValue ?
                new ObjectParameter("MIDDAY_PROCESSING", mIDDAY_PROCESSING) :
                new ObjectParameter("MIDDAY_PROCESSING", typeof(bool));
    
            var aCH_GROUP_KEYParameter = aCH_GROUP_KEY.HasValue ?
                new ObjectParameter("ACH_GROUP_KEY", aCH_GROUP_KEY) :
                new ObjectParameter("ACH_GROUP_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AchLoansToFundBofA", fILENAMEParameter, eXPECTEDDATEParameter, aCH_SENT_KEYParameter, mIDDAY_PROCESSINGParameter, aCH_GROUP_KEYParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_AchLoansToFundFraudCheck(Nullable<int> lOAN_KEY)
        {
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_AchLoansToFundFraudCheck", lOAN_KEYParameter);
        }
    
        public virtual int usp_AchLoansToFundFraudCheck1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AchLoansToFundFraudCheck1");
        }
    
        public virtual int usp_AchLoansToFundFraudCheck2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AchLoansToFundFraudCheck2");
        }
    
        public virtual int usp_AchLoansToFundFraudCheck3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AchLoansToFundFraudCheck3");
        }
    
        public virtual int usp_AchLoansToFundFraudCheck4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AchLoansToFundFraudCheck4");
        }
    
        public virtual int usp_AchLoansToFundFraudCheck5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AchLoansToFundFraudCheck5");
        }
    
        public virtual int usp_AchLoansToFundUS(Nullable<bool> mIDDAY_PROCESSING, Nullable<int> aCH_GROUP_KEY, Nullable<int> runMasterKey)
        {
            var mIDDAY_PROCESSINGParameter = mIDDAY_PROCESSING.HasValue ?
                new ObjectParameter("MIDDAY_PROCESSING", mIDDAY_PROCESSING) :
                new ObjectParameter("MIDDAY_PROCESSING", typeof(bool));
    
            var aCH_GROUP_KEYParameter = aCH_GROUP_KEY.HasValue ?
                new ObjectParameter("ACH_GROUP_KEY", aCH_GROUP_KEY) :
                new ObjectParameter("ACH_GROUP_KEY", typeof(int));
    
            var runMasterKeyParameter = runMasterKey.HasValue ?
                new ObjectParameter("RunMasterKey", runMasterKey) :
                new ObjectParameter("RunMasterKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AchLoansToFundUS", mIDDAY_PROCESSINGParameter, aCH_GROUP_KEYParameter, runMasterKeyParameter);
        }
    
        public virtual int usp_AML_File_Log(Nullable<int> sEQUENCE_NUMBER, string sTREAM, string sTEP, string fILE_NAME, Nullable<int> nUMBER_OF_RECORDS, string tELLER)
        {
            var sEQUENCE_NUMBERParameter = sEQUENCE_NUMBER.HasValue ?
                new ObjectParameter("SEQUENCE_NUMBER", sEQUENCE_NUMBER) :
                new ObjectParameter("SEQUENCE_NUMBER", typeof(int));
    
            var sTREAMParameter = sTREAM != null ?
                new ObjectParameter("STREAM", sTREAM) :
                new ObjectParameter("STREAM", typeof(string));
    
            var sTEPParameter = sTEP != null ?
                new ObjectParameter("STEP", sTEP) :
                new ObjectParameter("STEP", typeof(string));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            var nUMBER_OF_RECORDSParameter = nUMBER_OF_RECORDS.HasValue ?
                new ObjectParameter("NUMBER_OF_RECORDS", nUMBER_OF_RECORDS) :
                new ObjectParameter("NUMBER_OF_RECORDS", typeof(int));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AML_File_Log", sEQUENCE_NUMBERParameter, sTREAMParameter, sTEPParameter, fILE_NAMEParameter, nUMBER_OF_RECORDSParameter, tELLERParameter);
        }
    
        public virtual int usp_BalSheet_Insert(Nullable<short> lOCATION, string tELLER, Nullable<System.DateTime> bUSINESS_DATE)
        {
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var bUSINESS_DATEParameter = bUSINESS_DATE.HasValue ?
                new ObjectParameter("BUSINESS_DATE", bUSINESS_DATE) :
                new ObjectParameter("BUSINESS_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BalSheet_Insert", lOCATIONParameter, tELLERParameter, bUSINESS_DATEParameter);
        }
    
        public virtual int usp_BuildDrawerPrintTempTable(Nullable<int> iZKey, string sTeller, Nullable<short> iLocation, string sTmpTableName)
        {
            var iZKeyParameter = iZKey.HasValue ?
                new ObjectParameter("iZKey", iZKey) :
                new ObjectParameter("iZKey", typeof(int));
    
            var sTellerParameter = sTeller != null ?
                new ObjectParameter("sTeller", sTeller) :
                new ObjectParameter("sTeller", typeof(string));
    
            var iLocationParameter = iLocation.HasValue ?
                new ObjectParameter("iLocation", iLocation) :
                new ObjectParameter("iLocation", typeof(short));
    
            var sTmpTableNameParameter = sTmpTableName != null ?
                new ObjectParameter("sTmpTableName", sTmpTableName) :
                new ObjectParameter("sTmpTableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BuildDrawerPrintTempTable", iZKeyParameter, sTellerParameter, iLocationParameter, sTmpTableNameParameter);
        }
    
        public virtual int usp_CapsUpdates_Insert(string sql, Nullable<int> capsHoldKey, Nullable<int> capsRunKey, string table)
        {
            var sqlParameter = sql != null ?
                new ObjectParameter("Sql", sql) :
                new ObjectParameter("Sql", typeof(string));
    
            var capsHoldKeyParameter = capsHoldKey.HasValue ?
                new ObjectParameter("CapsHoldKey", capsHoldKey) :
                new ObjectParameter("CapsHoldKey", typeof(int));
    
            var capsRunKeyParameter = capsRunKey.HasValue ?
                new ObjectParameter("CapsRunKey", capsRunKey) :
                new ObjectParameter("CapsRunKey", typeof(int));
    
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CapsUpdates_Insert", sqlParameter, capsHoldKeyParameter, capsRunKeyParameter, tableParameter);
        }
    
        public virtual int usp_CCardReset_RemoveMonday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CCardReset_RemoveMonday");
        }
    
        public virtual int usp_CollectionAction_Insert(Nullable<int> rISREPT_KEY, Nullable<short> lOCATION, string tELLER, string nOTE, Nullable<int> aGENT_ACTION_KEY, Nullable<int> aGENT_RESULT_KEY1, Nullable<int> aGENT_RESULT_KEY2, Nullable<int> cOLLECTION_MOVEMENT_KEY, Nullable<int> tASK_ACTION_RESULT_KEY, Nullable<System.DateTime> dATE_ENTERED, Nullable<bool> iS_AD_ASTRA, Nullable<int> cUSTOMER_PHONE_NUMBER_KEY)
        {
            var rISREPT_KEYParameter = rISREPT_KEY.HasValue ?
                new ObjectParameter("RISREPT_KEY", rISREPT_KEY) :
                new ObjectParameter("RISREPT_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var nOTEParameter = nOTE != null ?
                new ObjectParameter("NOTE", nOTE) :
                new ObjectParameter("NOTE", typeof(string));
    
            var aGENT_ACTION_KEYParameter = aGENT_ACTION_KEY.HasValue ?
                new ObjectParameter("AGENT_ACTION_KEY", aGENT_ACTION_KEY) :
                new ObjectParameter("AGENT_ACTION_KEY", typeof(int));
    
            var aGENT_RESULT_KEY1Parameter = aGENT_RESULT_KEY1.HasValue ?
                new ObjectParameter("AGENT_RESULT_KEY1", aGENT_RESULT_KEY1) :
                new ObjectParameter("AGENT_RESULT_KEY1", typeof(int));
    
            var aGENT_RESULT_KEY2Parameter = aGENT_RESULT_KEY2.HasValue ?
                new ObjectParameter("AGENT_RESULT_KEY2", aGENT_RESULT_KEY2) :
                new ObjectParameter("AGENT_RESULT_KEY2", typeof(int));
    
            var cOLLECTION_MOVEMENT_KEYParameter = cOLLECTION_MOVEMENT_KEY.HasValue ?
                new ObjectParameter("COLLECTION_MOVEMENT_KEY", cOLLECTION_MOVEMENT_KEY) :
                new ObjectParameter("COLLECTION_MOVEMENT_KEY", typeof(int));
    
            var tASK_ACTION_RESULT_KEYParameter = tASK_ACTION_RESULT_KEY.HasValue ?
                new ObjectParameter("TASK_ACTION_RESULT_KEY", tASK_ACTION_RESULT_KEY) :
                new ObjectParameter("TASK_ACTION_RESULT_KEY", typeof(int));
    
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            var iS_AD_ASTRAParameter = iS_AD_ASTRA.HasValue ?
                new ObjectParameter("IS_AD_ASTRA", iS_AD_ASTRA) :
                new ObjectParameter("IS_AD_ASTRA", typeof(bool));
    
            var cUSTOMER_PHONE_NUMBER_KEYParameter = cUSTOMER_PHONE_NUMBER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_PHONE_NUMBER_KEY", cUSTOMER_PHONE_NUMBER_KEY) :
                new ObjectParameter("CUSTOMER_PHONE_NUMBER_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CollectionAction_Insert", rISREPT_KEYParameter, lOCATIONParameter, tELLERParameter, nOTEParameter, aGENT_ACTION_KEYParameter, aGENT_RESULT_KEY1Parameter, aGENT_RESULT_KEY2Parameter, cOLLECTION_MOVEMENT_KEYParameter, tASK_ACTION_RESULT_KEYParameter, dATE_ENTEREDParameter, iS_AD_ASTRAParameter, cUSTOMER_PHONE_NUMBER_KEYParameter);
        }
    
        public virtual int usp_CollectionMovement_Insert(Nullable<int> rISREPT_KEY, Nullable<int> aUDIT_KEY, Nullable<System.DateTime> fOLLOWUP_DATE, Nullable<int> cOLLECTION_AGENCY_KEY, Nullable<byte> aSSIGNMENT_NUMBER, string cR_TELLER, Nullable<int> rEASON_FOR_ARREARS_KEY)
        {
            var rISREPT_KEYParameter = rISREPT_KEY.HasValue ?
                new ObjectParameter("RISREPT_KEY", rISREPT_KEY) :
                new ObjectParameter("RISREPT_KEY", typeof(int));
    
            var aUDIT_KEYParameter = aUDIT_KEY.HasValue ?
                new ObjectParameter("AUDIT_KEY", aUDIT_KEY) :
                new ObjectParameter("AUDIT_KEY", typeof(int));
    
            var fOLLOWUP_DATEParameter = fOLLOWUP_DATE.HasValue ?
                new ObjectParameter("FOLLOWUP_DATE", fOLLOWUP_DATE) :
                new ObjectParameter("FOLLOWUP_DATE", typeof(System.DateTime));
    
            var cOLLECTION_AGENCY_KEYParameter = cOLLECTION_AGENCY_KEY.HasValue ?
                new ObjectParameter("COLLECTION_AGENCY_KEY", cOLLECTION_AGENCY_KEY) :
                new ObjectParameter("COLLECTION_AGENCY_KEY", typeof(int));
    
            var aSSIGNMENT_NUMBERParameter = aSSIGNMENT_NUMBER.HasValue ?
                new ObjectParameter("ASSIGNMENT_NUMBER", aSSIGNMENT_NUMBER) :
                new ObjectParameter("ASSIGNMENT_NUMBER", typeof(byte));
    
            var cR_TELLERParameter = cR_TELLER != null ?
                new ObjectParameter("CR_TELLER", cR_TELLER) :
                new ObjectParameter("CR_TELLER", typeof(string));
    
            var rEASON_FOR_ARREARS_KEYParameter = rEASON_FOR_ARREARS_KEY.HasValue ?
                new ObjectParameter("REASON_FOR_ARREARS_KEY", rEASON_FOR_ARREARS_KEY) :
                new ObjectParameter("REASON_FOR_ARREARS_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CollectionMovement_Insert", rISREPT_KEYParameter, aUDIT_KEYParameter, fOLLOWUP_DATEParameter, cOLLECTION_AGENCY_KEYParameter, aSSIGNMENT_NUMBERParameter, cR_TELLERParameter, rEASON_FOR_ARREARS_KEYParameter);
        }
    
        public virtual int usp_CollectorsBonusReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CollectorsBonusReport");
        }
    
        public virtual ObjectResult<string> usp_Company_GetServices(Nullable<short> location)
        {
            var locationParameter = location.HasValue ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Company_GetServices", locationParameter);
        }
    
        public virtual int usp_CreditCard_Update_Delete(Nullable<int> cREDITCARD_KEY)
        {
            var cREDITCARD_KEYParameter = cREDITCARD_KEY.HasValue ?
                new ObjectParameter("CREDITCARD_KEY", cREDITCARD_KEY) :
                new ObjectParameter("CREDITCARD_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CreditCard_Update_Delete", cREDITCARD_KEYParameter);
        }
    
        public virtual int usp_CreditCard_Update_ExpDate(Nullable<byte> eXPMONTH, Nullable<int> eXPYEAR, Nullable<int> cREDITCARD_KEY)
        {
            var eXPMONTHParameter = eXPMONTH.HasValue ?
                new ObjectParameter("EXPMONTH", eXPMONTH) :
                new ObjectParameter("EXPMONTH", typeof(byte));
    
            var eXPYEARParameter = eXPYEAR.HasValue ?
                new ObjectParameter("EXPYEAR", eXPYEAR) :
                new ObjectParameter("EXPYEAR", typeof(int));
    
            var cREDITCARD_KEYParameter = cREDITCARD_KEY.HasValue ?
                new ObjectParameter("CREDITCARD_KEY", cREDITCARD_KEY) :
                new ObjectParameter("CREDITCARD_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CreditCard_Update_ExpDate", eXPMONTHParameter, eXPYEARParameter, cREDITCARD_KEYParameter);
        }
    
        public virtual int usp_CreditCardTrans_Insert(Nullable<int> cUSTOMER_KEY, Nullable<short> lOCATION, string tELLER, string rEQ_FILE_TYPE, Nullable<byte> eXP_MONTH, Nullable<byte> eXP_YEAR, string cCARD_NUM, string cCARD_NAME, string mAG_STRIP, Nullable<decimal> cHARGE_AMT, Nullable<int> rEFUND_TRANS_DETAIL_KEY, Nullable<int> rISREPT_KEY, string aUTH_CODE, Nullable<int> rITA_TROUTD, Nullable<int> rITA_SEQUENCE_NUM, string tOKEN, Nullable<int> lOAN_KEY)
        {
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var rEQ_FILE_TYPEParameter = rEQ_FILE_TYPE != null ?
                new ObjectParameter("REQ_FILE_TYPE", rEQ_FILE_TYPE) :
                new ObjectParameter("REQ_FILE_TYPE", typeof(string));
    
            var eXP_MONTHParameter = eXP_MONTH.HasValue ?
                new ObjectParameter("EXP_MONTH", eXP_MONTH) :
                new ObjectParameter("EXP_MONTH", typeof(byte));
    
            var eXP_YEARParameter = eXP_YEAR.HasValue ?
                new ObjectParameter("EXP_YEAR", eXP_YEAR) :
                new ObjectParameter("EXP_YEAR", typeof(byte));
    
            var cCARD_NUMParameter = cCARD_NUM != null ?
                new ObjectParameter("CCARD_NUM", cCARD_NUM) :
                new ObjectParameter("CCARD_NUM", typeof(string));
    
            var cCARD_NAMEParameter = cCARD_NAME != null ?
                new ObjectParameter("CCARD_NAME", cCARD_NAME) :
                new ObjectParameter("CCARD_NAME", typeof(string));
    
            var mAG_STRIPParameter = mAG_STRIP != null ?
                new ObjectParameter("MAG_STRIP", mAG_STRIP) :
                new ObjectParameter("MAG_STRIP", typeof(string));
    
            var cHARGE_AMTParameter = cHARGE_AMT.HasValue ?
                new ObjectParameter("CHARGE_AMT", cHARGE_AMT) :
                new ObjectParameter("CHARGE_AMT", typeof(decimal));
    
            var rEFUND_TRANS_DETAIL_KEYParameter = rEFUND_TRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("REFUND_TRANS_DETAIL_KEY", rEFUND_TRANS_DETAIL_KEY) :
                new ObjectParameter("REFUND_TRANS_DETAIL_KEY", typeof(int));
    
            var rISREPT_KEYParameter = rISREPT_KEY.HasValue ?
                new ObjectParameter("RISREPT_KEY", rISREPT_KEY) :
                new ObjectParameter("RISREPT_KEY", typeof(int));
    
            var aUTH_CODEParameter = aUTH_CODE != null ?
                new ObjectParameter("AUTH_CODE", aUTH_CODE) :
                new ObjectParameter("AUTH_CODE", typeof(string));
    
            var rITA_TROUTDParameter = rITA_TROUTD.HasValue ?
                new ObjectParameter("RITA_TROUTD", rITA_TROUTD) :
                new ObjectParameter("RITA_TROUTD", typeof(int));
    
            var rITA_SEQUENCE_NUMParameter = rITA_SEQUENCE_NUM.HasValue ?
                new ObjectParameter("RITA_SEQUENCE_NUM", rITA_SEQUENCE_NUM) :
                new ObjectParameter("RITA_SEQUENCE_NUM", typeof(int));
    
            var tOKENParameter = tOKEN != null ?
                new ObjectParameter("TOKEN", tOKEN) :
                new ObjectParameter("TOKEN", typeof(string));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CreditCardTrans_Insert", cUSTOMER_KEYParameter, lOCATIONParameter, tELLERParameter, rEQ_FILE_TYPEParameter, eXP_MONTHParameter, eXP_YEARParameter, cCARD_NUMParameter, cCARD_NAMEParameter, mAG_STRIPParameter, cHARGE_AMTParameter, rEFUND_TRANS_DETAIL_KEYParameter, rISREPT_KEYParameter, aUTH_CODEParameter, rITA_TROUTDParameter, rITA_SEQUENCE_NUMParameter, tOKENParameter, lOAN_KEYParameter);
        }
    
        public virtual int usp_CreditVendorData_insert(Nullable<byte> vERITEC_STATUS, string dEF_STATE, Nullable<int> lOAN_KEY, Nullable<decimal> tRANS_AMOUNT, string cLVERIFY_PAYMENT_CODE, Nullable<int> cLVERIFY_PAYMENT_NUMBER, Nullable<byte> cLVERIFY_STATUS, Nullable<byte> dATAX_STATUS, Nullable<int> oRIGINAL_LOAN_KEY, Nullable<int> cUSTOMER_KEY)
        {
            var vERITEC_STATUSParameter = vERITEC_STATUS.HasValue ?
                new ObjectParameter("VERITEC_STATUS", vERITEC_STATUS) :
                new ObjectParameter("VERITEC_STATUS", typeof(byte));
    
            var dEF_STATEParameter = dEF_STATE != null ?
                new ObjectParameter("DEF_STATE", dEF_STATE) :
                new ObjectParameter("DEF_STATE", typeof(string));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var tRANS_AMOUNTParameter = tRANS_AMOUNT.HasValue ?
                new ObjectParameter("TRANS_AMOUNT", tRANS_AMOUNT) :
                new ObjectParameter("TRANS_AMOUNT", typeof(decimal));
    
            var cLVERIFY_PAYMENT_CODEParameter = cLVERIFY_PAYMENT_CODE != null ?
                new ObjectParameter("CLVERIFY_PAYMENT_CODE", cLVERIFY_PAYMENT_CODE) :
                new ObjectParameter("CLVERIFY_PAYMENT_CODE", typeof(string));
    
            var cLVERIFY_PAYMENT_NUMBERParameter = cLVERIFY_PAYMENT_NUMBER.HasValue ?
                new ObjectParameter("CLVERIFY_PAYMENT_NUMBER", cLVERIFY_PAYMENT_NUMBER) :
                new ObjectParameter("CLVERIFY_PAYMENT_NUMBER", typeof(int));
    
            var cLVERIFY_STATUSParameter = cLVERIFY_STATUS.HasValue ?
                new ObjectParameter("CLVERIFY_STATUS", cLVERIFY_STATUS) :
                new ObjectParameter("CLVERIFY_STATUS", typeof(byte));
    
            var dATAX_STATUSParameter = dATAX_STATUS.HasValue ?
                new ObjectParameter("DATAX_STATUS", dATAX_STATUS) :
                new ObjectParameter("DATAX_STATUS", typeof(byte));
    
            var oRIGINAL_LOAN_KEYParameter = oRIGINAL_LOAN_KEY.HasValue ?
                new ObjectParameter("ORIGINAL_LOAN_KEY", oRIGINAL_LOAN_KEY) :
                new ObjectParameter("ORIGINAL_LOAN_KEY", typeof(int));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CreditVendorData_insert", vERITEC_STATUSParameter, dEF_STATEParameter, lOAN_KEYParameter, tRANS_AMOUNTParameter, cLVERIFY_PAYMENT_CODEParameter, cLVERIFY_PAYMENT_NUMBERParameter, cLVERIFY_STATUSParameter, dATAX_STATUSParameter, oRIGINAL_LOAN_KEYParameter, cUSTOMER_KEYParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Customer_Exists(Nullable<int> cUSTOMER_KEY, string sSN)
        {
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var sSNParameter = sSN != null ?
                new ObjectParameter("SSN", sSN) :
                new ObjectParameter("SSN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Customer_Exists", cUSTOMER_KEYParameter, sSNParameter);
        }
    
        public virtual int usp_Customer_Loan_Info(Nullable<int> cUSTOMER_KEY)
        {
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Customer_Loan_Info", cUSTOMER_KEYParameter);
        }
    
        public virtual int usp_CustomerAddress_RenumberADDRESS_PRIORITY(Nullable<int> iCustomerKey)
        {
            var iCustomerKeyParameter = iCustomerKey.HasValue ?
                new ObjectParameter("iCustomerKey", iCustomerKey) :
                new ObjectParameter("iCustomerKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerAddress_RenumberADDRESS_PRIORITY", iCustomerKeyParameter);
        }
    
        public virtual int usp_CustomerAddress_RenumberAllADDRESS_PRIORITY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerAddress_RenumberAllADDRESS_PRIORITY");
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_CustomerBalances_PassBuybackFraudCheck(Nullable<int> customerKey, Nullable<short> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_CustomerBalances_PassBuybackFraudCheck", customerKeyParameter, locationParameter);
        }
    
        public virtual int usp_CustomerCreditRpt_Insert(Nullable<int> customer_Key, Nullable<int> location, string teller)
        {
            var customer_KeyParameter = customer_Key.HasValue ?
                new ObjectParameter("Customer_Key", customer_Key) :
                new ObjectParameter("Customer_Key", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerCreditRpt_Insert", customer_KeyParameter, locationParameter, tellerParameter);
        }
    
        public virtual int usp_CustomerCreditRptDetail_Insert(Nullable<int> credit_Rpt_Key, string line_Type, string line_Text, Nullable<short> line_Order)
        {
            var credit_Rpt_KeyParameter = credit_Rpt_Key.HasValue ?
                new ObjectParameter("Credit_Rpt_Key", credit_Rpt_Key) :
                new ObjectParameter("Credit_Rpt_Key", typeof(int));
    
            var line_TypeParameter = line_Type != null ?
                new ObjectParameter("Line_Type", line_Type) :
                new ObjectParameter("Line_Type", typeof(string));
    
            var line_TextParameter = line_Text != null ?
                new ObjectParameter("Line_Text", line_Text) :
                new ObjectParameter("Line_Text", typeof(string));
    
            var line_OrderParameter = line_Order.HasValue ?
                new ObjectParameter("Line_Order", line_Order) :
                new ObjectParameter("Line_Order", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerCreditRptDetail_Insert", credit_Rpt_KeyParameter, line_TypeParameter, line_TextParameter, line_OrderParameter);
        }
    
        public virtual int usp_CustomerUpdateIsInChainStatus(string teller, Nullable<bool> printSteps)
        {
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var printStepsParameter = printSteps.HasValue ?
                new ObjectParameter("PrintSteps", printSteps) :
                new ObjectParameter("PrintSteps", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerUpdateIsInChainStatus", tellerParameter, printStepsParameter);
        }
    
        public virtual int usp_DBKillConn(string host)
        {
            var hostParameter = host != null ?
                new ObjectParameter("Host", host) :
                new ObjectParameter("Host", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DBKillConn", hostParameter);
        }
    
        public virtual ObjectResult<usp_DefaultReportWithoutPayments_Result> usp_DefaultReportWithoutPayments(Nullable<int> monthsToLookBack)
        {
            var monthsToLookBackParameter = monthsToLookBack.HasValue ?
                new ObjectParameter("MonthsToLookBack", monthsToLookBack) :
                new ObjectParameter("MonthsToLookBack", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DefaultReportWithoutPayments_Result>("usp_DefaultReportWithoutPayments", monthsToLookBackParameter);
        }
    
        public virtual ObjectResult<usp_DefaultReportWithPayments_Result> usp_DefaultReportWithPayments(Nullable<int> monthsToLookBack)
        {
            var monthsToLookBackParameter = monthsToLookBack.HasValue ?
                new ObjectParameter("MonthsToLookBack", monthsToLookBack) :
                new ObjectParameter("MonthsToLookBack", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DefaultReportWithPayments_Result>("usp_DefaultReportWithPayments", monthsToLookBackParameter);
        }
    
        public virtual int usp_DefaultTitleSigLoans(Nullable<int> iLocation)
        {
            var iLocationParameter = iLocation.HasValue ?
                new ObjectParameter("iLocation", iLocation) :
                new ObjectParameter("iLocation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DefaultTitleSigLoans", iLocationParameter);
        }
    
        public virtual int usp_DELETE_THIS_PROC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DELETE_THIS_PROC");
        }
    
        public virtual int usp_DelTmp(Nullable<int> daysOld)
        {
            var daysOldParameter = daysOld.HasValue ?
                new ObjectParameter("DaysOld", daysOld) :
                new ObjectParameter("DaysOld", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DelTmp", daysOldParameter);
        }
    
        public virtual int usp_DepositChkDetail_Insert(Nullable<int> dEPOSIT_CHK_KEY, Nullable<int> cUSTOMER_KEY, Nullable<int> tRANS_DETAIL_KEY, Nullable<int> lOAN_KEY, Nullable<int> cASHED_CHECK_KEY)
        {
            var dEPOSIT_CHK_KEYParameter = dEPOSIT_CHK_KEY.HasValue ?
                new ObjectParameter("DEPOSIT_CHK_KEY", dEPOSIT_CHK_KEY) :
                new ObjectParameter("DEPOSIT_CHK_KEY", typeof(int));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var cASHED_CHECK_KEYParameter = cASHED_CHECK_KEY.HasValue ?
                new ObjectParameter("CASHED_CHECK_KEY", cASHED_CHECK_KEY) :
                new ObjectParameter("CASHED_CHECK_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DepositChkDetail_Insert", dEPOSIT_CHK_KEYParameter, cUSTOMER_KEYParameter, tRANS_DETAIL_KEYParameter, lOAN_KEYParameter, cASHED_CHECK_KEYParameter);
        }
    
        public virtual int usp_DialerMaster_Insert(string filename, Nullable<System.DateTime> date_Imported)
        {
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var date_ImportedParameter = date_Imported.HasValue ?
                new ObjectParameter("Date_Imported", date_Imported) :
                new ObjectParameter("Date_Imported", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DialerMaster_Insert", filenameParameter, date_ImportedParameter);
        }
    
        public virtual int usp_DocPrint_Insert(Nullable<int> dOCTEMPLATE_KEY, Nullable<int> cUSTOMER_KEY, Nullable<int> lOCATION, string tELLER, string dOC_DATA, Nullable<System.DateTime> dATE_ENTERED, Nullable<int> tRANS_DETAIL_KEY, Nullable<int> lOAN_KEY, Nullable<int> cASHED_CHECK_KEY)
        {
            var dOCTEMPLATE_KEYParameter = dOCTEMPLATE_KEY.HasValue ?
                new ObjectParameter("DOCTEMPLATE_KEY", dOCTEMPLATE_KEY) :
                new ObjectParameter("DOCTEMPLATE_KEY", typeof(int));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(int));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var dOC_DATAParameter = dOC_DATA != null ?
                new ObjectParameter("DOC_DATA", dOC_DATA) :
                new ObjectParameter("DOC_DATA", typeof(string));
    
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var cASHED_CHECK_KEYParameter = cASHED_CHECK_KEY.HasValue ?
                new ObjectParameter("CASHED_CHECK_KEY", cASHED_CHECK_KEY) :
                new ObjectParameter("CASHED_CHECK_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocPrint_Insert", dOCTEMPLATE_KEYParameter, cUSTOMER_KEYParameter, lOCATIONParameter, tELLERParameter, dOC_DATAParameter, dATE_ENTEREDParameter, tRANS_DETAIL_KEYParameter, lOAN_KEYParameter, cASHED_CHECK_KEYParameter);
        }
    
        public virtual int usp_DocumentPrinting_Insert(Nullable<short> lOCATION, string tELLER, string cOMPUTER_NAME, string pRINTER_NAME)
        {
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var cOMPUTER_NAMEParameter = cOMPUTER_NAME != null ?
                new ObjectParameter("COMPUTER_NAME", cOMPUTER_NAME) :
                new ObjectParameter("COMPUTER_NAME", typeof(string));
    
            var pRINTER_NAMEParameter = pRINTER_NAME != null ?
                new ObjectParameter("PRINTER_NAME", pRINTER_NAME) :
                new ObjectParameter("PRINTER_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocumentPrinting_Insert", lOCATIONParameter, tELLERParameter, cOMPUTER_NAMEParameter, pRINTER_NAMEParameter);
        }
    
        public virtual int usp_DocuwareLoanLkupInsert(Nullable<short> serverID, string cabinetTable, Nullable<int> loanKey, Nullable<int> dWDocID, string dWReferenceLookup, ObjectParameter docuwareLoanLkupKey)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(short));
    
            var cabinetTableParameter = cabinetTable != null ?
                new ObjectParameter("CabinetTable", cabinetTable) :
                new ObjectParameter("CabinetTable", typeof(string));
    
            var loanKeyParameter = loanKey.HasValue ?
                new ObjectParameter("LoanKey", loanKey) :
                new ObjectParameter("LoanKey", typeof(int));
    
            var dWDocIDParameter = dWDocID.HasValue ?
                new ObjectParameter("DWDocID", dWDocID) :
                new ObjectParameter("DWDocID", typeof(int));
    
            var dWReferenceLookupParameter = dWReferenceLookup != null ?
                new ObjectParameter("DWReferenceLookup", dWReferenceLookup) :
                new ObjectParameter("DWReferenceLookup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DocuwareLoanLkupInsert", serverIDParameter, cabinetTableParameter, loanKeyParameter, dWDocIDParameter, dWReferenceLookupParameter, docuwareLoanLkupKey);
        }
    
        public virtual int usp_DrawerService_Insert(Nullable<short> lOCATION, Nullable<int> dRAWER_KEY, Nullable<int> sERVICE_DETAIL_KEY, Nullable<int> dRAWER_QTY)
        {
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var dRAWER_KEYParameter = dRAWER_KEY.HasValue ?
                new ObjectParameter("DRAWER_KEY", dRAWER_KEY) :
                new ObjectParameter("DRAWER_KEY", typeof(int));
    
            var sERVICE_DETAIL_KEYParameter = sERVICE_DETAIL_KEY.HasValue ?
                new ObjectParameter("SERVICE_DETAIL_KEY", sERVICE_DETAIL_KEY) :
                new ObjectParameter("SERVICE_DETAIL_KEY", typeof(int));
    
            var dRAWER_QTYParameter = dRAWER_QTY.HasValue ?
                new ObjectParameter("DRAWER_QTY", dRAWER_QTY) :
                new ObjectParameter("DRAWER_QTY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DrawerService_Insert", lOCATIONParameter, dRAWER_KEYParameter, sERVICE_DETAIL_KEYParameter, dRAWER_QTYParameter);
        }
    
        public virtual int usp_DrawerX_Insert(Nullable<short> lOCATION, string tELLER, Nullable<System.DateTime> dATE_ENTERED, Nullable<decimal> dRAWERX_MISC, Nullable<decimal> dRAWERX_CCARD)
        {
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            var dRAWERX_MISCParameter = dRAWERX_MISC.HasValue ?
                new ObjectParameter("DRAWERX_MISC", dRAWERX_MISC) :
                new ObjectParameter("DRAWERX_MISC", typeof(decimal));
    
            var dRAWERX_CCARDParameter = dRAWERX_CCARD.HasValue ?
                new ObjectParameter("DRAWERX_CCARD", dRAWERX_CCARD) :
                new ObjectParameter("DRAWERX_CCARD", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DrawerX_Insert", lOCATIONParameter, tELLERParameter, dATE_ENTEREDParameter, dRAWERX_MISCParameter, dRAWERX_CCARDParameter);
        }
    
        public virtual int usp_DrawerXService_Insert(Nullable<int> dRAWERX_KEY, Nullable<short> lOCATION, Nullable<int> sERVICE_DETAIL_KEY, Nullable<int> dRAWERX_QTY)
        {
            var dRAWERX_KEYParameter = dRAWERX_KEY.HasValue ?
                new ObjectParameter("DRAWERX_KEY", dRAWERX_KEY) :
                new ObjectParameter("DRAWERX_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var sERVICE_DETAIL_KEYParameter = sERVICE_DETAIL_KEY.HasValue ?
                new ObjectParameter("SERVICE_DETAIL_KEY", sERVICE_DETAIL_KEY) :
                new ObjectParameter("SERVICE_DETAIL_KEY", typeof(int));
    
            var dRAWERX_QTYParameter = dRAWERX_QTY.HasValue ?
                new ObjectParameter("DRAWERX_QTY", dRAWERX_QTY) :
                new ObjectParameter("DRAWERX_QTY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DrawerXService_Insert", dRAWERX_KEYParameter, lOCATIONParameter, sERVICE_DETAIL_KEYParameter, dRAWERX_QTYParameter);
        }
    
        public virtual int usp_DrawerZ_Insert(Nullable<short> lOCATION, string tELLER, Nullable<System.DateTime> dATE_ENTERED, Nullable<System.DateTime> dRAWER_OPENED, Nullable<decimal> dRAWERZ_CHK, Nullable<decimal> dRAWERZ_PRA, Nullable<int> dRAWERZ_CHK_CNT, Nullable<int> dRAWERZ_PRA_CNT, Nullable<decimal> dRAWERZ_MISC, Nullable<decimal> dRAWERZ_CCARD, Nullable<decimal> cNTZ_MISC, string oS_REASON, string oS_CATEGORY, Nullable<int> dRAWERZ_BAG_CHK_CNT, Nullable<decimal> dRAWERZ_BAG_CHK_AMT, Nullable<decimal> dRAWERZ_PRA_DEBIT, Nullable<int> dRAWERZ_PRA_DEBIT_CNT)
        {
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            var dRAWER_OPENEDParameter = dRAWER_OPENED.HasValue ?
                new ObjectParameter("DRAWER_OPENED", dRAWER_OPENED) :
                new ObjectParameter("DRAWER_OPENED", typeof(System.DateTime));
    
            var dRAWERZ_CHKParameter = dRAWERZ_CHK.HasValue ?
                new ObjectParameter("DRAWERZ_CHK", dRAWERZ_CHK) :
                new ObjectParameter("DRAWERZ_CHK", typeof(decimal));
    
            var dRAWERZ_PRAParameter = dRAWERZ_PRA.HasValue ?
                new ObjectParameter("DRAWERZ_PRA", dRAWERZ_PRA) :
                new ObjectParameter("DRAWERZ_PRA", typeof(decimal));
    
            var dRAWERZ_CHK_CNTParameter = dRAWERZ_CHK_CNT.HasValue ?
                new ObjectParameter("DRAWERZ_CHK_CNT", dRAWERZ_CHK_CNT) :
                new ObjectParameter("DRAWERZ_CHK_CNT", typeof(int));
    
            var dRAWERZ_PRA_CNTParameter = dRAWERZ_PRA_CNT.HasValue ?
                new ObjectParameter("DRAWERZ_PRA_CNT", dRAWERZ_PRA_CNT) :
                new ObjectParameter("DRAWERZ_PRA_CNT", typeof(int));
    
            var dRAWERZ_MISCParameter = dRAWERZ_MISC.HasValue ?
                new ObjectParameter("DRAWERZ_MISC", dRAWERZ_MISC) :
                new ObjectParameter("DRAWERZ_MISC", typeof(decimal));
    
            var dRAWERZ_CCARDParameter = dRAWERZ_CCARD.HasValue ?
                new ObjectParameter("DRAWERZ_CCARD", dRAWERZ_CCARD) :
                new ObjectParameter("DRAWERZ_CCARD", typeof(decimal));
    
            var cNTZ_MISCParameter = cNTZ_MISC.HasValue ?
                new ObjectParameter("CNTZ_MISC", cNTZ_MISC) :
                new ObjectParameter("CNTZ_MISC", typeof(decimal));
    
            var oS_REASONParameter = oS_REASON != null ?
                new ObjectParameter("OS_REASON", oS_REASON) :
                new ObjectParameter("OS_REASON", typeof(string));
    
            var oS_CATEGORYParameter = oS_CATEGORY != null ?
                new ObjectParameter("OS_CATEGORY", oS_CATEGORY) :
                new ObjectParameter("OS_CATEGORY", typeof(string));
    
            var dRAWERZ_BAG_CHK_CNTParameter = dRAWERZ_BAG_CHK_CNT.HasValue ?
                new ObjectParameter("DRAWERZ_BAG_CHK_CNT", dRAWERZ_BAG_CHK_CNT) :
                new ObjectParameter("DRAWERZ_BAG_CHK_CNT", typeof(int));
    
            var dRAWERZ_BAG_CHK_AMTParameter = dRAWERZ_BAG_CHK_AMT.HasValue ?
                new ObjectParameter("DRAWERZ_BAG_CHK_AMT", dRAWERZ_BAG_CHK_AMT) :
                new ObjectParameter("DRAWERZ_BAG_CHK_AMT", typeof(decimal));
    
            var dRAWERZ_PRA_DEBITParameter = dRAWERZ_PRA_DEBIT.HasValue ?
                new ObjectParameter("DRAWERZ_PRA_DEBIT", dRAWERZ_PRA_DEBIT) :
                new ObjectParameter("DRAWERZ_PRA_DEBIT", typeof(decimal));
    
            var dRAWERZ_PRA_DEBIT_CNTParameter = dRAWERZ_PRA_DEBIT_CNT.HasValue ?
                new ObjectParameter("DRAWERZ_PRA_DEBIT_CNT", dRAWERZ_PRA_DEBIT_CNT) :
                new ObjectParameter("DRAWERZ_PRA_DEBIT_CNT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DrawerZ_Insert", lOCATIONParameter, tELLERParameter, dATE_ENTEREDParameter, dRAWER_OPENEDParameter, dRAWERZ_CHKParameter, dRAWERZ_PRAParameter, dRAWERZ_CHK_CNTParameter, dRAWERZ_PRA_CNTParameter, dRAWERZ_MISCParameter, dRAWERZ_CCARDParameter, cNTZ_MISCParameter, oS_REASONParameter, oS_CATEGORYParameter, dRAWERZ_BAG_CHK_CNTParameter, dRAWERZ_BAG_CHK_AMTParameter, dRAWERZ_PRA_DEBITParameter, dRAWERZ_PRA_DEBIT_CNTParameter);
        }
    
        public virtual int usp_DrawerZService_Insert(Nullable<int> dRAWERZ_KEY, Nullable<short> lOCATION, Nullable<int> sERVICE_DETAIL_KEY, Nullable<int> dRAWERZ_QTY, Nullable<int> cNTZ_QTY)
        {
            var dRAWERZ_KEYParameter = dRAWERZ_KEY.HasValue ?
                new ObjectParameter("DRAWERZ_KEY", dRAWERZ_KEY) :
                new ObjectParameter("DRAWERZ_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var sERVICE_DETAIL_KEYParameter = sERVICE_DETAIL_KEY.HasValue ?
                new ObjectParameter("SERVICE_DETAIL_KEY", sERVICE_DETAIL_KEY) :
                new ObjectParameter("SERVICE_DETAIL_KEY", typeof(int));
    
            var dRAWERZ_QTYParameter = dRAWERZ_QTY.HasValue ?
                new ObjectParameter("DRAWERZ_QTY", dRAWERZ_QTY) :
                new ObjectParameter("DRAWERZ_QTY", typeof(int));
    
            var cNTZ_QTYParameter = cNTZ_QTY.HasValue ?
                new ObjectParameter("CNTZ_QTY", cNTZ_QTY) :
                new ObjectParameter("CNTZ_QTY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DrawerZService_Insert", dRAWERZ_KEYParameter, lOCATIONParameter, sERVICE_DETAIL_KEYParameter, dRAWERZ_QTYParameter, cNTZ_QTYParameter);
        }
    
        public virtual int usp_Execute_DTS_Package(string serverName, string packageName, string teller, string username, string password)
        {
            var serverNameParameter = serverName != null ?
                new ObjectParameter("ServerName", serverName) :
                new ObjectParameter("ServerName", typeof(string));
    
            var packageNameParameter = packageName != null ?
                new ObjectParameter("PackageName", packageName) :
                new ObjectParameter("PackageName", typeof(string));
    
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Execute_DTS_Package", serverNameParameter, packageNameParameter, tellerParameter, usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<usp_ForceApprovalQAItems_Get_Result> usp_ForceApprovalQAItems_Get(Nullable<int> lOAN_APPLICATION_KEY)
        {
            var lOAN_APPLICATION_KEYParameter = lOAN_APPLICATION_KEY.HasValue ?
                new ObjectParameter("LOAN_APPLICATION_KEY", lOAN_APPLICATION_KEY) :
                new ObjectParameter("LOAN_APPLICATION_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ForceApprovalQAItems_Get_Result>("usp_ForceApprovalQAItems_Get", lOAN_APPLICATION_KEYParameter);
        }
    
        public virtual int usp_ForceApprovalValue_Insert(Nullable<int> fORCE_APPROVAL_QUESTION_KEY, Nullable<int> lOAN_APPLICATION_KEY, string vALUE, Nullable<bool> bANK_STATEMENT_SUPPLIED, ObjectParameter fORCE_APPROVAL_VALUE_KEY)
        {
            var fORCE_APPROVAL_QUESTION_KEYParameter = fORCE_APPROVAL_QUESTION_KEY.HasValue ?
                new ObjectParameter("FORCE_APPROVAL_QUESTION_KEY", fORCE_APPROVAL_QUESTION_KEY) :
                new ObjectParameter("FORCE_APPROVAL_QUESTION_KEY", typeof(int));
    
            var lOAN_APPLICATION_KEYParameter = lOAN_APPLICATION_KEY.HasValue ?
                new ObjectParameter("LOAN_APPLICATION_KEY", lOAN_APPLICATION_KEY) :
                new ObjectParameter("LOAN_APPLICATION_KEY", typeof(int));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var bANK_STATEMENT_SUPPLIEDParameter = bANK_STATEMENT_SUPPLIED.HasValue ?
                new ObjectParameter("BANK_STATEMENT_SUPPLIED", bANK_STATEMENT_SUPPLIED) :
                new ObjectParameter("BANK_STATEMENT_SUPPLIED", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ForceApprovalValue_Insert", fORCE_APPROVAL_QUESTION_KEYParameter, lOAN_APPLICATION_KEYParameter, vALUEParameter, bANK_STATEMENT_SUPPLIEDParameter, fORCE_APPROVAL_VALUE_KEY);
        }
    
        public virtual int usp_ForceApprovalValue_Update(Nullable<int> fORCE_APPROVAL_VALUE_KEY, Nullable<int> fORCE_APPROVAL_QUESTION_KEY, Nullable<int> lOAN_APPLICATION_KEY, string vALUE, Nullable<bool> bANK_STATEMENT_SUPPLIED)
        {
            var fORCE_APPROVAL_VALUE_KEYParameter = fORCE_APPROVAL_VALUE_KEY.HasValue ?
                new ObjectParameter("FORCE_APPROVAL_VALUE_KEY", fORCE_APPROVAL_VALUE_KEY) :
                new ObjectParameter("FORCE_APPROVAL_VALUE_KEY", typeof(int));
    
            var fORCE_APPROVAL_QUESTION_KEYParameter = fORCE_APPROVAL_QUESTION_KEY.HasValue ?
                new ObjectParameter("FORCE_APPROVAL_QUESTION_KEY", fORCE_APPROVAL_QUESTION_KEY) :
                new ObjectParameter("FORCE_APPROVAL_QUESTION_KEY", typeof(int));
    
            var lOAN_APPLICATION_KEYParameter = lOAN_APPLICATION_KEY.HasValue ?
                new ObjectParameter("LOAN_APPLICATION_KEY", lOAN_APPLICATION_KEY) :
                new ObjectParameter("LOAN_APPLICATION_KEY", typeof(int));
    
            var vALUEParameter = vALUE != null ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(string));
    
            var bANK_STATEMENT_SUPPLIEDParameter = bANK_STATEMENT_SUPPLIED.HasValue ?
                new ObjectParameter("BANK_STATEMENT_SUPPLIED", bANK_STATEMENT_SUPPLIED) :
                new ObjectParameter("BANK_STATEMENT_SUPPLIED", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ForceApprovalValue_Update", fORCE_APPROVAL_VALUE_KEYParameter, fORCE_APPROVAL_QUESTION_KEYParameter, lOAN_APPLICATION_KEYParameter, vALUEParameter, bANK_STATEMENT_SUPPLIEDParameter);
        }
    
        public virtual int usp_FormLetterAuditCode_Insert(Nullable<int> fORM_LETTER_KEY, Nullable<int> aUDIT_CODE_KEY)
        {
            var fORM_LETTER_KEYParameter = fORM_LETTER_KEY.HasValue ?
                new ObjectParameter("FORM_LETTER_KEY", fORM_LETTER_KEY) :
                new ObjectParameter("FORM_LETTER_KEY", typeof(int));
    
            var aUDIT_CODE_KEYParameter = aUDIT_CODE_KEY.HasValue ?
                new ObjectParameter("AUDIT_CODE_KEY", aUDIT_CODE_KEY) :
                new ObjectParameter("AUDIT_CODE_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FormLetterAuditCode_Insert", fORM_LETTER_KEYParameter, aUDIT_CODE_KEYParameter);
        }
    
        public virtual int usp_FormLetterBatch_Insert(string tELLER, string uPLOAD_OR_DOWNLOAD, Nullable<bool> iS_AD_ASTRA)
        {
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var uPLOAD_OR_DOWNLOADParameter = uPLOAD_OR_DOWNLOAD != null ?
                new ObjectParameter("UPLOAD_OR_DOWNLOAD", uPLOAD_OR_DOWNLOAD) :
                new ObjectParameter("UPLOAD_OR_DOWNLOAD", typeof(string));
    
            var iS_AD_ASTRAParameter = iS_AD_ASTRA.HasValue ?
                new ObjectParameter("IS_AD_ASTRA", iS_AD_ASTRA) :
                new ObjectParameter("IS_AD_ASTRA", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FormLetterBatch_Insert", tELLERParameter, uPLOAD_OR_DOWNLOADParameter, iS_AD_ASTRAParameter);
        }
    
        public virtual int usp_FormLetterLocation_Insert(Nullable<int> fORM_LETTER_KEY, Nullable<short> lOCATION)
        {
            var fORM_LETTER_KEYParameter = fORM_LETTER_KEY.HasValue ?
                new ObjectParameter("FORM_LETTER_KEY", fORM_LETTER_KEY) :
                new ObjectParameter("FORM_LETTER_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FormLetterLocation_Insert", fORM_LETTER_KEYParameter, lOCATIONParameter);
        }
    
        public virtual int usp_FormLetterOnDemand_Insert(Nullable<int> fORM_LETTER_KEY, Nullable<int> lOAN_KEY, string tELLER, string pROMPT_DATA_1, string pROMPT_DATA_2, string pROMPT_DATA_3, string pROMPT_DATA_4, string pROMPT_DATA_5, Nullable<int> cASHED_CHECK_KEY, Nullable<int> oPTPLUS_CARD_DETAIL_KEY)
        {
            var fORM_LETTER_KEYParameter = fORM_LETTER_KEY.HasValue ?
                new ObjectParameter("FORM_LETTER_KEY", fORM_LETTER_KEY) :
                new ObjectParameter("FORM_LETTER_KEY", typeof(int));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var pROMPT_DATA_1Parameter = pROMPT_DATA_1 != null ?
                new ObjectParameter("PROMPT_DATA_1", pROMPT_DATA_1) :
                new ObjectParameter("PROMPT_DATA_1", typeof(string));
    
            var pROMPT_DATA_2Parameter = pROMPT_DATA_2 != null ?
                new ObjectParameter("PROMPT_DATA_2", pROMPT_DATA_2) :
                new ObjectParameter("PROMPT_DATA_2", typeof(string));
    
            var pROMPT_DATA_3Parameter = pROMPT_DATA_3 != null ?
                new ObjectParameter("PROMPT_DATA_3", pROMPT_DATA_3) :
                new ObjectParameter("PROMPT_DATA_3", typeof(string));
    
            var pROMPT_DATA_4Parameter = pROMPT_DATA_4 != null ?
                new ObjectParameter("PROMPT_DATA_4", pROMPT_DATA_4) :
                new ObjectParameter("PROMPT_DATA_4", typeof(string));
    
            var pROMPT_DATA_5Parameter = pROMPT_DATA_5 != null ?
                new ObjectParameter("PROMPT_DATA_5", pROMPT_DATA_5) :
                new ObjectParameter("PROMPT_DATA_5", typeof(string));
    
            var cASHED_CHECK_KEYParameter = cASHED_CHECK_KEY.HasValue ?
                new ObjectParameter("CASHED_CHECK_KEY", cASHED_CHECK_KEY) :
                new ObjectParameter("CASHED_CHECK_KEY", typeof(int));
    
            var oPTPLUS_CARD_DETAIL_KEYParameter = oPTPLUS_CARD_DETAIL_KEY.HasValue ?
                new ObjectParameter("OPTPLUS_CARD_DETAIL_KEY", oPTPLUS_CARD_DETAIL_KEY) :
                new ObjectParameter("OPTPLUS_CARD_DETAIL_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FormLetterOnDemand_Insert", fORM_LETTER_KEYParameter, lOAN_KEYParameter, tELLERParameter, pROMPT_DATA_1Parameter, pROMPT_DATA_2Parameter, pROMPT_DATA_3Parameter, pROMPT_DATA_4Parameter, pROMPT_DATA_5Parameter, cASHED_CHECK_KEYParameter, oPTPLUS_CARD_DETAIL_KEYParameter);
        }
    
        public virtual int usp_FormLetterProduct_Insert(Nullable<int> fORM_LETTER_KEY, string pRODUCT_TYPE, string lOAN_TYPE, string lOAN_SUB_TYPE)
        {
            var fORM_LETTER_KEYParameter = fORM_LETTER_KEY.HasValue ?
                new ObjectParameter("FORM_LETTER_KEY", fORM_LETTER_KEY) :
                new ObjectParameter("FORM_LETTER_KEY", typeof(int));
    
            var pRODUCT_TYPEParameter = pRODUCT_TYPE != null ?
                new ObjectParameter("PRODUCT_TYPE", pRODUCT_TYPE) :
                new ObjectParameter("PRODUCT_TYPE", typeof(string));
    
            var lOAN_TYPEParameter = lOAN_TYPE != null ?
                new ObjectParameter("LOAN_TYPE", lOAN_TYPE) :
                new ObjectParameter("LOAN_TYPE", typeof(string));
    
            var lOAN_SUB_TYPEParameter = lOAN_SUB_TYPE != null ?
                new ObjectParameter("LOAN_SUB_TYPE", lOAN_SUB_TYPE) :
                new ObjectParameter("LOAN_SUB_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FormLetterProduct_Insert", fORM_LETTER_KEYParameter, pRODUCT_TYPEParameter, lOAN_TYPEParameter, lOAN_SUB_TYPEParameter);
        }
    
        public virtual int usp_FormLetterResult_Insert(Nullable<int> iFormLetterPrintedKey, Nullable<int> iFormLetterBatchKey, Nullable<int> iCustomerKey, Nullable<int> iCustomerAddressKey, Nullable<byte> iFormLetterResultFileType, string sFormLetterResultErrorCode, string sFormLetterResultFfwdCode, string sFormLetterResultDpvCode, string sFormLetterResultRetCode, string sMailingSvcJobNum)
        {
            var iFormLetterPrintedKeyParameter = iFormLetterPrintedKey.HasValue ?
                new ObjectParameter("iFormLetterPrintedKey", iFormLetterPrintedKey) :
                new ObjectParameter("iFormLetterPrintedKey", typeof(int));
    
            var iFormLetterBatchKeyParameter = iFormLetterBatchKey.HasValue ?
                new ObjectParameter("iFormLetterBatchKey", iFormLetterBatchKey) :
                new ObjectParameter("iFormLetterBatchKey", typeof(int));
    
            var iCustomerKeyParameter = iCustomerKey.HasValue ?
                new ObjectParameter("iCustomerKey", iCustomerKey) :
                new ObjectParameter("iCustomerKey", typeof(int));
    
            var iCustomerAddressKeyParameter = iCustomerAddressKey.HasValue ?
                new ObjectParameter("iCustomerAddressKey", iCustomerAddressKey) :
                new ObjectParameter("iCustomerAddressKey", typeof(int));
    
            var iFormLetterResultFileTypeParameter = iFormLetterResultFileType.HasValue ?
                new ObjectParameter("iFormLetterResultFileType", iFormLetterResultFileType) :
                new ObjectParameter("iFormLetterResultFileType", typeof(byte));
    
            var sFormLetterResultErrorCodeParameter = sFormLetterResultErrorCode != null ?
                new ObjectParameter("sFormLetterResultErrorCode", sFormLetterResultErrorCode) :
                new ObjectParameter("sFormLetterResultErrorCode", typeof(string));
    
            var sFormLetterResultFfwdCodeParameter = sFormLetterResultFfwdCode != null ?
                new ObjectParameter("sFormLetterResultFfwdCode", sFormLetterResultFfwdCode) :
                new ObjectParameter("sFormLetterResultFfwdCode", typeof(string));
    
            var sFormLetterResultDpvCodeParameter = sFormLetterResultDpvCode != null ?
                new ObjectParameter("sFormLetterResultDpvCode", sFormLetterResultDpvCode) :
                new ObjectParameter("sFormLetterResultDpvCode", typeof(string));
    
            var sFormLetterResultRetCodeParameter = sFormLetterResultRetCode != null ?
                new ObjectParameter("sFormLetterResultRetCode", sFormLetterResultRetCode) :
                new ObjectParameter("sFormLetterResultRetCode", typeof(string));
    
            var sMailingSvcJobNumParameter = sMailingSvcJobNum != null ?
                new ObjectParameter("sMailingSvcJobNum", sMailingSvcJobNum) :
                new ObjectParameter("sMailingSvcJobNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FormLetterResult_Insert", iFormLetterPrintedKeyParameter, iFormLetterBatchKeyParameter, iCustomerKeyParameter, iCustomerAddressKeyParameter, iFormLetterResultFileTypeParameter, sFormLetterResultErrorCodeParameter, sFormLetterResultFfwdCodeParameter, sFormLetterResultDpvCodeParameter, sFormLetterResultRetCodeParameter, sMailingSvcJobNumParameter);
        }
    
        public virtual int usp_GenerateTellerID(ObjectParameter newID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GenerateTellerID", newID);
        }
    
        public virtual ObjectResult<usp_Get_DB_Info_Result> usp_Get_DB_Info()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_DB_Info_Result>("usp_Get_DB_Info");
        }
    
        public virtual ObjectResult<usp_GetCollectionsItem_Result> usp_GetCollectionsItem(Nullable<int> iRisReptKey)
        {
            var iRisReptKeyParameter = iRisReptKey.HasValue ?
                new ObjectParameter("iRisReptKey", iRisReptKey) :
                new ObjectParameter("iRisReptKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCollectionsItem_Result>("usp_GetCollectionsItem", iRisReptKeyParameter);
        }
    
        public virtual ObjectResult<usp_GetOptPlusTrecs_Result> usp_GetOptPlusTrecs(string runDate)
        {
            var runDateParameter = runDate != null ?
                new ObjectParameter("runDate", runDate) :
                new ObjectParameter("runDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOptPlusTrecs_Result>("usp_GetOptPlusTrecs", runDateParameter);
        }
    
        public virtual int usp_GetOptPlusTrecs_1310(string runDate)
        {
            var runDateParameter = runDate != null ?
                new ObjectParameter("runDate", runDate) :
                new ObjectParameter("runDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetOptPlusTrecs_1310", runDateParameter);
        }
    
        public virtual ObjectResult<string> usp_GetTransUnionSegments(Nullable<int> iCustomerKey, string sSegmentType, Nullable<int> iRefreshIntvl)
        {
            var iCustomerKeyParameter = iCustomerKey.HasValue ?
                new ObjectParameter("iCustomerKey", iCustomerKey) :
                new ObjectParameter("iCustomerKey", typeof(int));
    
            var sSegmentTypeParameter = sSegmentType != null ?
                new ObjectParameter("sSegmentType", sSegmentType) :
                new ObjectParameter("sSegmentType", typeof(string));
    
            var iRefreshIntvlParameter = iRefreshIntvl.HasValue ?
                new ObjectParameter("iRefreshIntvl", iRefreshIntvl) :
                new ObjectParameter("iRefreshIntvl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetTransUnionSegments", iCustomerKeyParameter, sSegmentTypeParameter, iRefreshIntvlParameter);
        }
    
        public virtual int usp_GoodCustomerStudy_Insert(Nullable<int> cUSTOMER_KEY, Nullable<decimal> iNITIAL_APPROVED_AMT, Nullable<decimal> iNCREASE_AMT, Nullable<decimal> sTATE_MAX_AMT, Nullable<decimal> lOAN_TAKEN_AMT)
        {
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var iNITIAL_APPROVED_AMTParameter = iNITIAL_APPROVED_AMT.HasValue ?
                new ObjectParameter("INITIAL_APPROVED_AMT", iNITIAL_APPROVED_AMT) :
                new ObjectParameter("INITIAL_APPROVED_AMT", typeof(decimal));
    
            var iNCREASE_AMTParameter = iNCREASE_AMT.HasValue ?
                new ObjectParameter("INCREASE_AMT", iNCREASE_AMT) :
                new ObjectParameter("INCREASE_AMT", typeof(decimal));
    
            var sTATE_MAX_AMTParameter = sTATE_MAX_AMT.HasValue ?
                new ObjectParameter("STATE_MAX_AMT", sTATE_MAX_AMT) :
                new ObjectParameter("STATE_MAX_AMT", typeof(decimal));
    
            var lOAN_TAKEN_AMTParameter = lOAN_TAKEN_AMT.HasValue ?
                new ObjectParameter("LOAN_TAKEN_AMT", lOAN_TAKEN_AMT) :
                new ObjectParameter("LOAN_TAKEN_AMT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GoodCustomerStudy_Insert", cUSTOMER_KEYParameter, iNITIAL_APPROVED_AMTParameter, iNCREASE_AMTParameter, sTATE_MAX_AMTParameter, lOAN_TAKEN_AMTParameter);
        }
    
        public virtual int usp_IA_GetDailyKeys(Nullable<System.DateTime> forDate)
        {
            var forDateParameter = forDate.HasValue ?
                new ObjectParameter("forDate", forDate) :
                new ObjectParameter("forDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IA_GetDailyKeys", forDateParameter);
        }
    
        public virtual int usp_IA_ItemBaseDM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IA_ItemBaseDM");
        }
    
        public virtual int usp_IA_UpdateAuditItemDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IA_UpdateAuditItemDetails");
        }
    
        public virtual int usp_IAS_Check_LgCashedCheck(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_Check_LgCashedCheck", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_Comp_310K(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_Comp_310K", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_Comp_CTR(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_Comp_CTR", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_DMGenerateLocationReview(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_DMGenerateLocationReview", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_Fraud_Reversals(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_Fraud_Reversals", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_Fraud_SSNChanges(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_Fraud_SSNChanges", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_NewLoan_ExtremeIncome(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_NewLoan_ExtremeIncome", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_NewLoan_InactiveCustomer(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_NewLoan_InactiveCustomer", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_NewLoan_LoanAmountJump(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_NewLoan_LoanAmountJump", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_NewLoan_NoCustomerDocs(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_NewLoan_NoCustomerDocs", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_NewLoan_NoIncomeDocs(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_NewLoan_NoIncomeDocs", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_NewLoan_NoLienDoc(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_NewLoan_NoLienDoc", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_NewLoan_PayoffWithNew(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_NewLoan_PayoffWithNew", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAS_NewLoanMinRecsByLocation(Nullable<int> forLocation, Nullable<int> runKey)
        {
            var forLocationParameter = forLocation.HasValue ?
                new ObjectParameter("forLocation", forLocation) :
                new ObjectParameter("forLocation", typeof(int));
    
            var runKeyParameter = runKey.HasValue ?
                new ObjectParameter("RunKey", runKey) :
                new ObjectParameter("RunKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAS_NewLoanMinRecsByLocation", forLocationParameter, runKeyParameter);
        }
    
        public virtual int usp_IAV_NewLoan_NoIncomeDocs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IAV_NewLoan_NoIncomeDocs");
        }
    
        public virtual int usp_INETContact_Extended_Insert(string lAST_NAME, string fIRST_NAME, Nullable<System.DateTime> dOB, string aDDRESS, string cITY, string sTATE, string zIPCODE, string pHONE_NUMBER, Nullable<byte> pHONE_TYPE_CODE, Nullable<byte> bEST_TIME_TO_CALL, string eMAIL, Nullable<decimal> nET_INCOME, Nullable<bool> oPEN_CHECK_ACCOUNT, Nullable<short> uSE_LOCATION, Nullable<System.DateTime> lOCATION_VISIT_DATE, Nullable<System.DateTime> fOLLOW_UP_DATE, Nullable<System.DateTime> eXPERIANCE_FOLLOW_UP_DATE, Nullable<short> rEFERRAL_METHOD_KEY, string eNTERED_BY, Nullable<bool> cUSTOMER_PREQUALIFY, Nullable<System.DateTime> pREQUALIFY_DATE, string pREQUALIFY_BY, Nullable<bool> sEND_WELCOME_EMAIL, Nullable<byte> eXPERIANCE_FOLLOW_UP_METHOD, string mIDDLE_NAME, string sSN, string iD_TYPE, string iD_NUMBER, string sOURCE, string iD_VERIFIED, string iD_VERIFIED_OTHER, Nullable<byte> rESIDENCE, Nullable<System.DateTime> mOVE_IN_DATE, Nullable<decimal> mONTHLY_HOUSING, string hOME_PHONE_NUMBER, string cELL_PHONE_NUMBER, string wORK_PHONE_NUMBER, string wORK_PHONE_NUMBER_EXTENSION, string cOURTESY_CALL_TYPE, Nullable<bool> mILITARY_MEMBER, Nullable<bool> cOMBAT_DUTY, Nullable<bool> aCTIVE_DUTY, Nullable<bool> rESERVE_NON_ACTIVE_DUTY, Nullable<bool> rESERVE_ACTIVE_DUTY, string tYPE_OF_EMPLOYMENT, Nullable<byte> eMPLOYMENT_STATUS, Nullable<System.DateTime> hIRE_DATE, string eMPLOYER_NAME, string eMPLOYMENT_DEPARTMENT, string eMPLOYMENT_ADDRESS, string eMPLOYMENT_CITY, string eMPLOYMENT_STATE, string eMPLOYMENT_ZIP, Nullable<decimal> mONTHLY_GROSS_INCOME, Nullable<decimal> mONTHLY_GROSS_HOUSEHOLD_INCOME, string pAY_CYCLE, Nullable<byte> dAY_OF_WEEK, Nullable<byte> dAY_OF_MONTH1, Nullable<byte> dAY_OF_MONTH2, Nullable<System.DateTime> lAST_PAY_DATE, Nullable<bool> dIRECT_DEPOSIT, string sPOUSE_LAST_NAME, string sPOUSE_FIRST_NAME, string sPOUSE_MIDDLE_NAME, string sPOUSE_SSN, string sPOUSE_EMPLOYER, string sPOUSE_HOME_PHONE_NUMBER, string sPOUSE_CELL_PHONE_NUMBER, string sPOUSE_WORK_PHONE_NUMBER, string sPOUSE_WORK_PHONE_EXTENSION, Nullable<bool> jOINT_LOAN, string rEF1_LAST_NAME, string rEF1_FIRST_NAME, string rEF1_PHONE_NUMBER, string rEF2_LAST_NAME, string rEF2_FIRST_NAME, string rEF2_PHONE_NUMBER, Nullable<bool> pERFER_SPANISH_SPEAKING)
        {
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var cITYParameter = cITY != null ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var zIPCODEParameter = zIPCODE != null ?
                new ObjectParameter("ZIPCODE", zIPCODE) :
                new ObjectParameter("ZIPCODE", typeof(string));
    
            var pHONE_NUMBERParameter = pHONE_NUMBER != null ?
                new ObjectParameter("PHONE_NUMBER", pHONE_NUMBER) :
                new ObjectParameter("PHONE_NUMBER", typeof(string));
    
            var pHONE_TYPE_CODEParameter = pHONE_TYPE_CODE.HasValue ?
                new ObjectParameter("PHONE_TYPE_CODE", pHONE_TYPE_CODE) :
                new ObjectParameter("PHONE_TYPE_CODE", typeof(byte));
    
            var bEST_TIME_TO_CALLParameter = bEST_TIME_TO_CALL.HasValue ?
                new ObjectParameter("BEST_TIME_TO_CALL", bEST_TIME_TO_CALL) :
                new ObjectParameter("BEST_TIME_TO_CALL", typeof(byte));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var nET_INCOMEParameter = nET_INCOME.HasValue ?
                new ObjectParameter("NET_INCOME", nET_INCOME) :
                new ObjectParameter("NET_INCOME", typeof(decimal));
    
            var oPEN_CHECK_ACCOUNTParameter = oPEN_CHECK_ACCOUNT.HasValue ?
                new ObjectParameter("OPEN_CHECK_ACCOUNT", oPEN_CHECK_ACCOUNT) :
                new ObjectParameter("OPEN_CHECK_ACCOUNT", typeof(bool));
    
            var uSE_LOCATIONParameter = uSE_LOCATION.HasValue ?
                new ObjectParameter("USE_LOCATION", uSE_LOCATION) :
                new ObjectParameter("USE_LOCATION", typeof(short));
    
            var lOCATION_VISIT_DATEParameter = lOCATION_VISIT_DATE.HasValue ?
                new ObjectParameter("LOCATION_VISIT_DATE", lOCATION_VISIT_DATE) :
                new ObjectParameter("LOCATION_VISIT_DATE", typeof(System.DateTime));
    
            var fOLLOW_UP_DATEParameter = fOLLOW_UP_DATE.HasValue ?
                new ObjectParameter("FOLLOW_UP_DATE", fOLLOW_UP_DATE) :
                new ObjectParameter("FOLLOW_UP_DATE", typeof(System.DateTime));
    
            var eXPERIANCE_FOLLOW_UP_DATEParameter = eXPERIANCE_FOLLOW_UP_DATE.HasValue ?
                new ObjectParameter("EXPERIANCE_FOLLOW_UP_DATE", eXPERIANCE_FOLLOW_UP_DATE) :
                new ObjectParameter("EXPERIANCE_FOLLOW_UP_DATE", typeof(System.DateTime));
    
            var rEFERRAL_METHOD_KEYParameter = rEFERRAL_METHOD_KEY.HasValue ?
                new ObjectParameter("REFERRAL_METHOD_KEY", rEFERRAL_METHOD_KEY) :
                new ObjectParameter("REFERRAL_METHOD_KEY", typeof(short));
    
            var eNTERED_BYParameter = eNTERED_BY != null ?
                new ObjectParameter("ENTERED_BY", eNTERED_BY) :
                new ObjectParameter("ENTERED_BY", typeof(string));
    
            var cUSTOMER_PREQUALIFYParameter = cUSTOMER_PREQUALIFY.HasValue ?
                new ObjectParameter("CUSTOMER_PREQUALIFY", cUSTOMER_PREQUALIFY) :
                new ObjectParameter("CUSTOMER_PREQUALIFY", typeof(bool));
    
            var pREQUALIFY_DATEParameter = pREQUALIFY_DATE.HasValue ?
                new ObjectParameter("PREQUALIFY_DATE", pREQUALIFY_DATE) :
                new ObjectParameter("PREQUALIFY_DATE", typeof(System.DateTime));
    
            var pREQUALIFY_BYParameter = pREQUALIFY_BY != null ?
                new ObjectParameter("PREQUALIFY_BY", pREQUALIFY_BY) :
                new ObjectParameter("PREQUALIFY_BY", typeof(string));
    
            var sEND_WELCOME_EMAILParameter = sEND_WELCOME_EMAIL.HasValue ?
                new ObjectParameter("SEND_WELCOME_EMAIL", sEND_WELCOME_EMAIL) :
                new ObjectParameter("SEND_WELCOME_EMAIL", typeof(bool));
    
            var eXPERIANCE_FOLLOW_UP_METHODParameter = eXPERIANCE_FOLLOW_UP_METHOD.HasValue ?
                new ObjectParameter("EXPERIANCE_FOLLOW_UP_METHOD", eXPERIANCE_FOLLOW_UP_METHOD) :
                new ObjectParameter("EXPERIANCE_FOLLOW_UP_METHOD", typeof(byte));
    
            var mIDDLE_NAMEParameter = mIDDLE_NAME != null ?
                new ObjectParameter("MIDDLE_NAME", mIDDLE_NAME) :
                new ObjectParameter("MIDDLE_NAME", typeof(string));
    
            var sSNParameter = sSN != null ?
                new ObjectParameter("SSN", sSN) :
                new ObjectParameter("SSN", typeof(string));
    
            var iD_TYPEParameter = iD_TYPE != null ?
                new ObjectParameter("ID_TYPE", iD_TYPE) :
                new ObjectParameter("ID_TYPE", typeof(string));
    
            var iD_NUMBERParameter = iD_NUMBER != null ?
                new ObjectParameter("ID_NUMBER", iD_NUMBER) :
                new ObjectParameter("ID_NUMBER", typeof(string));
    
            var sOURCEParameter = sOURCE != null ?
                new ObjectParameter("SOURCE", sOURCE) :
                new ObjectParameter("SOURCE", typeof(string));
    
            var iD_VERIFIEDParameter = iD_VERIFIED != null ?
                new ObjectParameter("ID_VERIFIED", iD_VERIFIED) :
                new ObjectParameter("ID_VERIFIED", typeof(string));
    
            var iD_VERIFIED_OTHERParameter = iD_VERIFIED_OTHER != null ?
                new ObjectParameter("ID_VERIFIED_OTHER", iD_VERIFIED_OTHER) :
                new ObjectParameter("ID_VERIFIED_OTHER", typeof(string));
    
            var rESIDENCEParameter = rESIDENCE.HasValue ?
                new ObjectParameter("RESIDENCE", rESIDENCE) :
                new ObjectParameter("RESIDENCE", typeof(byte));
    
            var mOVE_IN_DATEParameter = mOVE_IN_DATE.HasValue ?
                new ObjectParameter("MOVE_IN_DATE", mOVE_IN_DATE) :
                new ObjectParameter("MOVE_IN_DATE", typeof(System.DateTime));
    
            var mONTHLY_HOUSINGParameter = mONTHLY_HOUSING.HasValue ?
                new ObjectParameter("MONTHLY_HOUSING", mONTHLY_HOUSING) :
                new ObjectParameter("MONTHLY_HOUSING", typeof(decimal));
    
            var hOME_PHONE_NUMBERParameter = hOME_PHONE_NUMBER != null ?
                new ObjectParameter("HOME_PHONE_NUMBER", hOME_PHONE_NUMBER) :
                new ObjectParameter("HOME_PHONE_NUMBER", typeof(string));
    
            var cELL_PHONE_NUMBERParameter = cELL_PHONE_NUMBER != null ?
                new ObjectParameter("CELL_PHONE_NUMBER", cELL_PHONE_NUMBER) :
                new ObjectParameter("CELL_PHONE_NUMBER", typeof(string));
    
            var wORK_PHONE_NUMBERParameter = wORK_PHONE_NUMBER != null ?
                new ObjectParameter("WORK_PHONE_NUMBER", wORK_PHONE_NUMBER) :
                new ObjectParameter("WORK_PHONE_NUMBER", typeof(string));
    
            var wORK_PHONE_NUMBER_EXTENSIONParameter = wORK_PHONE_NUMBER_EXTENSION != null ?
                new ObjectParameter("WORK_PHONE_NUMBER_EXTENSION", wORK_PHONE_NUMBER_EXTENSION) :
                new ObjectParameter("WORK_PHONE_NUMBER_EXTENSION", typeof(string));
    
            var cOURTESY_CALL_TYPEParameter = cOURTESY_CALL_TYPE != null ?
                new ObjectParameter("COURTESY_CALL_TYPE", cOURTESY_CALL_TYPE) :
                new ObjectParameter("COURTESY_CALL_TYPE", typeof(string));
    
            var mILITARY_MEMBERParameter = mILITARY_MEMBER.HasValue ?
                new ObjectParameter("MILITARY_MEMBER", mILITARY_MEMBER) :
                new ObjectParameter("MILITARY_MEMBER", typeof(bool));
    
            var cOMBAT_DUTYParameter = cOMBAT_DUTY.HasValue ?
                new ObjectParameter("COMBAT_DUTY", cOMBAT_DUTY) :
                new ObjectParameter("COMBAT_DUTY", typeof(bool));
    
            var aCTIVE_DUTYParameter = aCTIVE_DUTY.HasValue ?
                new ObjectParameter("ACTIVE_DUTY", aCTIVE_DUTY) :
                new ObjectParameter("ACTIVE_DUTY", typeof(bool));
    
            var rESERVE_NON_ACTIVE_DUTYParameter = rESERVE_NON_ACTIVE_DUTY.HasValue ?
                new ObjectParameter("RESERVE_NON_ACTIVE_DUTY", rESERVE_NON_ACTIVE_DUTY) :
                new ObjectParameter("RESERVE_NON_ACTIVE_DUTY", typeof(bool));
    
            var rESERVE_ACTIVE_DUTYParameter = rESERVE_ACTIVE_DUTY.HasValue ?
                new ObjectParameter("RESERVE_ACTIVE_DUTY", rESERVE_ACTIVE_DUTY) :
                new ObjectParameter("RESERVE_ACTIVE_DUTY", typeof(bool));
    
            var tYPE_OF_EMPLOYMENTParameter = tYPE_OF_EMPLOYMENT != null ?
                new ObjectParameter("TYPE_OF_EMPLOYMENT", tYPE_OF_EMPLOYMENT) :
                new ObjectParameter("TYPE_OF_EMPLOYMENT", typeof(string));
    
            var eMPLOYMENT_STATUSParameter = eMPLOYMENT_STATUS.HasValue ?
                new ObjectParameter("EMPLOYMENT_STATUS", eMPLOYMENT_STATUS) :
                new ObjectParameter("EMPLOYMENT_STATUS", typeof(byte));
    
            var hIRE_DATEParameter = hIRE_DATE.HasValue ?
                new ObjectParameter("HIRE_DATE", hIRE_DATE) :
                new ObjectParameter("HIRE_DATE", typeof(System.DateTime));
    
            var eMPLOYER_NAMEParameter = eMPLOYER_NAME != null ?
                new ObjectParameter("EMPLOYER_NAME", eMPLOYER_NAME) :
                new ObjectParameter("EMPLOYER_NAME", typeof(string));
    
            var eMPLOYMENT_DEPARTMENTParameter = eMPLOYMENT_DEPARTMENT != null ?
                new ObjectParameter("EMPLOYMENT_DEPARTMENT", eMPLOYMENT_DEPARTMENT) :
                new ObjectParameter("EMPLOYMENT_DEPARTMENT", typeof(string));
    
            var eMPLOYMENT_ADDRESSParameter = eMPLOYMENT_ADDRESS != null ?
                new ObjectParameter("EMPLOYMENT_ADDRESS", eMPLOYMENT_ADDRESS) :
                new ObjectParameter("EMPLOYMENT_ADDRESS", typeof(string));
    
            var eMPLOYMENT_CITYParameter = eMPLOYMENT_CITY != null ?
                new ObjectParameter("EMPLOYMENT_CITY", eMPLOYMENT_CITY) :
                new ObjectParameter("EMPLOYMENT_CITY", typeof(string));
    
            var eMPLOYMENT_STATEParameter = eMPLOYMENT_STATE != null ?
                new ObjectParameter("EMPLOYMENT_STATE", eMPLOYMENT_STATE) :
                new ObjectParameter("EMPLOYMENT_STATE", typeof(string));
    
            var eMPLOYMENT_ZIPParameter = eMPLOYMENT_ZIP != null ?
                new ObjectParameter("EMPLOYMENT_ZIP", eMPLOYMENT_ZIP) :
                new ObjectParameter("EMPLOYMENT_ZIP", typeof(string));
    
            var mONTHLY_GROSS_INCOMEParameter = mONTHLY_GROSS_INCOME.HasValue ?
                new ObjectParameter("MONTHLY_GROSS_INCOME", mONTHLY_GROSS_INCOME) :
                new ObjectParameter("MONTHLY_GROSS_INCOME", typeof(decimal));
    
            var mONTHLY_GROSS_HOUSEHOLD_INCOMEParameter = mONTHLY_GROSS_HOUSEHOLD_INCOME.HasValue ?
                new ObjectParameter("MONTHLY_GROSS_HOUSEHOLD_INCOME", mONTHLY_GROSS_HOUSEHOLD_INCOME) :
                new ObjectParameter("MONTHLY_GROSS_HOUSEHOLD_INCOME", typeof(decimal));
    
            var pAY_CYCLEParameter = pAY_CYCLE != null ?
                new ObjectParameter("PAY_CYCLE", pAY_CYCLE) :
                new ObjectParameter("PAY_CYCLE", typeof(string));
    
            var dAY_OF_WEEKParameter = dAY_OF_WEEK.HasValue ?
                new ObjectParameter("DAY_OF_WEEK", dAY_OF_WEEK) :
                new ObjectParameter("DAY_OF_WEEK", typeof(byte));
    
            var dAY_OF_MONTH1Parameter = dAY_OF_MONTH1.HasValue ?
                new ObjectParameter("DAY_OF_MONTH1", dAY_OF_MONTH1) :
                new ObjectParameter("DAY_OF_MONTH1", typeof(byte));
    
            var dAY_OF_MONTH2Parameter = dAY_OF_MONTH2.HasValue ?
                new ObjectParameter("DAY_OF_MONTH2", dAY_OF_MONTH2) :
                new ObjectParameter("DAY_OF_MONTH2", typeof(byte));
    
            var lAST_PAY_DATEParameter = lAST_PAY_DATE.HasValue ?
                new ObjectParameter("LAST_PAY_DATE", lAST_PAY_DATE) :
                new ObjectParameter("LAST_PAY_DATE", typeof(System.DateTime));
    
            var dIRECT_DEPOSITParameter = dIRECT_DEPOSIT.HasValue ?
                new ObjectParameter("DIRECT_DEPOSIT", dIRECT_DEPOSIT) :
                new ObjectParameter("DIRECT_DEPOSIT", typeof(bool));
    
            var sPOUSE_LAST_NAMEParameter = sPOUSE_LAST_NAME != null ?
                new ObjectParameter("SPOUSE_LAST_NAME", sPOUSE_LAST_NAME) :
                new ObjectParameter("SPOUSE_LAST_NAME", typeof(string));
    
            var sPOUSE_FIRST_NAMEParameter = sPOUSE_FIRST_NAME != null ?
                new ObjectParameter("SPOUSE_FIRST_NAME", sPOUSE_FIRST_NAME) :
                new ObjectParameter("SPOUSE_FIRST_NAME", typeof(string));
    
            var sPOUSE_MIDDLE_NAMEParameter = sPOUSE_MIDDLE_NAME != null ?
                new ObjectParameter("SPOUSE_MIDDLE_NAME", sPOUSE_MIDDLE_NAME) :
                new ObjectParameter("SPOUSE_MIDDLE_NAME", typeof(string));
    
            var sPOUSE_SSNParameter = sPOUSE_SSN != null ?
                new ObjectParameter("SPOUSE_SSN", sPOUSE_SSN) :
                new ObjectParameter("SPOUSE_SSN", typeof(string));
    
            var sPOUSE_EMPLOYERParameter = sPOUSE_EMPLOYER != null ?
                new ObjectParameter("SPOUSE_EMPLOYER", sPOUSE_EMPLOYER) :
                new ObjectParameter("SPOUSE_EMPLOYER", typeof(string));
    
            var sPOUSE_HOME_PHONE_NUMBERParameter = sPOUSE_HOME_PHONE_NUMBER != null ?
                new ObjectParameter("SPOUSE_HOME_PHONE_NUMBER", sPOUSE_HOME_PHONE_NUMBER) :
                new ObjectParameter("SPOUSE_HOME_PHONE_NUMBER", typeof(string));
    
            var sPOUSE_CELL_PHONE_NUMBERParameter = sPOUSE_CELL_PHONE_NUMBER != null ?
                new ObjectParameter("SPOUSE_CELL_PHONE_NUMBER", sPOUSE_CELL_PHONE_NUMBER) :
                new ObjectParameter("SPOUSE_CELL_PHONE_NUMBER", typeof(string));
    
            var sPOUSE_WORK_PHONE_NUMBERParameter = sPOUSE_WORK_PHONE_NUMBER != null ?
                new ObjectParameter("SPOUSE_WORK_PHONE_NUMBER", sPOUSE_WORK_PHONE_NUMBER) :
                new ObjectParameter("SPOUSE_WORK_PHONE_NUMBER", typeof(string));
    
            var sPOUSE_WORK_PHONE_EXTENSIONParameter = sPOUSE_WORK_PHONE_EXTENSION != null ?
                new ObjectParameter("SPOUSE_WORK_PHONE_EXTENSION", sPOUSE_WORK_PHONE_EXTENSION) :
                new ObjectParameter("SPOUSE_WORK_PHONE_EXTENSION", typeof(string));
    
            var jOINT_LOANParameter = jOINT_LOAN.HasValue ?
                new ObjectParameter("JOINT_LOAN", jOINT_LOAN) :
                new ObjectParameter("JOINT_LOAN", typeof(bool));
    
            var rEF1_LAST_NAMEParameter = rEF1_LAST_NAME != null ?
                new ObjectParameter("REF1_LAST_NAME", rEF1_LAST_NAME) :
                new ObjectParameter("REF1_LAST_NAME", typeof(string));
    
            var rEF1_FIRST_NAMEParameter = rEF1_FIRST_NAME != null ?
                new ObjectParameter("REF1_FIRST_NAME", rEF1_FIRST_NAME) :
                new ObjectParameter("REF1_FIRST_NAME", typeof(string));
    
            var rEF1_PHONE_NUMBERParameter = rEF1_PHONE_NUMBER != null ?
                new ObjectParameter("REF1_PHONE_NUMBER", rEF1_PHONE_NUMBER) :
                new ObjectParameter("REF1_PHONE_NUMBER", typeof(string));
    
            var rEF2_LAST_NAMEParameter = rEF2_LAST_NAME != null ?
                new ObjectParameter("REF2_LAST_NAME", rEF2_LAST_NAME) :
                new ObjectParameter("REF2_LAST_NAME", typeof(string));
    
            var rEF2_FIRST_NAMEParameter = rEF2_FIRST_NAME != null ?
                new ObjectParameter("REF2_FIRST_NAME", rEF2_FIRST_NAME) :
                new ObjectParameter("REF2_FIRST_NAME", typeof(string));
    
            var rEF2_PHONE_NUMBERParameter = rEF2_PHONE_NUMBER != null ?
                new ObjectParameter("REF2_PHONE_NUMBER", rEF2_PHONE_NUMBER) :
                new ObjectParameter("REF2_PHONE_NUMBER", typeof(string));
    
            var pERFER_SPANISH_SPEAKINGParameter = pERFER_SPANISH_SPEAKING.HasValue ?
                new ObjectParameter("PERFER_SPANISH_SPEAKING", pERFER_SPANISH_SPEAKING) :
                new ObjectParameter("PERFER_SPANISH_SPEAKING", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_INETContact_Extended_Insert", lAST_NAMEParameter, fIRST_NAMEParameter, dOBParameter, aDDRESSParameter, cITYParameter, sTATEParameter, zIPCODEParameter, pHONE_NUMBERParameter, pHONE_TYPE_CODEParameter, bEST_TIME_TO_CALLParameter, eMAILParameter, nET_INCOMEParameter, oPEN_CHECK_ACCOUNTParameter, uSE_LOCATIONParameter, lOCATION_VISIT_DATEParameter, fOLLOW_UP_DATEParameter, eXPERIANCE_FOLLOW_UP_DATEParameter, rEFERRAL_METHOD_KEYParameter, eNTERED_BYParameter, cUSTOMER_PREQUALIFYParameter, pREQUALIFY_DATEParameter, pREQUALIFY_BYParameter, sEND_WELCOME_EMAILParameter, eXPERIANCE_FOLLOW_UP_METHODParameter, mIDDLE_NAMEParameter, sSNParameter, iD_TYPEParameter, iD_NUMBERParameter, sOURCEParameter, iD_VERIFIEDParameter, iD_VERIFIED_OTHERParameter, rESIDENCEParameter, mOVE_IN_DATEParameter, mONTHLY_HOUSINGParameter, hOME_PHONE_NUMBERParameter, cELL_PHONE_NUMBERParameter, wORK_PHONE_NUMBERParameter, wORK_PHONE_NUMBER_EXTENSIONParameter, cOURTESY_CALL_TYPEParameter, mILITARY_MEMBERParameter, cOMBAT_DUTYParameter, aCTIVE_DUTYParameter, rESERVE_NON_ACTIVE_DUTYParameter, rESERVE_ACTIVE_DUTYParameter, tYPE_OF_EMPLOYMENTParameter, eMPLOYMENT_STATUSParameter, hIRE_DATEParameter, eMPLOYER_NAMEParameter, eMPLOYMENT_DEPARTMENTParameter, eMPLOYMENT_ADDRESSParameter, eMPLOYMENT_CITYParameter, eMPLOYMENT_STATEParameter, eMPLOYMENT_ZIPParameter, mONTHLY_GROSS_INCOMEParameter, mONTHLY_GROSS_HOUSEHOLD_INCOMEParameter, pAY_CYCLEParameter, dAY_OF_WEEKParameter, dAY_OF_MONTH1Parameter, dAY_OF_MONTH2Parameter, lAST_PAY_DATEParameter, dIRECT_DEPOSITParameter, sPOUSE_LAST_NAMEParameter, sPOUSE_FIRST_NAMEParameter, sPOUSE_MIDDLE_NAMEParameter, sPOUSE_SSNParameter, sPOUSE_EMPLOYERParameter, sPOUSE_HOME_PHONE_NUMBERParameter, sPOUSE_CELL_PHONE_NUMBERParameter, sPOUSE_WORK_PHONE_NUMBERParameter, sPOUSE_WORK_PHONE_EXTENSIONParameter, jOINT_LOANParameter, rEF1_LAST_NAMEParameter, rEF1_FIRST_NAMEParameter, rEF1_PHONE_NUMBERParameter, rEF2_LAST_NAMEParameter, rEF2_FIRST_NAMEParameter, rEF2_PHONE_NUMBERParameter, pERFER_SPANISH_SPEAKINGParameter);
        }
    
        public virtual int usp_INETContact_Insert(string lAST_NAME, string fIRST_NAME, string aDDRESS, string cITY, string sTATE, string zIPCODE, string pHONE_NUMBER, Nullable<byte> pHONE_TYPE_CODE, Nullable<byte> bEST_TIME_TO_CALL, string eMAIL, Nullable<decimal> nET_INCOME, Nullable<bool> oPEN_CHECK_ACCOUNT, Nullable<short> uSE_LOCATION, Nullable<System.DateTime> lOCATION_VISIT_DATE, Nullable<System.DateTime> fOLLOW_UP_DATE, Nullable<System.DateTime> eXPERIANCE_FOLLOW_UP_DATE, Nullable<short> rEFERRAL_METHOD_KEY, string eNTERED_BY, Nullable<bool> cUSTOMER_PREQUALIFY, Nullable<System.DateTime> pREQUALIFY_DATE, string pREQUALIFY_BY, Nullable<bool> sEND_WELCOME_EMAIL, Nullable<byte> eXPERIANCE_FOLLOW_UP_METHOD)
        {
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var cITYParameter = cITY != null ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var zIPCODEParameter = zIPCODE != null ?
                new ObjectParameter("ZIPCODE", zIPCODE) :
                new ObjectParameter("ZIPCODE", typeof(string));
    
            var pHONE_NUMBERParameter = pHONE_NUMBER != null ?
                new ObjectParameter("PHONE_NUMBER", pHONE_NUMBER) :
                new ObjectParameter("PHONE_NUMBER", typeof(string));
    
            var pHONE_TYPE_CODEParameter = pHONE_TYPE_CODE.HasValue ?
                new ObjectParameter("PHONE_TYPE_CODE", pHONE_TYPE_CODE) :
                new ObjectParameter("PHONE_TYPE_CODE", typeof(byte));
    
            var bEST_TIME_TO_CALLParameter = bEST_TIME_TO_CALL.HasValue ?
                new ObjectParameter("BEST_TIME_TO_CALL", bEST_TIME_TO_CALL) :
                new ObjectParameter("BEST_TIME_TO_CALL", typeof(byte));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var nET_INCOMEParameter = nET_INCOME.HasValue ?
                new ObjectParameter("NET_INCOME", nET_INCOME) :
                new ObjectParameter("NET_INCOME", typeof(decimal));
    
            var oPEN_CHECK_ACCOUNTParameter = oPEN_CHECK_ACCOUNT.HasValue ?
                new ObjectParameter("OPEN_CHECK_ACCOUNT", oPEN_CHECK_ACCOUNT) :
                new ObjectParameter("OPEN_CHECK_ACCOUNT", typeof(bool));
    
            var uSE_LOCATIONParameter = uSE_LOCATION.HasValue ?
                new ObjectParameter("USE_LOCATION", uSE_LOCATION) :
                new ObjectParameter("USE_LOCATION", typeof(short));
    
            var lOCATION_VISIT_DATEParameter = lOCATION_VISIT_DATE.HasValue ?
                new ObjectParameter("LOCATION_VISIT_DATE", lOCATION_VISIT_DATE) :
                new ObjectParameter("LOCATION_VISIT_DATE", typeof(System.DateTime));
    
            var fOLLOW_UP_DATEParameter = fOLLOW_UP_DATE.HasValue ?
                new ObjectParameter("FOLLOW_UP_DATE", fOLLOW_UP_DATE) :
                new ObjectParameter("FOLLOW_UP_DATE", typeof(System.DateTime));
    
            var eXPERIANCE_FOLLOW_UP_DATEParameter = eXPERIANCE_FOLLOW_UP_DATE.HasValue ?
                new ObjectParameter("EXPERIANCE_FOLLOW_UP_DATE", eXPERIANCE_FOLLOW_UP_DATE) :
                new ObjectParameter("EXPERIANCE_FOLLOW_UP_DATE", typeof(System.DateTime));
    
            var rEFERRAL_METHOD_KEYParameter = rEFERRAL_METHOD_KEY.HasValue ?
                new ObjectParameter("REFERRAL_METHOD_KEY", rEFERRAL_METHOD_KEY) :
                new ObjectParameter("REFERRAL_METHOD_KEY", typeof(short));
    
            var eNTERED_BYParameter = eNTERED_BY != null ?
                new ObjectParameter("ENTERED_BY", eNTERED_BY) :
                new ObjectParameter("ENTERED_BY", typeof(string));
    
            var cUSTOMER_PREQUALIFYParameter = cUSTOMER_PREQUALIFY.HasValue ?
                new ObjectParameter("CUSTOMER_PREQUALIFY", cUSTOMER_PREQUALIFY) :
                new ObjectParameter("CUSTOMER_PREQUALIFY", typeof(bool));
    
            var pREQUALIFY_DATEParameter = pREQUALIFY_DATE.HasValue ?
                new ObjectParameter("PREQUALIFY_DATE", pREQUALIFY_DATE) :
                new ObjectParameter("PREQUALIFY_DATE", typeof(System.DateTime));
    
            var pREQUALIFY_BYParameter = pREQUALIFY_BY != null ?
                new ObjectParameter("PREQUALIFY_BY", pREQUALIFY_BY) :
                new ObjectParameter("PREQUALIFY_BY", typeof(string));
    
            var sEND_WELCOME_EMAILParameter = sEND_WELCOME_EMAIL.HasValue ?
                new ObjectParameter("SEND_WELCOME_EMAIL", sEND_WELCOME_EMAIL) :
                new ObjectParameter("SEND_WELCOME_EMAIL", typeof(bool));
    
            var eXPERIANCE_FOLLOW_UP_METHODParameter = eXPERIANCE_FOLLOW_UP_METHOD.HasValue ?
                new ObjectParameter("EXPERIANCE_FOLLOW_UP_METHOD", eXPERIANCE_FOLLOW_UP_METHOD) :
                new ObjectParameter("EXPERIANCE_FOLLOW_UP_METHOD", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_INETContact_Insert", lAST_NAMEParameter, fIRST_NAMEParameter, aDDRESSParameter, cITYParameter, sTATEParameter, zIPCODEParameter, pHONE_NUMBERParameter, pHONE_TYPE_CODEParameter, bEST_TIME_TO_CALLParameter, eMAILParameter, nET_INCOMEParameter, oPEN_CHECK_ACCOUNTParameter, uSE_LOCATIONParameter, lOCATION_VISIT_DATEParameter, fOLLOW_UP_DATEParameter, eXPERIANCE_FOLLOW_UP_DATEParameter, rEFERRAL_METHOD_KEYParameter, eNTERED_BYParameter, cUSTOMER_PREQUALIFYParameter, pREQUALIFY_DATEParameter, pREQUALIFY_BYParameter, sEND_WELCOME_EMAILParameter, eXPERIANCE_FOLLOW_UP_METHODParameter);
        }
    
        public virtual int usp_INETContactNote_Insert(Nullable<int> iNET_CONTACT_KEY, string iNET_NOTE, string eNTERED_BY, Nullable<bool> pUBLIC_NOTE)
        {
            var iNET_CONTACT_KEYParameter = iNET_CONTACT_KEY.HasValue ?
                new ObjectParameter("INET_CONTACT_KEY", iNET_CONTACT_KEY) :
                new ObjectParameter("INET_CONTACT_KEY", typeof(int));
    
            var iNET_NOTEParameter = iNET_NOTE != null ?
                new ObjectParameter("INET_NOTE", iNET_NOTE) :
                new ObjectParameter("INET_NOTE", typeof(string));
    
            var eNTERED_BYParameter = eNTERED_BY != null ?
                new ObjectParameter("ENTERED_BY", eNTERED_BY) :
                new ObjectParameter("ENTERED_BY", typeof(string));
    
            var pUBLIC_NOTEParameter = pUBLIC_NOTE.HasValue ?
                new ObjectParameter("PUBLIC_NOTE", pUBLIC_NOTE) :
                new ObjectParameter("PUBLIC_NOTE", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_INETContactNote_Insert", iNET_CONTACT_KEYParameter, iNET_NOTEParameter, eNTERED_BYParameter, pUBLIC_NOTEParameter);
        }
    
        public virtual int usp_Lender_Insert(string lENDER_ID, string lENDER_NAME, string eNTERED_BY, ObjectParameter lENDER_KEY)
        {
            var lENDER_IDParameter = lENDER_ID != null ?
                new ObjectParameter("LENDER_ID", lENDER_ID) :
                new ObjectParameter("LENDER_ID", typeof(string));
    
            var lENDER_NAMEParameter = lENDER_NAME != null ?
                new ObjectParameter("LENDER_NAME", lENDER_NAME) :
                new ObjectParameter("LENDER_NAME", typeof(string));
    
            var eNTERED_BYParameter = eNTERED_BY != null ?
                new ObjectParameter("ENTERED_BY", eNTERED_BY) :
                new ObjectParameter("ENTERED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Lender_Insert", lENDER_IDParameter, lENDER_NAMEParameter, eNTERED_BYParameter, lENDER_KEY);
        }
    
        public virtual int usp_Lender_Update(Nullable<byte> lENDER_KEY, string lENDER_ID, string lENDER_NAME, Nullable<bool> eNABLED, string uPDATED_BY)
        {
            var lENDER_KEYParameter = lENDER_KEY.HasValue ?
                new ObjectParameter("LENDER_KEY", lENDER_KEY) :
                new ObjectParameter("LENDER_KEY", typeof(byte));
    
            var lENDER_IDParameter = lENDER_ID != null ?
                new ObjectParameter("LENDER_ID", lENDER_ID) :
                new ObjectParameter("LENDER_ID", typeof(string));
    
            var lENDER_NAMEParameter = lENDER_NAME != null ?
                new ObjectParameter("LENDER_NAME", lENDER_NAME) :
                new ObjectParameter("LENDER_NAME", typeof(string));
    
            var eNABLEDParameter = eNABLED.HasValue ?
                new ObjectParameter("ENABLED", eNABLED) :
                new ObjectParameter("ENABLED", typeof(bool));
    
            var uPDATED_BYParameter = uPDATED_BY != null ?
                new ObjectParameter("UPDATED_BY", uPDATED_BY) :
                new ObjectParameter("UPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Lender_Update", lENDER_KEYParameter, lENDER_IDParameter, lENDER_NAMEParameter, eNABLEDParameter, uPDATED_BYParameter);
        }
    
        public virtual int usp_LetterConfig_Insert(string fORMLETTER_NAME, string fORMLETTER_DESCRIPTION, Nullable<short> pRINT_ON_DAYDUE, Nullable<bool> uSE_MERGE_FILE, string lOAN_TYPE, Nullable<bool> dELETED, string eNTITY_NAME, string cSV_FILE_NAME, string aUDIT_CODES, string nEW_AUDIT_CODE, Nullable<short> aFTER_SEQUENCE, Nullable<bool> aFTER_CREDIT_REPORT, Nullable<bool> aUTO_PROCESS_LETTER)
        {
            var fORMLETTER_NAMEParameter = fORMLETTER_NAME != null ?
                new ObjectParameter("FORMLETTER_NAME", fORMLETTER_NAME) :
                new ObjectParameter("FORMLETTER_NAME", typeof(string));
    
            var fORMLETTER_DESCRIPTIONParameter = fORMLETTER_DESCRIPTION != null ?
                new ObjectParameter("FORMLETTER_DESCRIPTION", fORMLETTER_DESCRIPTION) :
                new ObjectParameter("FORMLETTER_DESCRIPTION", typeof(string));
    
            var pRINT_ON_DAYDUEParameter = pRINT_ON_DAYDUE.HasValue ?
                new ObjectParameter("PRINT_ON_DAYDUE", pRINT_ON_DAYDUE) :
                new ObjectParameter("PRINT_ON_DAYDUE", typeof(short));
    
            var uSE_MERGE_FILEParameter = uSE_MERGE_FILE.HasValue ?
                new ObjectParameter("USE_MERGE_FILE", uSE_MERGE_FILE) :
                new ObjectParameter("USE_MERGE_FILE", typeof(bool));
    
            var lOAN_TYPEParameter = lOAN_TYPE != null ?
                new ObjectParameter("LOAN_TYPE", lOAN_TYPE) :
                new ObjectParameter("LOAN_TYPE", typeof(string));
    
            var dELETEDParameter = dELETED.HasValue ?
                new ObjectParameter("DELETED", dELETED) :
                new ObjectParameter("DELETED", typeof(bool));
    
            var eNTITY_NAMEParameter = eNTITY_NAME != null ?
                new ObjectParameter("ENTITY_NAME", eNTITY_NAME) :
                new ObjectParameter("ENTITY_NAME", typeof(string));
    
            var cSV_FILE_NAMEParameter = cSV_FILE_NAME != null ?
                new ObjectParameter("CSV_FILE_NAME", cSV_FILE_NAME) :
                new ObjectParameter("CSV_FILE_NAME", typeof(string));
    
            var aUDIT_CODESParameter = aUDIT_CODES != null ?
                new ObjectParameter("AUDIT_CODES", aUDIT_CODES) :
                new ObjectParameter("AUDIT_CODES", typeof(string));
    
            var nEW_AUDIT_CODEParameter = nEW_AUDIT_CODE != null ?
                new ObjectParameter("NEW_AUDIT_CODE", nEW_AUDIT_CODE) :
                new ObjectParameter("NEW_AUDIT_CODE", typeof(string));
    
            var aFTER_SEQUENCEParameter = aFTER_SEQUENCE.HasValue ?
                new ObjectParameter("AFTER_SEQUENCE", aFTER_SEQUENCE) :
                new ObjectParameter("AFTER_SEQUENCE", typeof(short));
    
            var aFTER_CREDIT_REPORTParameter = aFTER_CREDIT_REPORT.HasValue ?
                new ObjectParameter("AFTER_CREDIT_REPORT", aFTER_CREDIT_REPORT) :
                new ObjectParameter("AFTER_CREDIT_REPORT", typeof(bool));
    
            var aUTO_PROCESS_LETTERParameter = aUTO_PROCESS_LETTER.HasValue ?
                new ObjectParameter("AUTO_PROCESS_LETTER", aUTO_PROCESS_LETTER) :
                new ObjectParameter("AUTO_PROCESS_LETTER", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LetterConfig_Insert", fORMLETTER_NAMEParameter, fORMLETTER_DESCRIPTIONParameter, pRINT_ON_DAYDUEParameter, uSE_MERGE_FILEParameter, lOAN_TYPEParameter, dELETEDParameter, eNTITY_NAMEParameter, cSV_FILE_NAMEParameter, aUDIT_CODESParameter, nEW_AUDIT_CODEParameter, aFTER_SEQUENCEParameter, aFTER_CREDIT_REPORTParameter, aUTO_PROCESS_LETTERParameter);
        }
    
        public virtual ObjectResult<usp_Loan_History_Info_Result> usp_Loan_History_Info(Nullable<int> lOAN_KEY, Nullable<bool> lOANS, Nullable<bool> pAYMENTS, Nullable<bool> rI, Nullable<bool> dEPOSITS, Nullable<bool> dUEDATE, Nullable<bool> cOLLECTIONS, Nullable<bool> sCHED_REFINANCE, Nullable<bool> iNTEREST, Nullable<bool> aCH, string lOAN_TYPE, string pRODUCT_TYPE, Nullable<bool> sTATEMENTS, Nullable<bool> cASHADVANCE)
        {
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var lOANSParameter = lOANS.HasValue ?
                new ObjectParameter("LOANS", lOANS) :
                new ObjectParameter("LOANS", typeof(bool));
    
            var pAYMENTSParameter = pAYMENTS.HasValue ?
                new ObjectParameter("PAYMENTS", pAYMENTS) :
                new ObjectParameter("PAYMENTS", typeof(bool));
    
            var rIParameter = rI.HasValue ?
                new ObjectParameter("RI", rI) :
                new ObjectParameter("RI", typeof(bool));
    
            var dEPOSITSParameter = dEPOSITS.HasValue ?
                new ObjectParameter("DEPOSITS", dEPOSITS) :
                new ObjectParameter("DEPOSITS", typeof(bool));
    
            var dUEDATEParameter = dUEDATE.HasValue ?
                new ObjectParameter("DUEDATE", dUEDATE) :
                new ObjectParameter("DUEDATE", typeof(bool));
    
            var cOLLECTIONSParameter = cOLLECTIONS.HasValue ?
                new ObjectParameter("COLLECTIONS", cOLLECTIONS) :
                new ObjectParameter("COLLECTIONS", typeof(bool));
    
            var sCHED_REFINANCEParameter = sCHED_REFINANCE.HasValue ?
                new ObjectParameter("SCHED_REFINANCE", sCHED_REFINANCE) :
                new ObjectParameter("SCHED_REFINANCE", typeof(bool));
    
            var iNTERESTParameter = iNTEREST.HasValue ?
                new ObjectParameter("INTEREST", iNTEREST) :
                new ObjectParameter("INTEREST", typeof(bool));
    
            var aCHParameter = aCH.HasValue ?
                new ObjectParameter("ACH", aCH) :
                new ObjectParameter("ACH", typeof(bool));
    
            var lOAN_TYPEParameter = lOAN_TYPE != null ?
                new ObjectParameter("LOAN_TYPE", lOAN_TYPE) :
                new ObjectParameter("LOAN_TYPE", typeof(string));
    
            var pRODUCT_TYPEParameter = pRODUCT_TYPE != null ?
                new ObjectParameter("PRODUCT_TYPE", pRODUCT_TYPE) :
                new ObjectParameter("PRODUCT_TYPE", typeof(string));
    
            var sTATEMENTSParameter = sTATEMENTS.HasValue ?
                new ObjectParameter("STATEMENTS", sTATEMENTS) :
                new ObjectParameter("STATEMENTS", typeof(bool));
    
            var cASHADVANCEParameter = cASHADVANCE.HasValue ?
                new ObjectParameter("CASHADVANCE", cASHADVANCE) :
                new ObjectParameter("CASHADVANCE", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Loan_History_Info_Result>("usp_Loan_History_Info", lOAN_KEYParameter, lOANSParameter, pAYMENTSParameter, rIParameter, dEPOSITSParameter, dUEDATEParameter, cOLLECTIONSParameter, sCHED_REFINANCEParameter, iNTERESTParameter, aCHParameter, lOAN_TYPEParameter, pRODUCT_TYPEParameter, sTATEMENTSParameter, cASHADVANCEParameter);
        }
    
        public virtual int usp_Loan_Insert(Nullable<int> iSSUER_KEY, Nullable<int> cUSTOMER_KEY, Nullable<short> lOCATION, string tELLER, Nullable<bool> cOURTESY_CALL, string cHECK_NO, Nullable<bool> dIRECT_DEPOSIT, string pRODUCT_TYPE, string lOAN_TYPE, string oRIG_CODE, Nullable<int> oRIG_LOAN_KEY, Nullable<int> pAID_LOAN_KEY, Nullable<int> pAYMENT_PLAN_KEY, Nullable<short> rOLLOVER_NUM, string lOAN_STATUS, Nullable<decimal> pRINC_AMT, Nullable<decimal> cASH_AMT, Nullable<decimal> lOAN_AMT, Nullable<decimal> rATE_PCT, Nullable<decimal> dISC_AMT, Nullable<decimal> rEBATE_AMT, Nullable<decimal> gRACE_AMT, Nullable<decimal> fEE_AMT, Nullable<decimal> tRANS_FEE_AMT, Nullable<bool> cHARGE_TRANS_FEE, Nullable<decimal> lIEN_FEE_AMT, Nullable<bool> cHARGE_LIEN_FEE, Nullable<System.DateTime> oRIG_DUE_DATE, Nullable<System.DateTime> aDJUSTED_DUE_DATE, Nullable<int> tRANS_DETAIL_KEY, Nullable<decimal> lOAN_BALANCE, Nullable<bool> jOINT_LOAN, string pRINT_LANGUAGE, Nullable<System.DateTime> cALC_DUE_DATE, Nullable<decimal> iNTEREST_AMT, Nullable<byte> dEPOSIT_ORDER, Nullable<byte> dEPOSIT_STATUS, Nullable<int> cREDIT_CARD_KEY, Nullable<byte> fUNDING_METHOD, Nullable<System.DateTime> dATE_ENTERED, Nullable<System.DateTime> lOAN_DATE, Nullable<decimal> oRIG_APR, Nullable<int> lOAN_PRODUCT_KEY, Nullable<int> lOAN_PRODUCT_CONFIG_KEY, Nullable<int> lOAN_PRODUCT_TILA_KEY, Nullable<bool> iS_GAIL_LOAN, Nullable<bool> eXCLUDE_FROM_CAP, Nullable<bool> eXCLUDE_FROM_CAP_ACH, Nullable<int> dRAWERZ_KEY, Nullable<decimal> totFeeAmt, Nullable<bool> iS_ESIGN, Nullable<decimal> fASTER_PAYMENTS_FEE, Nullable<byte> eSIGN_DOC_METHOD, Nullable<decimal> sTANDARD_RATE_PCT, Nullable<byte> lOAN_RATE_SOURCE, Nullable<short> cREDITED_LOCATION, Nullable<decimal> tILA_APR, Nullable<decimal> tILA_FINANCE_CHARGE, Nullable<decimal> tILA_AMOUNT_FINANCED, Nullable<decimal> tILA_TOTAL_PAYMENTS, Nullable<decimal> iNSURANCE_FEE_AMT)
        {
            var iSSUER_KEYParameter = iSSUER_KEY.HasValue ?
                new ObjectParameter("ISSUER_KEY", iSSUER_KEY) :
                new ObjectParameter("ISSUER_KEY", typeof(int));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var cOURTESY_CALLParameter = cOURTESY_CALL.HasValue ?
                new ObjectParameter("COURTESY_CALL", cOURTESY_CALL) :
                new ObjectParameter("COURTESY_CALL", typeof(bool));
    
            var cHECK_NOParameter = cHECK_NO != null ?
                new ObjectParameter("CHECK_NO", cHECK_NO) :
                new ObjectParameter("CHECK_NO", typeof(string));
    
            var dIRECT_DEPOSITParameter = dIRECT_DEPOSIT.HasValue ?
                new ObjectParameter("DIRECT_DEPOSIT", dIRECT_DEPOSIT) :
                new ObjectParameter("DIRECT_DEPOSIT", typeof(bool));
    
            var pRODUCT_TYPEParameter = pRODUCT_TYPE != null ?
                new ObjectParameter("PRODUCT_TYPE", pRODUCT_TYPE) :
                new ObjectParameter("PRODUCT_TYPE", typeof(string));
    
            var lOAN_TYPEParameter = lOAN_TYPE != null ?
                new ObjectParameter("LOAN_TYPE", lOAN_TYPE) :
                new ObjectParameter("LOAN_TYPE", typeof(string));
    
            var oRIG_CODEParameter = oRIG_CODE != null ?
                new ObjectParameter("ORIG_CODE", oRIG_CODE) :
                new ObjectParameter("ORIG_CODE", typeof(string));
    
            var oRIG_LOAN_KEYParameter = oRIG_LOAN_KEY.HasValue ?
                new ObjectParameter("ORIG_LOAN_KEY", oRIG_LOAN_KEY) :
                new ObjectParameter("ORIG_LOAN_KEY", typeof(int));
    
            var pAID_LOAN_KEYParameter = pAID_LOAN_KEY.HasValue ?
                new ObjectParameter("PAID_LOAN_KEY", pAID_LOAN_KEY) :
                new ObjectParameter("PAID_LOAN_KEY", typeof(int));
    
            var pAYMENT_PLAN_KEYParameter = pAYMENT_PLAN_KEY.HasValue ?
                new ObjectParameter("PAYMENT_PLAN_KEY", pAYMENT_PLAN_KEY) :
                new ObjectParameter("PAYMENT_PLAN_KEY", typeof(int));
    
            var rOLLOVER_NUMParameter = rOLLOVER_NUM.HasValue ?
                new ObjectParameter("ROLLOVER_NUM", rOLLOVER_NUM) :
                new ObjectParameter("ROLLOVER_NUM", typeof(short));
    
            var lOAN_STATUSParameter = lOAN_STATUS != null ?
                new ObjectParameter("LOAN_STATUS", lOAN_STATUS) :
                new ObjectParameter("LOAN_STATUS", typeof(string));
    
            var pRINC_AMTParameter = pRINC_AMT.HasValue ?
                new ObjectParameter("PRINC_AMT", pRINC_AMT) :
                new ObjectParameter("PRINC_AMT", typeof(decimal));
    
            var cASH_AMTParameter = cASH_AMT.HasValue ?
                new ObjectParameter("CASH_AMT", cASH_AMT) :
                new ObjectParameter("CASH_AMT", typeof(decimal));
    
            var lOAN_AMTParameter = lOAN_AMT.HasValue ?
                new ObjectParameter("LOAN_AMT", lOAN_AMT) :
                new ObjectParameter("LOAN_AMT", typeof(decimal));
    
            var rATE_PCTParameter = rATE_PCT.HasValue ?
                new ObjectParameter("RATE_PCT", rATE_PCT) :
                new ObjectParameter("RATE_PCT", typeof(decimal));
    
            var dISC_AMTParameter = dISC_AMT.HasValue ?
                new ObjectParameter("DISC_AMT", dISC_AMT) :
                new ObjectParameter("DISC_AMT", typeof(decimal));
    
            var rEBATE_AMTParameter = rEBATE_AMT.HasValue ?
                new ObjectParameter("REBATE_AMT", rEBATE_AMT) :
                new ObjectParameter("REBATE_AMT", typeof(decimal));
    
            var gRACE_AMTParameter = gRACE_AMT.HasValue ?
                new ObjectParameter("GRACE_AMT", gRACE_AMT) :
                new ObjectParameter("GRACE_AMT", typeof(decimal));
    
            var fEE_AMTParameter = fEE_AMT.HasValue ?
                new ObjectParameter("FEE_AMT", fEE_AMT) :
                new ObjectParameter("FEE_AMT", typeof(decimal));
    
            var tRANS_FEE_AMTParameter = tRANS_FEE_AMT.HasValue ?
                new ObjectParameter("TRANS_FEE_AMT", tRANS_FEE_AMT) :
                new ObjectParameter("TRANS_FEE_AMT", typeof(decimal));
    
            var cHARGE_TRANS_FEEParameter = cHARGE_TRANS_FEE.HasValue ?
                new ObjectParameter("CHARGE_TRANS_FEE", cHARGE_TRANS_FEE) :
                new ObjectParameter("CHARGE_TRANS_FEE", typeof(bool));
    
            var lIEN_FEE_AMTParameter = lIEN_FEE_AMT.HasValue ?
                new ObjectParameter("LIEN_FEE_AMT", lIEN_FEE_AMT) :
                new ObjectParameter("LIEN_FEE_AMT", typeof(decimal));
    
            var cHARGE_LIEN_FEEParameter = cHARGE_LIEN_FEE.HasValue ?
                new ObjectParameter("CHARGE_LIEN_FEE", cHARGE_LIEN_FEE) :
                new ObjectParameter("CHARGE_LIEN_FEE", typeof(bool));
    
            var oRIG_DUE_DATEParameter = oRIG_DUE_DATE.HasValue ?
                new ObjectParameter("ORIG_DUE_DATE", oRIG_DUE_DATE) :
                new ObjectParameter("ORIG_DUE_DATE", typeof(System.DateTime));
    
            var aDJUSTED_DUE_DATEParameter = aDJUSTED_DUE_DATE.HasValue ?
                new ObjectParameter("ADJUSTED_DUE_DATE", aDJUSTED_DUE_DATE) :
                new ObjectParameter("ADJUSTED_DUE_DATE", typeof(System.DateTime));
    
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            var lOAN_BALANCEParameter = lOAN_BALANCE.HasValue ?
                new ObjectParameter("LOAN_BALANCE", lOAN_BALANCE) :
                new ObjectParameter("LOAN_BALANCE", typeof(decimal));
    
            var jOINT_LOANParameter = jOINT_LOAN.HasValue ?
                new ObjectParameter("JOINT_LOAN", jOINT_LOAN) :
                new ObjectParameter("JOINT_LOAN", typeof(bool));
    
            var pRINT_LANGUAGEParameter = pRINT_LANGUAGE != null ?
                new ObjectParameter("PRINT_LANGUAGE", pRINT_LANGUAGE) :
                new ObjectParameter("PRINT_LANGUAGE", typeof(string));
    
            var cALC_DUE_DATEParameter = cALC_DUE_DATE.HasValue ?
                new ObjectParameter("CALC_DUE_DATE", cALC_DUE_DATE) :
                new ObjectParameter("CALC_DUE_DATE", typeof(System.DateTime));
    
            var iNTEREST_AMTParameter = iNTEREST_AMT.HasValue ?
                new ObjectParameter("INTEREST_AMT", iNTEREST_AMT) :
                new ObjectParameter("INTEREST_AMT", typeof(decimal));
    
            var dEPOSIT_ORDERParameter = dEPOSIT_ORDER.HasValue ?
                new ObjectParameter("DEPOSIT_ORDER", dEPOSIT_ORDER) :
                new ObjectParameter("DEPOSIT_ORDER", typeof(byte));
    
            var dEPOSIT_STATUSParameter = dEPOSIT_STATUS.HasValue ?
                new ObjectParameter("DEPOSIT_STATUS", dEPOSIT_STATUS) :
                new ObjectParameter("DEPOSIT_STATUS", typeof(byte));
    
            var cREDIT_CARD_KEYParameter = cREDIT_CARD_KEY.HasValue ?
                new ObjectParameter("CREDIT_CARD_KEY", cREDIT_CARD_KEY) :
                new ObjectParameter("CREDIT_CARD_KEY", typeof(int));
    
            var fUNDING_METHODParameter = fUNDING_METHOD.HasValue ?
                new ObjectParameter("FUNDING_METHOD", fUNDING_METHOD) :
                new ObjectParameter("FUNDING_METHOD", typeof(byte));
    
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            var lOAN_DATEParameter = lOAN_DATE.HasValue ?
                new ObjectParameter("LOAN_DATE", lOAN_DATE) :
                new ObjectParameter("LOAN_DATE", typeof(System.DateTime));
    
            var oRIG_APRParameter = oRIG_APR.HasValue ?
                new ObjectParameter("ORIG_APR", oRIG_APR) :
                new ObjectParameter("ORIG_APR", typeof(decimal));
    
            var lOAN_PRODUCT_KEYParameter = lOAN_PRODUCT_KEY.HasValue ?
                new ObjectParameter("LOAN_PRODUCT_KEY", lOAN_PRODUCT_KEY) :
                new ObjectParameter("LOAN_PRODUCT_KEY", typeof(int));
    
            var lOAN_PRODUCT_CONFIG_KEYParameter = lOAN_PRODUCT_CONFIG_KEY.HasValue ?
                new ObjectParameter("LOAN_PRODUCT_CONFIG_KEY", lOAN_PRODUCT_CONFIG_KEY) :
                new ObjectParameter("LOAN_PRODUCT_CONFIG_KEY", typeof(int));
    
            var lOAN_PRODUCT_TILA_KEYParameter = lOAN_PRODUCT_TILA_KEY.HasValue ?
                new ObjectParameter("LOAN_PRODUCT_TILA_KEY", lOAN_PRODUCT_TILA_KEY) :
                new ObjectParameter("LOAN_PRODUCT_TILA_KEY", typeof(int));
    
            var iS_GAIL_LOANParameter = iS_GAIL_LOAN.HasValue ?
                new ObjectParameter("IS_GAIL_LOAN", iS_GAIL_LOAN) :
                new ObjectParameter("IS_GAIL_LOAN", typeof(bool));
    
            var eXCLUDE_FROM_CAPParameter = eXCLUDE_FROM_CAP.HasValue ?
                new ObjectParameter("EXCLUDE_FROM_CAP", eXCLUDE_FROM_CAP) :
                new ObjectParameter("EXCLUDE_FROM_CAP", typeof(bool));
    
            var eXCLUDE_FROM_CAP_ACHParameter = eXCLUDE_FROM_CAP_ACH.HasValue ?
                new ObjectParameter("EXCLUDE_FROM_CAP_ACH", eXCLUDE_FROM_CAP_ACH) :
                new ObjectParameter("EXCLUDE_FROM_CAP_ACH", typeof(bool));
    
            var dRAWERZ_KEYParameter = dRAWERZ_KEY.HasValue ?
                new ObjectParameter("DRAWERZ_KEY", dRAWERZ_KEY) :
                new ObjectParameter("DRAWERZ_KEY", typeof(int));
    
            var totFeeAmtParameter = totFeeAmt.HasValue ?
                new ObjectParameter("TotFeeAmt", totFeeAmt) :
                new ObjectParameter("TotFeeAmt", typeof(decimal));
    
            var iS_ESIGNParameter = iS_ESIGN.HasValue ?
                new ObjectParameter("IS_ESIGN", iS_ESIGN) :
                new ObjectParameter("IS_ESIGN", typeof(bool));
    
            var fASTER_PAYMENTS_FEEParameter = fASTER_PAYMENTS_FEE.HasValue ?
                new ObjectParameter("FASTER_PAYMENTS_FEE", fASTER_PAYMENTS_FEE) :
                new ObjectParameter("FASTER_PAYMENTS_FEE", typeof(decimal));
    
            var eSIGN_DOC_METHODParameter = eSIGN_DOC_METHOD.HasValue ?
                new ObjectParameter("ESIGN_DOC_METHOD", eSIGN_DOC_METHOD) :
                new ObjectParameter("ESIGN_DOC_METHOD", typeof(byte));
    
            var sTANDARD_RATE_PCTParameter = sTANDARD_RATE_PCT.HasValue ?
                new ObjectParameter("STANDARD_RATE_PCT", sTANDARD_RATE_PCT) :
                new ObjectParameter("STANDARD_RATE_PCT", typeof(decimal));
    
            var lOAN_RATE_SOURCEParameter = lOAN_RATE_SOURCE.HasValue ?
                new ObjectParameter("LOAN_RATE_SOURCE", lOAN_RATE_SOURCE) :
                new ObjectParameter("LOAN_RATE_SOURCE", typeof(byte));
    
            var cREDITED_LOCATIONParameter = cREDITED_LOCATION.HasValue ?
                new ObjectParameter("CREDITED_LOCATION", cREDITED_LOCATION) :
                new ObjectParameter("CREDITED_LOCATION", typeof(short));
    
            var tILA_APRParameter = tILA_APR.HasValue ?
                new ObjectParameter("TILA_APR", tILA_APR) :
                new ObjectParameter("TILA_APR", typeof(decimal));
    
            var tILA_FINANCE_CHARGEParameter = tILA_FINANCE_CHARGE.HasValue ?
                new ObjectParameter("TILA_FINANCE_CHARGE", tILA_FINANCE_CHARGE) :
                new ObjectParameter("TILA_FINANCE_CHARGE", typeof(decimal));
    
            var tILA_AMOUNT_FINANCEDParameter = tILA_AMOUNT_FINANCED.HasValue ?
                new ObjectParameter("TILA_AMOUNT_FINANCED", tILA_AMOUNT_FINANCED) :
                new ObjectParameter("TILA_AMOUNT_FINANCED", typeof(decimal));
    
            var tILA_TOTAL_PAYMENTSParameter = tILA_TOTAL_PAYMENTS.HasValue ?
                new ObjectParameter("TILA_TOTAL_PAYMENTS", tILA_TOTAL_PAYMENTS) :
                new ObjectParameter("TILA_TOTAL_PAYMENTS", typeof(decimal));
    
            var iNSURANCE_FEE_AMTParameter = iNSURANCE_FEE_AMT.HasValue ?
                new ObjectParameter("INSURANCE_FEE_AMT", iNSURANCE_FEE_AMT) :
                new ObjectParameter("INSURANCE_FEE_AMT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Loan_Insert", iSSUER_KEYParameter, cUSTOMER_KEYParameter, lOCATIONParameter, tELLERParameter, cOURTESY_CALLParameter, cHECK_NOParameter, dIRECT_DEPOSITParameter, pRODUCT_TYPEParameter, lOAN_TYPEParameter, oRIG_CODEParameter, oRIG_LOAN_KEYParameter, pAID_LOAN_KEYParameter, pAYMENT_PLAN_KEYParameter, rOLLOVER_NUMParameter, lOAN_STATUSParameter, pRINC_AMTParameter, cASH_AMTParameter, lOAN_AMTParameter, rATE_PCTParameter, dISC_AMTParameter, rEBATE_AMTParameter, gRACE_AMTParameter, fEE_AMTParameter, tRANS_FEE_AMTParameter, cHARGE_TRANS_FEEParameter, lIEN_FEE_AMTParameter, cHARGE_LIEN_FEEParameter, oRIG_DUE_DATEParameter, aDJUSTED_DUE_DATEParameter, tRANS_DETAIL_KEYParameter, lOAN_BALANCEParameter, jOINT_LOANParameter, pRINT_LANGUAGEParameter, cALC_DUE_DATEParameter, iNTEREST_AMTParameter, dEPOSIT_ORDERParameter, dEPOSIT_STATUSParameter, cREDIT_CARD_KEYParameter, fUNDING_METHODParameter, dATE_ENTEREDParameter, lOAN_DATEParameter, oRIG_APRParameter, lOAN_PRODUCT_KEYParameter, lOAN_PRODUCT_CONFIG_KEYParameter, lOAN_PRODUCT_TILA_KEYParameter, iS_GAIL_LOANParameter, eXCLUDE_FROM_CAPParameter, eXCLUDE_FROM_CAP_ACHParameter, dRAWERZ_KEYParameter, totFeeAmtParameter, iS_ESIGNParameter, fASTER_PAYMENTS_FEEParameter, eSIGN_DOC_METHODParameter, sTANDARD_RATE_PCTParameter, lOAN_RATE_SOURCEParameter, cREDITED_LOCATIONParameter, tILA_APRParameter, tILA_FINANCE_CHARGEParameter, tILA_AMOUNT_FINANCEDParameter, tILA_TOTAL_PAYMENTSParameter, iNSURANCE_FEE_AMTParameter);
        }
    
        public virtual int usp_Loan_Update_LOAN_STATUS(string lOAN_STATUS, Nullable<int> lOAN_KEY)
        {
            var lOAN_STATUSParameter = lOAN_STATUS != null ?
                new ObjectParameter("LOAN_STATUS", lOAN_STATUS) :
                new ObjectParameter("LOAN_STATUS", typeof(string));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Loan_Update_LOAN_STATUS", lOAN_STATUSParameter, lOAN_KEYParameter);
        }
    
        public virtual int usp_LoanApplication_Update_LOAN_KEY(Nullable<int> lOAN_KEY, Nullable<int> lOAN_APPLICATION_KEY)
        {
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var lOAN_APPLICATION_KEYParameter = lOAN_APPLICATION_KEY.HasValue ?
                new ObjectParameter("LOAN_APPLICATION_KEY", lOAN_APPLICATION_KEY) :
                new ObjectParameter("LOAN_APPLICATION_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LoanApplication_Update_LOAN_KEY", lOAN_KEYParameter, lOAN_APPLICATION_KEYParameter);
        }
    
        public virtual int usp_LoanApplication_Update_REASON_DENIED(string rEASON_DENIED, Nullable<int> lOAN_APPLICATION_KEY)
        {
            var rEASON_DENIEDParameter = rEASON_DENIED != null ?
                new ObjectParameter("REASON_DENIED", rEASON_DENIED) :
                new ObjectParameter("REASON_DENIED", typeof(string));
    
            var lOAN_APPLICATION_KEYParameter = lOAN_APPLICATION_KEY.HasValue ?
                new ObjectParameter("LOAN_APPLICATION_KEY", lOAN_APPLICATION_KEY) :
                new ObjectParameter("LOAN_APPLICATION_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LoanApplication_Update_REASON_DENIED", rEASON_DENIEDParameter, lOAN_APPLICATION_KEYParameter);
        }
    
        public virtual int usp_LoanDocPrinted_Insert(Nullable<int> lOAN_KEY, Nullable<int> lOAN_DOC_KEY, Nullable<int> cUSTOMER_KEY, Nullable<short> lOCATION, string tELLER, Nullable<int> tRANS_DETAIL_KEY)
        {
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var lOAN_DOC_KEYParameter = lOAN_DOC_KEY.HasValue ?
                new ObjectParameter("LOAN_DOC_KEY", lOAN_DOC_KEY) :
                new ObjectParameter("LOAN_DOC_KEY", typeof(int));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LoanDocPrinted_Insert", lOAN_KEYParameter, lOAN_DOC_KEYParameter, cUSTOMER_KEYParameter, lOCATIONParameter, tELLERParameter, tRANS_DETAIL_KEYParameter);
        }
    
        public virtual ObjectResult<usp_LoanHistoryGL_Read_Result> usp_LoanHistoryGL_Read(Nullable<int> loanKey, Nullable<bool> withBags)
        {
            var loanKeyParameter = loanKey.HasValue ?
                new ObjectParameter("LoanKey", loanKey) :
                new ObjectParameter("LoanKey", typeof(int));
    
            var withBagsParameter = withBags.HasValue ?
                new ObjectParameter("WithBags", withBags) :
                new ObjectParameter("WithBags", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoanHistoryGL_Read_Result>("usp_LoanHistoryGL_Read", loanKeyParameter, withBagsParameter);
        }
    
        public virtual ObjectResult<usp_LoanInterestCollected_Result> usp_LoanInterestCollected(Nullable<int> loanKey, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var loanKeyParameter = loanKey.HasValue ?
                new ObjectParameter("LoanKey", loanKey) :
                new ObjectParameter("LoanKey", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoanInterestCollected_Result>("usp_LoanInterestCollected", loanKeyParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int usp_LoanPayment_Insert(string tELLER, Nullable<short> lOCATION, Nullable<int> pAID_LOAN_KEY, string nOTE, Nullable<decimal> pAID_AMT, Nullable<short> pAYMENT_METHOD, Nullable<byte> tRANS_CODE, string pRODUCT_TYPE, string lOAN_TYPE, Nullable<int> tRANS_DETAIL_KEY)
        {
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var pAID_LOAN_KEYParameter = pAID_LOAN_KEY.HasValue ?
                new ObjectParameter("PAID_LOAN_KEY", pAID_LOAN_KEY) :
                new ObjectParameter("PAID_LOAN_KEY", typeof(int));
    
            var nOTEParameter = nOTE != null ?
                new ObjectParameter("NOTE", nOTE) :
                new ObjectParameter("NOTE", typeof(string));
    
            var pAID_AMTParameter = pAID_AMT.HasValue ?
                new ObjectParameter("PAID_AMT", pAID_AMT) :
                new ObjectParameter("PAID_AMT", typeof(decimal));
    
            var pAYMENT_METHODParameter = pAYMENT_METHOD.HasValue ?
                new ObjectParameter("PAYMENT_METHOD", pAYMENT_METHOD) :
                new ObjectParameter("PAYMENT_METHOD", typeof(short));
    
            var tRANS_CODEParameter = tRANS_CODE.HasValue ?
                new ObjectParameter("TRANS_CODE", tRANS_CODE) :
                new ObjectParameter("TRANS_CODE", typeof(byte));
    
            var pRODUCT_TYPEParameter = pRODUCT_TYPE != null ?
                new ObjectParameter("PRODUCT_TYPE", pRODUCT_TYPE) :
                new ObjectParameter("PRODUCT_TYPE", typeof(string));
    
            var lOAN_TYPEParameter = lOAN_TYPE != null ?
                new ObjectParameter("LOAN_TYPE", lOAN_TYPE) :
                new ObjectParameter("LOAN_TYPE", typeof(string));
    
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LoanPayment_Insert", tELLERParameter, lOCATIONParameter, pAID_LOAN_KEYParameter, nOTEParameter, pAID_AMTParameter, pAYMENT_METHODParameter, tRANS_CODEParameter, pRODUCT_TYPEParameter, lOAN_TYPEParameter, tRANS_DETAIL_KEYParameter);
        }
    
        public virtual int usp_LoanQualification_Insert(Nullable<int> lOAN_KEY, Nullable<int> cUSTOMER_KEY, Nullable<short> lOCATION, string tELLER, Nullable<decimal> aPPROVED_AMT, Nullable<bool> bANK_ACCT_OPEN, Nullable<bool> bANK_VERIFY_ACCT_OPEN, Nullable<bool> bANK_NOT_VERIFY, Nullable<bool> bANK_CLOSED, Nullable<bool> bANK_STATEMENT, Nullable<bool> bANK_DIRECT_DEPOSIT, Nullable<bool> iNCOME_STATEMENT, Nullable<bool> iNCOME_PAY_STUB, Nullable<bool> iNCOME_DEPOSITS, Nullable<bool> eMPLOYMENT_CALL_EMPLOYER, Nullable<bool> eMPLOYMENT_VERIFY_CALL_EMPLOYER, Nullable<bool> eMPLOYER_NOT_VERIFY, Nullable<bool> eMPLOYER_CLOSED, Nullable<bool> eMPLOYMENT_PROOF, Nullable<bool> eMPLOYMENT_APPLICATION, Nullable<bool> hOME_PHONE_WORKING, Nullable<bool> cELL_PHONE_WORKING, Nullable<bool> wORK_PHONE_WORKING, string mOD_OVERRIDE, string oVERRIDE_NOTE, string mOD_AMT_OVERRIDE, Nullable<decimal> nEW_OVERRIDE_AMT, string mONTHLY_INCOME_USED, Nullable<byte> pCT_OF_INCOME, Nullable<decimal> iNCOME_AMT, Nullable<decimal> vALID_CREDIT_CARD_AMT, Nullable<decimal> dIRECT_DEPOSIT_AMT, Nullable<decimal> sUCCESSFUL_LOAN_AMT, Nullable<decimal> sTATE_REQ_ADJUSTMENT_AMT, string tYPE_OF_INCOME)
        {
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var aPPROVED_AMTParameter = aPPROVED_AMT.HasValue ?
                new ObjectParameter("APPROVED_AMT", aPPROVED_AMT) :
                new ObjectParameter("APPROVED_AMT", typeof(decimal));
    
            var bANK_ACCT_OPENParameter = bANK_ACCT_OPEN.HasValue ?
                new ObjectParameter("BANK_ACCT_OPEN", bANK_ACCT_OPEN) :
                new ObjectParameter("BANK_ACCT_OPEN", typeof(bool));
    
            var bANK_VERIFY_ACCT_OPENParameter = bANK_VERIFY_ACCT_OPEN.HasValue ?
                new ObjectParameter("BANK_VERIFY_ACCT_OPEN", bANK_VERIFY_ACCT_OPEN) :
                new ObjectParameter("BANK_VERIFY_ACCT_OPEN", typeof(bool));
    
            var bANK_NOT_VERIFYParameter = bANK_NOT_VERIFY.HasValue ?
                new ObjectParameter("BANK_NOT_VERIFY", bANK_NOT_VERIFY) :
                new ObjectParameter("BANK_NOT_VERIFY", typeof(bool));
    
            var bANK_CLOSEDParameter = bANK_CLOSED.HasValue ?
                new ObjectParameter("BANK_CLOSED", bANK_CLOSED) :
                new ObjectParameter("BANK_CLOSED", typeof(bool));
    
            var bANK_STATEMENTParameter = bANK_STATEMENT.HasValue ?
                new ObjectParameter("BANK_STATEMENT", bANK_STATEMENT) :
                new ObjectParameter("BANK_STATEMENT", typeof(bool));
    
            var bANK_DIRECT_DEPOSITParameter = bANK_DIRECT_DEPOSIT.HasValue ?
                new ObjectParameter("BANK_DIRECT_DEPOSIT", bANK_DIRECT_DEPOSIT) :
                new ObjectParameter("BANK_DIRECT_DEPOSIT", typeof(bool));
    
            var iNCOME_STATEMENTParameter = iNCOME_STATEMENT.HasValue ?
                new ObjectParameter("INCOME_STATEMENT", iNCOME_STATEMENT) :
                new ObjectParameter("INCOME_STATEMENT", typeof(bool));
    
            var iNCOME_PAY_STUBParameter = iNCOME_PAY_STUB.HasValue ?
                new ObjectParameter("INCOME_PAY_STUB", iNCOME_PAY_STUB) :
                new ObjectParameter("INCOME_PAY_STUB", typeof(bool));
    
            var iNCOME_DEPOSITSParameter = iNCOME_DEPOSITS.HasValue ?
                new ObjectParameter("INCOME_DEPOSITS", iNCOME_DEPOSITS) :
                new ObjectParameter("INCOME_DEPOSITS", typeof(bool));
    
            var eMPLOYMENT_CALL_EMPLOYERParameter = eMPLOYMENT_CALL_EMPLOYER.HasValue ?
                new ObjectParameter("EMPLOYMENT_CALL_EMPLOYER", eMPLOYMENT_CALL_EMPLOYER) :
                new ObjectParameter("EMPLOYMENT_CALL_EMPLOYER", typeof(bool));
    
            var eMPLOYMENT_VERIFY_CALL_EMPLOYERParameter = eMPLOYMENT_VERIFY_CALL_EMPLOYER.HasValue ?
                new ObjectParameter("EMPLOYMENT_VERIFY_CALL_EMPLOYER", eMPLOYMENT_VERIFY_CALL_EMPLOYER) :
                new ObjectParameter("EMPLOYMENT_VERIFY_CALL_EMPLOYER", typeof(bool));
    
            var eMPLOYER_NOT_VERIFYParameter = eMPLOYER_NOT_VERIFY.HasValue ?
                new ObjectParameter("EMPLOYER_NOT_VERIFY", eMPLOYER_NOT_VERIFY) :
                new ObjectParameter("EMPLOYER_NOT_VERIFY", typeof(bool));
    
            var eMPLOYER_CLOSEDParameter = eMPLOYER_CLOSED.HasValue ?
                new ObjectParameter("EMPLOYER_CLOSED", eMPLOYER_CLOSED) :
                new ObjectParameter("EMPLOYER_CLOSED", typeof(bool));
    
            var eMPLOYMENT_PROOFParameter = eMPLOYMENT_PROOF.HasValue ?
                new ObjectParameter("EMPLOYMENT_PROOF", eMPLOYMENT_PROOF) :
                new ObjectParameter("EMPLOYMENT_PROOF", typeof(bool));
    
            var eMPLOYMENT_APPLICATIONParameter = eMPLOYMENT_APPLICATION.HasValue ?
                new ObjectParameter("EMPLOYMENT_APPLICATION", eMPLOYMENT_APPLICATION) :
                new ObjectParameter("EMPLOYMENT_APPLICATION", typeof(bool));
    
            var hOME_PHONE_WORKINGParameter = hOME_PHONE_WORKING.HasValue ?
                new ObjectParameter("HOME_PHONE_WORKING", hOME_PHONE_WORKING) :
                new ObjectParameter("HOME_PHONE_WORKING", typeof(bool));
    
            var cELL_PHONE_WORKINGParameter = cELL_PHONE_WORKING.HasValue ?
                new ObjectParameter("CELL_PHONE_WORKING", cELL_PHONE_WORKING) :
                new ObjectParameter("CELL_PHONE_WORKING", typeof(bool));
    
            var wORK_PHONE_WORKINGParameter = wORK_PHONE_WORKING.HasValue ?
                new ObjectParameter("WORK_PHONE_WORKING", wORK_PHONE_WORKING) :
                new ObjectParameter("WORK_PHONE_WORKING", typeof(bool));
    
            var mOD_OVERRIDEParameter = mOD_OVERRIDE != null ?
                new ObjectParameter("MOD_OVERRIDE", mOD_OVERRIDE) :
                new ObjectParameter("MOD_OVERRIDE", typeof(string));
    
            var oVERRIDE_NOTEParameter = oVERRIDE_NOTE != null ?
                new ObjectParameter("OVERRIDE_NOTE", oVERRIDE_NOTE) :
                new ObjectParameter("OVERRIDE_NOTE", typeof(string));
    
            var mOD_AMT_OVERRIDEParameter = mOD_AMT_OVERRIDE != null ?
                new ObjectParameter("MOD_AMT_OVERRIDE", mOD_AMT_OVERRIDE) :
                new ObjectParameter("MOD_AMT_OVERRIDE", typeof(string));
    
            var nEW_OVERRIDE_AMTParameter = nEW_OVERRIDE_AMT.HasValue ?
                new ObjectParameter("NEW_OVERRIDE_AMT", nEW_OVERRIDE_AMT) :
                new ObjectParameter("NEW_OVERRIDE_AMT", typeof(decimal));
    
            var mONTHLY_INCOME_USEDParameter = mONTHLY_INCOME_USED != null ?
                new ObjectParameter("MONTHLY_INCOME_USED", mONTHLY_INCOME_USED) :
                new ObjectParameter("MONTHLY_INCOME_USED", typeof(string));
    
            var pCT_OF_INCOMEParameter = pCT_OF_INCOME.HasValue ?
                new ObjectParameter("PCT_OF_INCOME", pCT_OF_INCOME) :
                new ObjectParameter("PCT_OF_INCOME", typeof(byte));
    
            var iNCOME_AMTParameter = iNCOME_AMT.HasValue ?
                new ObjectParameter("INCOME_AMT", iNCOME_AMT) :
                new ObjectParameter("INCOME_AMT", typeof(decimal));
    
            var vALID_CREDIT_CARD_AMTParameter = vALID_CREDIT_CARD_AMT.HasValue ?
                new ObjectParameter("VALID_CREDIT_CARD_AMT", vALID_CREDIT_CARD_AMT) :
                new ObjectParameter("VALID_CREDIT_CARD_AMT", typeof(decimal));
    
            var dIRECT_DEPOSIT_AMTParameter = dIRECT_DEPOSIT_AMT.HasValue ?
                new ObjectParameter("DIRECT_DEPOSIT_AMT", dIRECT_DEPOSIT_AMT) :
                new ObjectParameter("DIRECT_DEPOSIT_AMT", typeof(decimal));
    
            var sUCCESSFUL_LOAN_AMTParameter = sUCCESSFUL_LOAN_AMT.HasValue ?
                new ObjectParameter("SUCCESSFUL_LOAN_AMT", sUCCESSFUL_LOAN_AMT) :
                new ObjectParameter("SUCCESSFUL_LOAN_AMT", typeof(decimal));
    
            var sTATE_REQ_ADJUSTMENT_AMTParameter = sTATE_REQ_ADJUSTMENT_AMT.HasValue ?
                new ObjectParameter("STATE_REQ_ADJUSTMENT_AMT", sTATE_REQ_ADJUSTMENT_AMT) :
                new ObjectParameter("STATE_REQ_ADJUSTMENT_AMT", typeof(decimal));
    
            var tYPE_OF_INCOMEParameter = tYPE_OF_INCOME != null ?
                new ObjectParameter("TYPE_OF_INCOME", tYPE_OF_INCOME) :
                new ObjectParameter("TYPE_OF_INCOME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LoanQualification_Insert", lOAN_KEYParameter, cUSTOMER_KEYParameter, lOCATIONParameter, tELLERParameter, aPPROVED_AMTParameter, bANK_ACCT_OPENParameter, bANK_VERIFY_ACCT_OPENParameter, bANK_NOT_VERIFYParameter, bANK_CLOSEDParameter, bANK_STATEMENTParameter, bANK_DIRECT_DEPOSITParameter, iNCOME_STATEMENTParameter, iNCOME_PAY_STUBParameter, iNCOME_DEPOSITSParameter, eMPLOYMENT_CALL_EMPLOYERParameter, eMPLOYMENT_VERIFY_CALL_EMPLOYERParameter, eMPLOYER_NOT_VERIFYParameter, eMPLOYER_CLOSEDParameter, eMPLOYMENT_PROOFParameter, eMPLOYMENT_APPLICATIONParameter, hOME_PHONE_WORKINGParameter, cELL_PHONE_WORKINGParameter, wORK_PHONE_WORKINGParameter, mOD_OVERRIDEParameter, oVERRIDE_NOTEParameter, mOD_AMT_OVERRIDEParameter, nEW_OVERRIDE_AMTParameter, mONTHLY_INCOME_USEDParameter, pCT_OF_INCOMEParameter, iNCOME_AMTParameter, vALID_CREDIT_CARD_AMTParameter, dIRECT_DEPOSIT_AMTParameter, sUCCESSFUL_LOAN_AMTParameter, sTATE_REQ_ADJUSTMENT_AMTParameter, tYPE_OF_INCOMEParameter);
        }
    
        public virtual ObjectResult<usp_LoansToFundCanada_Result> usp_LoansToFundCanada(string fILENAME, Nullable<int> rBC_EFUND_BATCH_KEY)
        {
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var rBC_EFUND_BATCH_KEYParameter = rBC_EFUND_BATCH_KEY.HasValue ?
                new ObjectParameter("RBC_EFUND_BATCH_KEY", rBC_EFUND_BATCH_KEY) :
                new ObjectParameter("RBC_EFUND_BATCH_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoansToFundCanada_Result>("usp_LoansToFundCanada", fILENAMEParameter, rBC_EFUND_BATCH_KEYParameter);
        }
    
        public virtual ObjectResult<usp_LoansToFundCanadaEFund_Result> usp_LoansToFundCanadaEFund(string fILENAME, Nullable<bool> iS_ONTARIO, Nullable<int> rBC_EFUND_BATCH_KEY)
        {
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var iS_ONTARIOParameter = iS_ONTARIO.HasValue ?
                new ObjectParameter("IS_ONTARIO", iS_ONTARIO) :
                new ObjectParameter("IS_ONTARIO", typeof(bool));
    
            var rBC_EFUND_BATCH_KEYParameter = rBC_EFUND_BATCH_KEY.HasValue ?
                new ObjectParameter("RBC_EFUND_BATCH_KEY", rBC_EFUND_BATCH_KEY) :
                new ObjectParameter("RBC_EFUND_BATCH_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoansToFundCanadaEFund_Result>("usp_LoansToFundCanadaEFund", fILENAMEParameter, iS_ONTARIOParameter, rBC_EFUND_BATCH_KEYParameter);
        }
    
        public virtual ObjectResult<usp_LoansToFundCanadaQueued_Result> usp_LoansToFundCanadaQueued(string fILENAME, Nullable<System.DateTime> eXPECTEDDATE, Nullable<int> aCH_SENT_KEY, Nullable<bool> mIDDAY_PROCESSING, Nullable<byte> pROCESSING_TYPE, Nullable<int> aCH_GROUP_KEY)
        {
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var eXPECTEDDATEParameter = eXPECTEDDATE.HasValue ?
                new ObjectParameter("EXPECTEDDATE", eXPECTEDDATE) :
                new ObjectParameter("EXPECTEDDATE", typeof(System.DateTime));
    
            var aCH_SENT_KEYParameter = aCH_SENT_KEY.HasValue ?
                new ObjectParameter("ACH_SENT_KEY", aCH_SENT_KEY) :
                new ObjectParameter("ACH_SENT_KEY", typeof(int));
    
            var mIDDAY_PROCESSINGParameter = mIDDAY_PROCESSING.HasValue ?
                new ObjectParameter("MIDDAY_PROCESSING", mIDDAY_PROCESSING) :
                new ObjectParameter("MIDDAY_PROCESSING", typeof(bool));
    
            var pROCESSING_TYPEParameter = pROCESSING_TYPE.HasValue ?
                new ObjectParameter("PROCESSING_TYPE", pROCESSING_TYPE) :
                new ObjectParameter("PROCESSING_TYPE", typeof(byte));
    
            var aCH_GROUP_KEYParameter = aCH_GROUP_KEY.HasValue ?
                new ObjectParameter("ACH_GROUP_KEY", aCH_GROUP_KEY) :
                new ObjectParameter("ACH_GROUP_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoansToFundCanadaQueued_Result>("usp_LoansToFundCanadaQueued", fILENAMEParameter, eXPECTEDDATEParameter, aCH_SENT_KEYParameter, mIDDAY_PROCESSINGParameter, pROCESSING_TYPEParameter, aCH_GROUP_KEYParameter);
        }
    
        public virtual ObjectResult<usp_LoansToFundUK_Result> usp_LoansToFundUK(string fILENAME, Nullable<System.DateTime> eXPECTEDDATE, Nullable<int> aCH_SENT_KEY, Nullable<bool> mIDDAY_PROCESSING, Nullable<int> aCH_GROUP_KEY)
        {
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var eXPECTEDDATEParameter = eXPECTEDDATE.HasValue ?
                new ObjectParameter("EXPECTEDDATE", eXPECTEDDATE) :
                new ObjectParameter("EXPECTEDDATE", typeof(System.DateTime));
    
            var aCH_SENT_KEYParameter = aCH_SENT_KEY.HasValue ?
                new ObjectParameter("ACH_SENT_KEY", aCH_SENT_KEY) :
                new ObjectParameter("ACH_SENT_KEY", typeof(int));
    
            var mIDDAY_PROCESSINGParameter = mIDDAY_PROCESSING.HasValue ?
                new ObjectParameter("MIDDAY_PROCESSING", mIDDAY_PROCESSING) :
                new ObjectParameter("MIDDAY_PROCESSING", typeof(bool));
    
            var aCH_GROUP_KEYParameter = aCH_GROUP_KEY.HasValue ?
                new ObjectParameter("ACH_GROUP_KEY", aCH_GROUP_KEY) :
                new ObjectParameter("ACH_GROUP_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoansToFundUK_Result>("usp_LoansToFundUK", fILENAMEParameter, eXPECTEDDATEParameter, aCH_SENT_KEYParameter, mIDDAY_PROCESSINGParameter, aCH_GROUP_KEYParameter);
        }
    
        public virtual ObjectResult<usp_LoansToFundWDA_Result> usp_LoansToFundWDA(string fILENAME, Nullable<System.DateTime> eXPECTEDDATE, Nullable<int> aCH_SENT_KEY, Nullable<bool> mIDDAY_PROCESSING, Nullable<int> aCH_GROUP_KEY)
        {
            var fILENAMEParameter = fILENAME != null ?
                new ObjectParameter("FILENAME", fILENAME) :
                new ObjectParameter("FILENAME", typeof(string));
    
            var eXPECTEDDATEParameter = eXPECTEDDATE.HasValue ?
                new ObjectParameter("EXPECTEDDATE", eXPECTEDDATE) :
                new ObjectParameter("EXPECTEDDATE", typeof(System.DateTime));
    
            var aCH_SENT_KEYParameter = aCH_SENT_KEY.HasValue ?
                new ObjectParameter("ACH_SENT_KEY", aCH_SENT_KEY) :
                new ObjectParameter("ACH_SENT_KEY", typeof(int));
    
            var mIDDAY_PROCESSINGParameter = mIDDAY_PROCESSING.HasValue ?
                new ObjectParameter("MIDDAY_PROCESSING", mIDDAY_PROCESSING) :
                new ObjectParameter("MIDDAY_PROCESSING", typeof(bool));
    
            var aCH_GROUP_KEYParameter = aCH_GROUP_KEY.HasValue ?
                new ObjectParameter("ACH_GROUP_KEY", aCH_GROUP_KEY) :
                new ObjectParameter("ACH_GROUP_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoansToFundWDA_Result>("usp_LoansToFundWDA", fILENAMEParameter, eXPECTEDDATEParameter, aCH_SENT_KEYParameter, mIDDAY_PROCESSINGParameter, aCH_GROUP_KEYParameter);
        }
    
        public virtual int usp_LoansToVoidWithACHBlockUS(Nullable<bool> mIDDAY_PROCESSING, Nullable<int> aCH_GROUP_KEY)
        {
            var mIDDAY_PROCESSINGParameter = mIDDAY_PROCESSING.HasValue ?
                new ObjectParameter("MIDDAY_PROCESSING", mIDDAY_PROCESSING) :
                new ObjectParameter("MIDDAY_PROCESSING", typeof(bool));
    
            var aCH_GROUP_KEYParameter = aCH_GROUP_KEY.HasValue ?
                new ObjectParameter("ACH_GROUP_KEY", aCH_GROUP_KEY) :
                new ObjectParameter("ACH_GROUP_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LoansToVoidWithACHBlockUS", mIDDAY_PROCESSINGParameter, aCH_GROUP_KEYParameter);
        }
    
        public virtual int usp_Mktg_Exec_SQL_as_Live(string p_sSQL)
        {
            var p_sSQLParameter = p_sSQL != null ?
                new ObjectParameter("p_sSQL", p_sSQL) :
                new ObjectParameter("p_sSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Mktg_Exec_SQL_as_Live", p_sSQLParameter);
        }
    
        public virtual int usp_Mktg_Exec_SQL_as_Test(string p_sSQL)
        {
            var p_sSQLParameter = p_sSQL != null ?
                new ObjectParameter("p_sSQL", p_sSQL) :
                new ObjectParameter("p_sSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Mktg_Exec_SQL_as_Test", p_sSQLParameter);
        }
    
        public virtual int usp_NetSpendTrans_Insert(string rESULT_STR, Nullable<short> rESULT_NUM, string eNTERED_BY, Nullable<int> tRANS_DETAIL_KEY, string cCARD_NUM)
        {
            var rESULT_STRParameter = rESULT_STR != null ?
                new ObjectParameter("RESULT_STR", rESULT_STR) :
                new ObjectParameter("RESULT_STR", typeof(string));
    
            var rESULT_NUMParameter = rESULT_NUM.HasValue ?
                new ObjectParameter("RESULT_NUM", rESULT_NUM) :
                new ObjectParameter("RESULT_NUM", typeof(short));
    
            var eNTERED_BYParameter = eNTERED_BY != null ?
                new ObjectParameter("ENTERED_BY", eNTERED_BY) :
                new ObjectParameter("ENTERED_BY", typeof(string));
    
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            var cCARD_NUMParameter = cCARD_NUM != null ?
                new ObjectParameter("CCARD_NUM", cCARD_NUM) :
                new ObjectParameter("CCARD_NUM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NetSpendTrans_Insert", rESULT_STRParameter, rESULT_NUMParameter, eNTERED_BYParameter, tRANS_DETAIL_KEYParameter, cCARD_NUMParameter);
        }
    
        public virtual int usp_NonProductionDbUpdates(Nullable<bool> bIncludeAddCustomers)
        {
            var bIncludeAddCustomersParameter = bIncludeAddCustomers.HasValue ?
                new ObjectParameter("bIncludeAddCustomers", bIncludeAddCustomers) :
                new ObjectParameter("bIncludeAddCustomers", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NonProductionDbUpdates", bIncludeAddCustomersParameter);
        }
    
        public virtual int usp_OverShort_Insert(Nullable<int> tRANS_DETAIL_KEY, string eNTERED_BY, Nullable<short> lOCATION, Nullable<int> dRAWERZ_KEY, Nullable<int> vAULT_COUNT_KEY, Nullable<int> sERVICE_DETAIL_KEY, Nullable<decimal> cALC_AMT, Nullable<decimal> eNTERED_AMT, Nullable<int> cALC_QTY, Nullable<int> eNTERED_QTY)
        {
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            var eNTERED_BYParameter = eNTERED_BY != null ?
                new ObjectParameter("ENTERED_BY", eNTERED_BY) :
                new ObjectParameter("ENTERED_BY", typeof(string));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var dRAWERZ_KEYParameter = dRAWERZ_KEY.HasValue ?
                new ObjectParameter("DRAWERZ_KEY", dRAWERZ_KEY) :
                new ObjectParameter("DRAWERZ_KEY", typeof(int));
    
            var vAULT_COUNT_KEYParameter = vAULT_COUNT_KEY.HasValue ?
                new ObjectParameter("VAULT_COUNT_KEY", vAULT_COUNT_KEY) :
                new ObjectParameter("VAULT_COUNT_KEY", typeof(int));
    
            var sERVICE_DETAIL_KEYParameter = sERVICE_DETAIL_KEY.HasValue ?
                new ObjectParameter("SERVICE_DETAIL_KEY", sERVICE_DETAIL_KEY) :
                new ObjectParameter("SERVICE_DETAIL_KEY", typeof(int));
    
            var cALC_AMTParameter = cALC_AMT.HasValue ?
                new ObjectParameter("CALC_AMT", cALC_AMT) :
                new ObjectParameter("CALC_AMT", typeof(decimal));
    
            var eNTERED_AMTParameter = eNTERED_AMT.HasValue ?
                new ObjectParameter("ENTERED_AMT", eNTERED_AMT) :
                new ObjectParameter("ENTERED_AMT", typeof(decimal));
    
            var cALC_QTYParameter = cALC_QTY.HasValue ?
                new ObjectParameter("CALC_QTY", cALC_QTY) :
                new ObjectParameter("CALC_QTY", typeof(int));
    
            var eNTERED_QTYParameter = eNTERED_QTY.HasValue ?
                new ObjectParameter("ENTERED_QTY", eNTERED_QTY) :
                new ObjectParameter("ENTERED_QTY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OverShort_Insert", tRANS_DETAIL_KEYParameter, eNTERED_BYParameter, lOCATIONParameter, dRAWERZ_KEYParameter, vAULT_COUNT_KEYParameter, sERVICE_DETAIL_KEYParameter, cALC_AMTParameter, eNTERED_AMTParameter, cALC_QTYParameter, eNTERED_QTYParameter);
        }
    
        public virtual int usp_PaydayLoanApproval_Insert(Nullable<int> iLoanKey, Nullable<int> iCustomerKey, Nullable<decimal> nGrossIncomeAmt, Nullable<decimal> nNetIncomeAmt, Nullable<decimal> nOpenLoansPrincAmt, Nullable<byte> iStateMaxPctOfIncome, string sStateMaxNetOrGross, Nullable<decimal> nStateMaxMultiLoanAmt, Nullable<decimal> nStateMaxIncomeAmt, Nullable<decimal> nStateMaxPerLoanAmt, Nullable<decimal> nStateMaxAmt, Nullable<bool> bApprovalEnabled, Nullable<byte> iApprovalPctOfIncome, string sApprovalNetOrGross, Nullable<decimal> nApprovalBaseIncomeAmt, Nullable<decimal> nApprovalCCardAmt, Nullable<decimal> nApprovalDirDepAmt, Nullable<decimal> nApprovalSuccessfulAmt, Nullable<decimal> nApprovalBaseAmt, Nullable<decimal> nMgrOverrideAmt, string sMgrOverrideInits, Nullable<decimal> nPrevPrincOverrideAmt, Nullable<decimal> nApprovalStateMaxAdjAmt, Nullable<decimal> nApprovalAmt, Nullable<decimal> nScoredIncrementAmt, Nullable<short> scoredIncrementNum, Nullable<decimal> nIncludeFeeMaxPrincAmt, Nullable<decimal> includeFeeMaxLoanAmt)
        {
            var iLoanKeyParameter = iLoanKey.HasValue ?
                new ObjectParameter("iLoanKey", iLoanKey) :
                new ObjectParameter("iLoanKey", typeof(int));
    
            var iCustomerKeyParameter = iCustomerKey.HasValue ?
                new ObjectParameter("iCustomerKey", iCustomerKey) :
                new ObjectParameter("iCustomerKey", typeof(int));
    
            var nGrossIncomeAmtParameter = nGrossIncomeAmt.HasValue ?
                new ObjectParameter("nGrossIncomeAmt", nGrossIncomeAmt) :
                new ObjectParameter("nGrossIncomeAmt", typeof(decimal));
    
            var nNetIncomeAmtParameter = nNetIncomeAmt.HasValue ?
                new ObjectParameter("nNetIncomeAmt", nNetIncomeAmt) :
                new ObjectParameter("nNetIncomeAmt", typeof(decimal));
    
            var nOpenLoansPrincAmtParameter = nOpenLoansPrincAmt.HasValue ?
                new ObjectParameter("nOpenLoansPrincAmt", nOpenLoansPrincAmt) :
                new ObjectParameter("nOpenLoansPrincAmt", typeof(decimal));
    
            var iStateMaxPctOfIncomeParameter = iStateMaxPctOfIncome.HasValue ?
                new ObjectParameter("iStateMaxPctOfIncome", iStateMaxPctOfIncome) :
                new ObjectParameter("iStateMaxPctOfIncome", typeof(byte));
    
            var sStateMaxNetOrGrossParameter = sStateMaxNetOrGross != null ?
                new ObjectParameter("sStateMaxNetOrGross", sStateMaxNetOrGross) :
                new ObjectParameter("sStateMaxNetOrGross", typeof(string));
    
            var nStateMaxMultiLoanAmtParameter = nStateMaxMultiLoanAmt.HasValue ?
                new ObjectParameter("nStateMaxMultiLoanAmt", nStateMaxMultiLoanAmt) :
                new ObjectParameter("nStateMaxMultiLoanAmt", typeof(decimal));
    
            var nStateMaxIncomeAmtParameter = nStateMaxIncomeAmt.HasValue ?
                new ObjectParameter("nStateMaxIncomeAmt", nStateMaxIncomeAmt) :
                new ObjectParameter("nStateMaxIncomeAmt", typeof(decimal));
    
            var nStateMaxPerLoanAmtParameter = nStateMaxPerLoanAmt.HasValue ?
                new ObjectParameter("nStateMaxPerLoanAmt", nStateMaxPerLoanAmt) :
                new ObjectParameter("nStateMaxPerLoanAmt", typeof(decimal));
    
            var nStateMaxAmtParameter = nStateMaxAmt.HasValue ?
                new ObjectParameter("nStateMaxAmt", nStateMaxAmt) :
                new ObjectParameter("nStateMaxAmt", typeof(decimal));
    
            var bApprovalEnabledParameter = bApprovalEnabled.HasValue ?
                new ObjectParameter("bApprovalEnabled", bApprovalEnabled) :
                new ObjectParameter("bApprovalEnabled", typeof(bool));
    
            var iApprovalPctOfIncomeParameter = iApprovalPctOfIncome.HasValue ?
                new ObjectParameter("iApprovalPctOfIncome", iApprovalPctOfIncome) :
                new ObjectParameter("iApprovalPctOfIncome", typeof(byte));
    
            var sApprovalNetOrGrossParameter = sApprovalNetOrGross != null ?
                new ObjectParameter("sApprovalNetOrGross", sApprovalNetOrGross) :
                new ObjectParameter("sApprovalNetOrGross", typeof(string));
    
            var nApprovalBaseIncomeAmtParameter = nApprovalBaseIncomeAmt.HasValue ?
                new ObjectParameter("nApprovalBaseIncomeAmt", nApprovalBaseIncomeAmt) :
                new ObjectParameter("nApprovalBaseIncomeAmt", typeof(decimal));
    
            var nApprovalCCardAmtParameter = nApprovalCCardAmt.HasValue ?
                new ObjectParameter("nApprovalCCardAmt", nApprovalCCardAmt) :
                new ObjectParameter("nApprovalCCardAmt", typeof(decimal));
    
            var nApprovalDirDepAmtParameter = nApprovalDirDepAmt.HasValue ?
                new ObjectParameter("nApprovalDirDepAmt", nApprovalDirDepAmt) :
                new ObjectParameter("nApprovalDirDepAmt", typeof(decimal));
    
            var nApprovalSuccessfulAmtParameter = nApprovalSuccessfulAmt.HasValue ?
                new ObjectParameter("nApprovalSuccessfulAmt", nApprovalSuccessfulAmt) :
                new ObjectParameter("nApprovalSuccessfulAmt", typeof(decimal));
    
            var nApprovalBaseAmtParameter = nApprovalBaseAmt.HasValue ?
                new ObjectParameter("nApprovalBaseAmt", nApprovalBaseAmt) :
                new ObjectParameter("nApprovalBaseAmt", typeof(decimal));
    
            var nMgrOverrideAmtParameter = nMgrOverrideAmt.HasValue ?
                new ObjectParameter("nMgrOverrideAmt", nMgrOverrideAmt) :
                new ObjectParameter("nMgrOverrideAmt", typeof(decimal));
    
            var sMgrOverrideInitsParameter = sMgrOverrideInits != null ?
                new ObjectParameter("sMgrOverrideInits", sMgrOverrideInits) :
                new ObjectParameter("sMgrOverrideInits", typeof(string));
    
            var nPrevPrincOverrideAmtParameter = nPrevPrincOverrideAmt.HasValue ?
                new ObjectParameter("nPrevPrincOverrideAmt", nPrevPrincOverrideAmt) :
                new ObjectParameter("nPrevPrincOverrideAmt", typeof(decimal));
    
            var nApprovalStateMaxAdjAmtParameter = nApprovalStateMaxAdjAmt.HasValue ?
                new ObjectParameter("nApprovalStateMaxAdjAmt", nApprovalStateMaxAdjAmt) :
                new ObjectParameter("nApprovalStateMaxAdjAmt", typeof(decimal));
    
            var nApprovalAmtParameter = nApprovalAmt.HasValue ?
                new ObjectParameter("nApprovalAmt", nApprovalAmt) :
                new ObjectParameter("nApprovalAmt", typeof(decimal));
    
            var nScoredIncrementAmtParameter = nScoredIncrementAmt.HasValue ?
                new ObjectParameter("nScoredIncrementAmt", nScoredIncrementAmt) :
                new ObjectParameter("nScoredIncrementAmt", typeof(decimal));
    
            var scoredIncrementNumParameter = scoredIncrementNum.HasValue ?
                new ObjectParameter("ScoredIncrementNum", scoredIncrementNum) :
                new ObjectParameter("ScoredIncrementNum", typeof(short));
    
            var nIncludeFeeMaxPrincAmtParameter = nIncludeFeeMaxPrincAmt.HasValue ?
                new ObjectParameter("nIncludeFeeMaxPrincAmt", nIncludeFeeMaxPrincAmt) :
                new ObjectParameter("nIncludeFeeMaxPrincAmt", typeof(decimal));
    
            var includeFeeMaxLoanAmtParameter = includeFeeMaxLoanAmt.HasValue ?
                new ObjectParameter("IncludeFeeMaxLoanAmt", includeFeeMaxLoanAmt) :
                new ObjectParameter("IncludeFeeMaxLoanAmt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PaydayLoanApproval_Insert", iLoanKeyParameter, iCustomerKeyParameter, nGrossIncomeAmtParameter, nNetIncomeAmtParameter, nOpenLoansPrincAmtParameter, iStateMaxPctOfIncomeParameter, sStateMaxNetOrGrossParameter, nStateMaxMultiLoanAmtParameter, nStateMaxIncomeAmtParameter, nStateMaxPerLoanAmtParameter, nStateMaxAmtParameter, bApprovalEnabledParameter, iApprovalPctOfIncomeParameter, sApprovalNetOrGrossParameter, nApprovalBaseIncomeAmtParameter, nApprovalCCardAmtParameter, nApprovalDirDepAmtParameter, nApprovalSuccessfulAmtParameter, nApprovalBaseAmtParameter, nMgrOverrideAmtParameter, sMgrOverrideInitsParameter, nPrevPrincOverrideAmtParameter, nApprovalStateMaxAdjAmtParameter, nApprovalAmtParameter, nScoredIncrementAmtParameter, scoredIncrementNumParameter, nIncludeFeeMaxPrincAmtParameter, includeFeeMaxLoanAmtParameter);
        }
    
        public virtual int usp_PaydayLoanQualification_Insert(Nullable<int> iCustomerKey, Nullable<System.DateTime> dDateEntered, string sTeller, Nullable<short> iLocation, Nullable<bool> bBankStatement, Nullable<bool> bBankDirectDeposit, Nullable<bool> bBankContacted, Nullable<bool> bIncomeStatement, Nullable<bool> bIncomePayStub, Nullable<bool> bIncomeDeposits, Nullable<bool> bHomePhoneWorking)
        {
            var iCustomerKeyParameter = iCustomerKey.HasValue ?
                new ObjectParameter("iCustomerKey", iCustomerKey) :
                new ObjectParameter("iCustomerKey", typeof(int));
    
            var dDateEnteredParameter = dDateEntered.HasValue ?
                new ObjectParameter("dDateEntered", dDateEntered) :
                new ObjectParameter("dDateEntered", typeof(System.DateTime));
    
            var sTellerParameter = sTeller != null ?
                new ObjectParameter("sTeller", sTeller) :
                new ObjectParameter("sTeller", typeof(string));
    
            var iLocationParameter = iLocation.HasValue ?
                new ObjectParameter("iLocation", iLocation) :
                new ObjectParameter("iLocation", typeof(short));
    
            var bBankStatementParameter = bBankStatement.HasValue ?
                new ObjectParameter("bBankStatement", bBankStatement) :
                new ObjectParameter("bBankStatement", typeof(bool));
    
            var bBankDirectDepositParameter = bBankDirectDeposit.HasValue ?
                new ObjectParameter("bBankDirectDeposit", bBankDirectDeposit) :
                new ObjectParameter("bBankDirectDeposit", typeof(bool));
    
            var bBankContactedParameter = bBankContacted.HasValue ?
                new ObjectParameter("bBankContacted", bBankContacted) :
                new ObjectParameter("bBankContacted", typeof(bool));
    
            var bIncomeStatementParameter = bIncomeStatement.HasValue ?
                new ObjectParameter("bIncomeStatement", bIncomeStatement) :
                new ObjectParameter("bIncomeStatement", typeof(bool));
    
            var bIncomePayStubParameter = bIncomePayStub.HasValue ?
                new ObjectParameter("bIncomePayStub", bIncomePayStub) :
                new ObjectParameter("bIncomePayStub", typeof(bool));
    
            var bIncomeDepositsParameter = bIncomeDeposits.HasValue ?
                new ObjectParameter("bIncomeDeposits", bIncomeDeposits) :
                new ObjectParameter("bIncomeDeposits", typeof(bool));
    
            var bHomePhoneWorkingParameter = bHomePhoneWorking.HasValue ?
                new ObjectParameter("bHomePhoneWorking", bHomePhoneWorking) :
                new ObjectParameter("bHomePhoneWorking", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PaydayLoanQualification_Insert", iCustomerKeyParameter, dDateEnteredParameter, sTellerParameter, iLocationParameter, bBankStatementParameter, bBankDirectDepositParameter, bBankContactedParameter, bIncomeStatementParameter, bIncomePayStubParameter, bIncomeDepositsParameter, bHomePhoneWorkingParameter);
        }
    
        public virtual int usp_PaymentPlan_Insert(Nullable<decimal> pP_Principal, Nullable<decimal> pP_Commission)
        {
            var pP_PrincipalParameter = pP_Principal.HasValue ?
                new ObjectParameter("PP_Principal", pP_Principal) :
                new ObjectParameter("PP_Principal", typeof(decimal));
    
            var pP_CommissionParameter = pP_Commission.HasValue ?
                new ObjectParameter("PP_Commission", pP_Commission) :
                new ObjectParameter("PP_Commission", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PaymentPlan_Insert", pP_PrincipalParameter, pP_CommissionParameter);
        }
    
        public virtual int usp_PrintRequestHistory_Insert(Nullable<int> iPrintReqKey, Nullable<int> iPrintError)
        {
            var iPrintReqKeyParameter = iPrintReqKey.HasValue ?
                new ObjectParameter("iPrintReqKey", iPrintReqKey) :
                new ObjectParameter("iPrintReqKey", typeof(int));
    
            var iPrintErrorParameter = iPrintError.HasValue ?
                new ObjectParameter("iPrintError", iPrintError) :
                new ObjectParameter("iPrintError", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PrintRequestHistory_Insert", iPrintReqKeyParameter, iPrintErrorParameter);
        }
    
        public virtual int usp_PromiseToPay_Insert(Nullable<int> cUSTOMER_KEY, Nullable<int> rISREPT_KEY, string tELLER, Nullable<int> pTP_CONFIG_KEY, Nullable<byte> pTP_PMTS, Nullable<short> pTP_LOCATION, string pTP_COURTESY_CALL, string aPPROVED_BY, Nullable<byte> wAIVE_FEE, Nullable<int> tRANS_DETAIL_KEY)
        {
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var rISREPT_KEYParameter = rISREPT_KEY.HasValue ?
                new ObjectParameter("RISREPT_KEY", rISREPT_KEY) :
                new ObjectParameter("RISREPT_KEY", typeof(int));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var pTP_CONFIG_KEYParameter = pTP_CONFIG_KEY.HasValue ?
                new ObjectParameter("PTP_CONFIG_KEY", pTP_CONFIG_KEY) :
                new ObjectParameter("PTP_CONFIG_KEY", typeof(int));
    
            var pTP_PMTSParameter = pTP_PMTS.HasValue ?
                new ObjectParameter("PTP_PMTS", pTP_PMTS) :
                new ObjectParameter("PTP_PMTS", typeof(byte));
    
            var pTP_LOCATIONParameter = pTP_LOCATION.HasValue ?
                new ObjectParameter("PTP_LOCATION", pTP_LOCATION) :
                new ObjectParameter("PTP_LOCATION", typeof(short));
    
            var pTP_COURTESY_CALLParameter = pTP_COURTESY_CALL != null ?
                new ObjectParameter("PTP_COURTESY_CALL", pTP_COURTESY_CALL) :
                new ObjectParameter("PTP_COURTESY_CALL", typeof(string));
    
            var aPPROVED_BYParameter = aPPROVED_BY != null ?
                new ObjectParameter("APPROVED_BY", aPPROVED_BY) :
                new ObjectParameter("APPROVED_BY", typeof(string));
    
            var wAIVE_FEEParameter = wAIVE_FEE.HasValue ?
                new ObjectParameter("WAIVE_FEE", wAIVE_FEE) :
                new ObjectParameter("WAIVE_FEE", typeof(byte));
    
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PromiseToPay_Insert", cUSTOMER_KEYParameter, rISREPT_KEYParameter, tELLERParameter, pTP_CONFIG_KEYParameter, pTP_PMTSParameter, pTP_LOCATIONParameter, pTP_COURTESY_CALLParameter, aPPROVED_BYParameter, wAIVE_FEEParameter, tRANS_DETAIL_KEYParameter);
        }
    
        public virtual int usp_PromiseToPayDetailTrans_Insert(Nullable<int> pTP_DETAIL_KEY, Nullable<decimal> pTP_AMOUNT, Nullable<int> tRANS_DETAIL_KEY)
        {
            var pTP_DETAIL_KEYParameter = pTP_DETAIL_KEY.HasValue ?
                new ObjectParameter("PTP_DETAIL_KEY", pTP_DETAIL_KEY) :
                new ObjectParameter("PTP_DETAIL_KEY", typeof(int));
    
            var pTP_AMOUNTParameter = pTP_AMOUNT.HasValue ?
                new ObjectParameter("PTP_AMOUNT", pTP_AMOUNT) :
                new ObjectParameter("PTP_AMOUNT", typeof(decimal));
    
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PromiseToPayDetailTrans_Insert", pTP_DETAIL_KEYParameter, pTP_AMOUNTParameter, tRANS_DETAIL_KEYParameter);
        }
    
        public virtual int usp_PushNotification_insert(Nullable<byte> notificationType, Nullable<int> interval)
        {
            var notificationTypeParameter = notificationType.HasValue ?
                new ObjectParameter("notificationType", notificationType) :
                new ObjectParameter("notificationType", typeof(byte));
    
            var intervalParameter = interval.HasValue ?
                new ObjectParameter("interval", interval) :
                new ObjectParameter("interval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PushNotification_insert", notificationTypeParameter, intervalParameter);
        }
    
        public virtual ObjectResult<usp_Reporting_StoreCreditForInternetLoans_Result> usp_Reporting_StoreCreditForInternetLoans(Nullable<System.DateTime> startTransDate, Nullable<System.DateTime> endTransDate, Nullable<bool> splitBusinessDaysOnly)
        {
            var startTransDateParameter = startTransDate.HasValue ?
                new ObjectParameter("startTransDate", startTransDate) :
                new ObjectParameter("startTransDate", typeof(System.DateTime));
    
            var endTransDateParameter = endTransDate.HasValue ?
                new ObjectParameter("endTransDate", endTransDate) :
                new ObjectParameter("endTransDate", typeof(System.DateTime));
    
            var splitBusinessDaysOnlyParameter = splitBusinessDaysOnly.HasValue ?
                new ObjectParameter("splitBusinessDaysOnly", splitBusinessDaysOnly) :
                new ObjectParameter("splitBusinessDaysOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Reporting_StoreCreditForInternetLoans_Result>("usp_Reporting_StoreCreditForInternetLoans", startTransDateParameter, endTransDateParameter, splitBusinessDaysOnlyParameter);
        }
    
        public virtual int usp_RiccUpdates_Insert(string sql, Nullable<int> riccHoldID, string table)
        {
            var sqlParameter = sql != null ?
                new ObjectParameter("Sql", sql) :
                new ObjectParameter("Sql", typeof(string));
    
            var riccHoldIDParameter = riccHoldID.HasValue ?
                new ObjectParameter("RiccHoldID", riccHoldID) :
                new ObjectParameter("RiccHoldID", typeof(int));
    
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RiccUpdates_Insert", sqlParameter, riccHoldIDParameter, tableParameter);
        }
    
        public virtual ObjectResult<usp_RILoanProductConfig_Result> usp_RILoanProductConfig(Nullable<int> loanProductConfigKey)
        {
            var loanProductConfigKeyParameter = loanProductConfigKey.HasValue ?
                new ObjectParameter("LoanProductConfigKey", loanProductConfigKey) :
                new ObjectParameter("LoanProductConfigKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RILoanProductConfig_Result>("usp_RILoanProductConfig", loanProductConfigKeyParameter);
        }
    
        public virtual int usp_Ris_Insert(Nullable<int> risReptKey, string teller, Nullable<short> location, Nullable<int> taskID, Nullable<int> auditID, Nullable<System.DateTime> followup, string notes)
        {
            var risReptKeyParameter = risReptKey.HasValue ?
                new ObjectParameter("RisReptKey", risReptKey) :
                new ObjectParameter("RisReptKey", typeof(int));
    
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            var taskIDParameter = taskID.HasValue ?
                new ObjectParameter("TaskID", taskID) :
                new ObjectParameter("TaskID", typeof(int));
    
            var auditIDParameter = auditID.HasValue ?
                new ObjectParameter("AuditID", auditID) :
                new ObjectParameter("AuditID", typeof(int));
    
            var followupParameter = followup.HasValue ?
                new ObjectParameter("Followup", followup) :
                new ObjectParameter("Followup", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Ris_Insert", risReptKeyParameter, tellerParameter, locationParameter, taskIDParameter, auditIDParameter, followupParameter, notesParameter);
        }
    
        public virtual int usp_RTFPrint_Insert(Nullable<int> rTFDOC_KEY, Nullable<int> cUSTOMER_KEY, Nullable<int> lOCATION, string tELLER, string rTF_DATA, Nullable<System.DateTime> dATE_ENTERED, Nullable<int> tRANS_DETAIL_KEY, Nullable<int> lOAN_KEY, Nullable<int> cASHED_CHECK_KEY)
        {
            var rTFDOC_KEYParameter = rTFDOC_KEY.HasValue ?
                new ObjectParameter("RTFDOC_KEY", rTFDOC_KEY) :
                new ObjectParameter("RTFDOC_KEY", typeof(int));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(int));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var rTF_DATAParameter = rTF_DATA != null ?
                new ObjectParameter("RTF_DATA", rTF_DATA) :
                new ObjectParameter("RTF_DATA", typeof(string));
    
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var cASHED_CHECK_KEYParameter = cASHED_CHECK_KEY.HasValue ?
                new ObjectParameter("CASHED_CHECK_KEY", cASHED_CHECK_KEY) :
                new ObjectParameter("CASHED_CHECK_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RTFPrint_Insert", rTFDOC_KEYParameter, cUSTOMER_KEYParameter, lOCATIONParameter, tELLERParameter, rTF_DATAParameter, dATE_ENTEREDParameter, tRANS_DETAIL_KEYParameter, lOAN_KEYParameter, cASHED_CHECK_KEYParameter);
        }
    
        public virtual ObjectResult<Nullable<short>> usp_Scoring_App_Selection(Nullable<int> customerKey, Nullable<int> loanAppKey)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var loanAppKeyParameter = loanAppKey.HasValue ?
                new ObjectParameter("LoanAppKey", loanAppKey) :
                new ObjectParameter("LoanAppKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("usp_Scoring_App_Selection", customerKeyParameter, loanAppKeyParameter);
        }
    
        public virtual int usp_Scoring_CuroLoanApp_Insert(Nullable<int> customerKey, Nullable<decimal> lOANAMT, Nullable<int> lOANKEY, Nullable<int> sCORESUMMARYKEY, Nullable<short> rEQUESTINGLOCATION, string lOANTYPE, string pRODUCTTYPE, Nullable<byte> countryCode, string teller, Nullable<int> loanProductConfigKey)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var lOANAMTParameter = lOANAMT.HasValue ?
                new ObjectParameter("LOANAMT", lOANAMT) :
                new ObjectParameter("LOANAMT", typeof(decimal));
    
            var lOANKEYParameter = lOANKEY.HasValue ?
                new ObjectParameter("LOANKEY", lOANKEY) :
                new ObjectParameter("LOANKEY", typeof(int));
    
            var sCORESUMMARYKEYParameter = sCORESUMMARYKEY.HasValue ?
                new ObjectParameter("SCORESUMMARYKEY", sCORESUMMARYKEY) :
                new ObjectParameter("SCORESUMMARYKEY", typeof(int));
    
            var rEQUESTINGLOCATIONParameter = rEQUESTINGLOCATION.HasValue ?
                new ObjectParameter("REQUESTINGLOCATION", rEQUESTINGLOCATION) :
                new ObjectParameter("REQUESTINGLOCATION", typeof(short));
    
            var lOANTYPEParameter = lOANTYPE != null ?
                new ObjectParameter("LOANTYPE", lOANTYPE) :
                new ObjectParameter("LOANTYPE", typeof(string));
    
            var pRODUCTTYPEParameter = pRODUCTTYPE != null ?
                new ObjectParameter("PRODUCTTYPE", pRODUCTTYPE) :
                new ObjectParameter("PRODUCTTYPE", typeof(string));
    
            var countryCodeParameter = countryCode.HasValue ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(byte));
    
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var loanProductConfigKeyParameter = loanProductConfigKey.HasValue ?
                new ObjectParameter("LoanProductConfigKey", loanProductConfigKey) :
                new ObjectParameter("LoanProductConfigKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Scoring_CuroLoanApp_Insert", customerKeyParameter, lOANAMTParameter, lOANKEYParameter, sCORESUMMARYKEYParameter, rEQUESTINGLOCATIONParameter, lOANTYPEParameter, pRODUCTTYPEParameter, countryCodeParameter, tellerParameter, loanProductConfigKeyParameter);
        }
    
        public virtual ObjectResult<Nullable<short>> usp_Scoring_ExistingCustomerFraud(Nullable<int> customerKey, Nullable<int> loanApplicationKey)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var loanApplicationKeyParameter = loanApplicationKey.HasValue ?
                new ObjectParameter("LoanApplicationKey", loanApplicationKey) :
                new ObjectParameter("LoanApplicationKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("usp_Scoring_ExistingCustomerFraud", customerKeyParameter, loanApplicationKeyParameter);
        }
    
        public virtual int usp_Scoring_GetAgencyData(Nullable<int> agencyMasterKey, Nullable<int> customerKey, Nullable<int> loanApplicationKey, string dBSource)
        {
            var agencyMasterKeyParameter = agencyMasterKey.HasValue ?
                new ObjectParameter("AgencyMasterKey", agencyMasterKey) :
                new ObjectParameter("AgencyMasterKey", typeof(int));
    
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var loanApplicationKeyParameter = loanApplicationKey.HasValue ?
                new ObjectParameter("LoanApplicationKey", loanApplicationKey) :
                new ObjectParameter("LoanApplicationKey", typeof(int));
    
            var dBSourceParameter = dBSource != null ?
                new ObjectParameter("DBSource", dBSource) :
                new ObjectParameter("DBSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Scoring_GetAgencyData", agencyMasterKeyParameter, customerKeyParameter, loanApplicationKeyParameter, dBSourceParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> usp_Scoring_PriorGoodLoanExperience(Nullable<int> customerkey, string product, string loanType)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("Customerkey", customerkey) :
                new ObjectParameter("Customerkey", typeof(int));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var loanTypeParameter = loanType != null ?
                new ObjectParameter("LoanType", loanType) :
                new ObjectParameter("LoanType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("usp_Scoring_PriorGoodLoanExperience", customerkeyParameter, productParameter, loanTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_Scoring_Rule_BMCustomerInGoodStanding(Nullable<int> customerkey, string productType, string loanType)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("Customerkey", customerkey) :
                new ObjectParameter("Customerkey", typeof(int));
    
            var productTypeParameter = productType != null ?
                new ObjectParameter("ProductType", productType) :
                new ObjectParameter("ProductType", typeof(string));
    
            var loanTypeParameter = loanType != null ?
                new ObjectParameter("LoanType", loanType) :
                new ObjectParameter("LoanType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_Scoring_Rule_BMCustomerInGoodStanding", customerkeyParameter, productTypeParameter, loanTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_Scoring_Rule_CustomerInGoodStanding(Nullable<int> customerkey, string productType, string loanType)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("Customerkey", customerkey) :
                new ObjectParameter("Customerkey", typeof(int));
    
            var productTypeParameter = productType != null ?
                new ObjectParameter("ProductType", productType) :
                new ObjectParameter("ProductType", typeof(string));
    
            var loanTypeParameter = loanType != null ?
                new ObjectParameter("LoanType", loanType) :
                new ObjectParameter("LoanType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_Scoring_Rule_CustomerInGoodStanding", customerkeyParameter, productTypeParameter, loanTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_Scoring_Rule_CustomerInGoodStandingLeadGen(Nullable<int> customerkey, string productType, string loanType)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("Customerkey", customerkey) :
                new ObjectParameter("Customerkey", typeof(int));
    
            var productTypeParameter = productType != null ?
                new ObjectParameter("ProductType", productType) :
                new ObjectParameter("ProductType", typeof(string));
    
            var loanTypeParameter = loanType != null ?
                new ObjectParameter("LoanType", loanType) :
                new ObjectParameter("LoanType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_Scoring_Rule_CustomerInGoodStandingLeadGen", customerkeyParameter, productTypeParameter, loanTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_Scoring_Rule_CustomerWithOpenLoanLeadGen(Nullable<int> customerkey, Nullable<int> loanApplicationKey, string productType, string loanType)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("Customerkey", customerkey) :
                new ObjectParameter("Customerkey", typeof(int));
    
            var loanApplicationKeyParameter = loanApplicationKey.HasValue ?
                new ObjectParameter("LoanApplicationKey", loanApplicationKey) :
                new ObjectParameter("LoanApplicationKey", typeof(int));
    
            var productTypeParameter = productType != null ?
                new ObjectParameter("ProductType", productType) :
                new ObjectParameter("ProductType", typeof(string));
    
            var loanTypeParameter = loanType != null ?
                new ObjectParameter("LoanType", loanType) :
                new ObjectParameter("LoanType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_Scoring_Rule_CustomerWithOpenLoanLeadGen", customerkeyParameter, loanApplicationKeyParameter, productTypeParameter, loanTypeParameter);
        }
    
        public virtual int usp_Scoring_Rule_RiBalance_15(Nullable<int> customerkey)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("Customerkey", customerkey) :
                new ObjectParameter("Customerkey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Scoring_Rule_RiBalance_15", customerkeyParameter);
        }
    
        public virtual int usp_SkipTraceEvents_Insert(Nullable<int> iSkipTraceThreadKey, string cEventCode, Nullable<int> iSkipTraceVendorKey)
        {
            var iSkipTraceThreadKeyParameter = iSkipTraceThreadKey.HasValue ?
                new ObjectParameter("iSkipTraceThreadKey", iSkipTraceThreadKey) :
                new ObjectParameter("iSkipTraceThreadKey", typeof(int));
    
            var cEventCodeParameter = cEventCode != null ?
                new ObjectParameter("cEventCode", cEventCode) :
                new ObjectParameter("cEventCode", typeof(string));
    
            var iSkipTraceVendorKeyParameter = iSkipTraceVendorKey.HasValue ?
                new ObjectParameter("iSkipTraceVendorKey", iSkipTraceVendorKey) :
                new ObjectParameter("iSkipTraceVendorKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SkipTraceEvents_Insert", iSkipTraceThreadKeyParameter, cEventCodeParameter, iSkipTraceVendorKeyParameter);
        }
    
        public virtual int usp_SkipTraceStep_Insert(Nullable<int> iConfigKey, string sStepName, Nullable<short> iStepPriority, Nullable<short> iDelinquencyDaysFrom, Nullable<short> iDelinquencyDaysTo, Nullable<decimal> nBalanceRangeFrom, Nullable<decimal> nBalanceRangeTo, Nullable<short> iDaysSinceLastContact, Nullable<bool> bProcessWhenNoHomeAddress, Nullable<bool> bProcessWhenNoHomePhone, Nullable<bool> bProcessWhenNoCellPhone, Nullable<bool> bProcessWhenNoWorkPhone)
        {
            var iConfigKeyParameter = iConfigKey.HasValue ?
                new ObjectParameter("iConfigKey", iConfigKey) :
                new ObjectParameter("iConfigKey", typeof(int));
    
            var sStepNameParameter = sStepName != null ?
                new ObjectParameter("sStepName", sStepName) :
                new ObjectParameter("sStepName", typeof(string));
    
            var iStepPriorityParameter = iStepPriority.HasValue ?
                new ObjectParameter("iStepPriority", iStepPriority) :
                new ObjectParameter("iStepPriority", typeof(short));
    
            var iDelinquencyDaysFromParameter = iDelinquencyDaysFrom.HasValue ?
                new ObjectParameter("iDelinquencyDaysFrom", iDelinquencyDaysFrom) :
                new ObjectParameter("iDelinquencyDaysFrom", typeof(short));
    
            var iDelinquencyDaysToParameter = iDelinquencyDaysTo.HasValue ?
                new ObjectParameter("iDelinquencyDaysTo", iDelinquencyDaysTo) :
                new ObjectParameter("iDelinquencyDaysTo", typeof(short));
    
            var nBalanceRangeFromParameter = nBalanceRangeFrom.HasValue ?
                new ObjectParameter("nBalanceRangeFrom", nBalanceRangeFrom) :
                new ObjectParameter("nBalanceRangeFrom", typeof(decimal));
    
            var nBalanceRangeToParameter = nBalanceRangeTo.HasValue ?
                new ObjectParameter("nBalanceRangeTo", nBalanceRangeTo) :
                new ObjectParameter("nBalanceRangeTo", typeof(decimal));
    
            var iDaysSinceLastContactParameter = iDaysSinceLastContact.HasValue ?
                new ObjectParameter("iDaysSinceLastContact", iDaysSinceLastContact) :
                new ObjectParameter("iDaysSinceLastContact", typeof(short));
    
            var bProcessWhenNoHomeAddressParameter = bProcessWhenNoHomeAddress.HasValue ?
                new ObjectParameter("bProcessWhenNoHomeAddress", bProcessWhenNoHomeAddress) :
                new ObjectParameter("bProcessWhenNoHomeAddress", typeof(bool));
    
            var bProcessWhenNoHomePhoneParameter = bProcessWhenNoHomePhone.HasValue ?
                new ObjectParameter("bProcessWhenNoHomePhone", bProcessWhenNoHomePhone) :
                new ObjectParameter("bProcessWhenNoHomePhone", typeof(bool));
    
            var bProcessWhenNoCellPhoneParameter = bProcessWhenNoCellPhone.HasValue ?
                new ObjectParameter("bProcessWhenNoCellPhone", bProcessWhenNoCellPhone) :
                new ObjectParameter("bProcessWhenNoCellPhone", typeof(bool));
    
            var bProcessWhenNoWorkPhoneParameter = bProcessWhenNoWorkPhone.HasValue ?
                new ObjectParameter("bProcessWhenNoWorkPhone", bProcessWhenNoWorkPhone) :
                new ObjectParameter("bProcessWhenNoWorkPhone", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SkipTraceStep_Insert", iConfigKeyParameter, sStepNameParameter, iStepPriorityParameter, iDelinquencyDaysFromParameter, iDelinquencyDaysToParameter, nBalanceRangeFromParameter, nBalanceRangeToParameter, iDaysSinceLastContactParameter, bProcessWhenNoHomeAddressParameter, bProcessWhenNoHomePhoneParameter, bProcessWhenNoCellPhoneParameter, bProcessWhenNoWorkPhoneParameter);
        }
    
        public virtual int usp_SkipTraceThread_Insert(Nullable<int> iConfigKey, Nullable<int> iRisReptKey, Nullable<int> iCustomerKey, Nullable<System.DateTime> dDateActive, Nullable<bool> bNoAddress, Nullable<bool> bNoCellPhone, Nullable<bool> bNoHomePhone, Nullable<bool> bNoWorkPhone, Nullable<System.DateTime> dDateLastContact, Nullable<byte> iPassCounter, Nullable<byte> iStepNumber, Nullable<int> iSkipTraceStepKey, Nullable<byte> iVendorNumber, Nullable<int> iSkipTraceVendorKey, string sTraceStatus)
        {
            var iConfigKeyParameter = iConfigKey.HasValue ?
                new ObjectParameter("iConfigKey", iConfigKey) :
                new ObjectParameter("iConfigKey", typeof(int));
    
            var iRisReptKeyParameter = iRisReptKey.HasValue ?
                new ObjectParameter("iRisReptKey", iRisReptKey) :
                new ObjectParameter("iRisReptKey", typeof(int));
    
            var iCustomerKeyParameter = iCustomerKey.HasValue ?
                new ObjectParameter("iCustomerKey", iCustomerKey) :
                new ObjectParameter("iCustomerKey", typeof(int));
    
            var dDateActiveParameter = dDateActive.HasValue ?
                new ObjectParameter("dDateActive", dDateActive) :
                new ObjectParameter("dDateActive", typeof(System.DateTime));
    
            var bNoAddressParameter = bNoAddress.HasValue ?
                new ObjectParameter("bNoAddress", bNoAddress) :
                new ObjectParameter("bNoAddress", typeof(bool));
    
            var bNoCellPhoneParameter = bNoCellPhone.HasValue ?
                new ObjectParameter("bNoCellPhone", bNoCellPhone) :
                new ObjectParameter("bNoCellPhone", typeof(bool));
    
            var bNoHomePhoneParameter = bNoHomePhone.HasValue ?
                new ObjectParameter("bNoHomePhone", bNoHomePhone) :
                new ObjectParameter("bNoHomePhone", typeof(bool));
    
            var bNoWorkPhoneParameter = bNoWorkPhone.HasValue ?
                new ObjectParameter("bNoWorkPhone", bNoWorkPhone) :
                new ObjectParameter("bNoWorkPhone", typeof(bool));
    
            var dDateLastContactParameter = dDateLastContact.HasValue ?
                new ObjectParameter("dDateLastContact", dDateLastContact) :
                new ObjectParameter("dDateLastContact", typeof(System.DateTime));
    
            var iPassCounterParameter = iPassCounter.HasValue ?
                new ObjectParameter("iPassCounter", iPassCounter) :
                new ObjectParameter("iPassCounter", typeof(byte));
    
            var iStepNumberParameter = iStepNumber.HasValue ?
                new ObjectParameter("iStepNumber", iStepNumber) :
                new ObjectParameter("iStepNumber", typeof(byte));
    
            var iSkipTraceStepKeyParameter = iSkipTraceStepKey.HasValue ?
                new ObjectParameter("iSkipTraceStepKey", iSkipTraceStepKey) :
                new ObjectParameter("iSkipTraceStepKey", typeof(int));
    
            var iVendorNumberParameter = iVendorNumber.HasValue ?
                new ObjectParameter("iVendorNumber", iVendorNumber) :
                new ObjectParameter("iVendorNumber", typeof(byte));
    
            var iSkipTraceVendorKeyParameter = iSkipTraceVendorKey.HasValue ?
                new ObjectParameter("iSkipTraceVendorKey", iSkipTraceVendorKey) :
                new ObjectParameter("iSkipTraceVendorKey", typeof(int));
    
            var sTraceStatusParameter = sTraceStatus != null ?
                new ObjectParameter("sTraceStatus", sTraceStatus) :
                new ObjectParameter("sTraceStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SkipTraceThread_Insert", iConfigKeyParameter, iRisReptKeyParameter, iCustomerKeyParameter, dDateActiveParameter, bNoAddressParameter, bNoCellPhoneParameter, bNoHomePhoneParameter, bNoWorkPhoneParameter, dDateLastContactParameter, iPassCounterParameter, iStepNumberParameter, iSkipTraceStepKeyParameter, iVendorNumberParameter, iSkipTraceVendorKeyParameter, sTraceStatusParameter);
        }
    
        public virtual int usp_SkipTraceVendor_Insert(Nullable<int> iConfigKey, string sVendorName, Nullable<short> iVendorPriority, Nullable<bool> bVendorActive, Nullable<bool> bVendorDeleted, Nullable<decimal> nVendorCost, string sVendorLogin, string sVendorPassword, string sCryptoKey, string sToVendorUri, string sFromVendorUri, string sVendorPath)
        {
            var iConfigKeyParameter = iConfigKey.HasValue ?
                new ObjectParameter("iConfigKey", iConfigKey) :
                new ObjectParameter("iConfigKey", typeof(int));
    
            var sVendorNameParameter = sVendorName != null ?
                new ObjectParameter("sVendorName", sVendorName) :
                new ObjectParameter("sVendorName", typeof(string));
    
            var iVendorPriorityParameter = iVendorPriority.HasValue ?
                new ObjectParameter("iVendorPriority", iVendorPriority) :
                new ObjectParameter("iVendorPriority", typeof(short));
    
            var bVendorActiveParameter = bVendorActive.HasValue ?
                new ObjectParameter("bVendorActive", bVendorActive) :
                new ObjectParameter("bVendorActive", typeof(bool));
    
            var bVendorDeletedParameter = bVendorDeleted.HasValue ?
                new ObjectParameter("bVendorDeleted", bVendorDeleted) :
                new ObjectParameter("bVendorDeleted", typeof(bool));
    
            var nVendorCostParameter = nVendorCost.HasValue ?
                new ObjectParameter("nVendorCost", nVendorCost) :
                new ObjectParameter("nVendorCost", typeof(decimal));
    
            var sVendorLoginParameter = sVendorLogin != null ?
                new ObjectParameter("sVendorLogin", sVendorLogin) :
                new ObjectParameter("sVendorLogin", typeof(string));
    
            var sVendorPasswordParameter = sVendorPassword != null ?
                new ObjectParameter("sVendorPassword", sVendorPassword) :
                new ObjectParameter("sVendorPassword", typeof(string));
    
            var sCryptoKeyParameter = sCryptoKey != null ?
                new ObjectParameter("sCryptoKey", sCryptoKey) :
                new ObjectParameter("sCryptoKey", typeof(string));
    
            var sToVendorUriParameter = sToVendorUri != null ?
                new ObjectParameter("sToVendorUri", sToVendorUri) :
                new ObjectParameter("sToVendorUri", typeof(string));
    
            var sFromVendorUriParameter = sFromVendorUri != null ?
                new ObjectParameter("sFromVendorUri", sFromVendorUri) :
                new ObjectParameter("sFromVendorUri", typeof(string));
    
            var sVendorPathParameter = sVendorPath != null ?
                new ObjectParameter("sVendorPath", sVendorPath) :
                new ObjectParameter("sVendorPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SkipTraceVendor_Insert", iConfigKeyParameter, sVendorNameParameter, iVendorPriorityParameter, bVendorActiveParameter, bVendorDeletedParameter, nVendorCostParameter, sVendorLoginParameter, sVendorPasswordParameter, sCryptoKeyParameter, sToVendorUriParameter, sFromVendorUriParameter, sVendorPathParameter);
        }
    
        public virtual ObjectResult<usp_SMSGetMessages_Result> usp_SMSGetMessages(Nullable<System.Guid> lOCKED_GUID)
        {
            var lOCKED_GUIDParameter = lOCKED_GUID.HasValue ?
                new ObjectParameter("LOCKED_GUID", lOCKED_GUID) :
                new ObjectParameter("LOCKED_GUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SMSGetMessages_Result>("usp_SMSGetMessages", lOCKED_GUIDParameter);
        }
    
        public virtual int usp_SMSSaveResponses(Nullable<int> sMS_OUTBOUND_KEY, string rESPONSE, string sENT_USING)
        {
            var sMS_OUTBOUND_KEYParameter = sMS_OUTBOUND_KEY.HasValue ?
                new ObjectParameter("SMS_OUTBOUND_KEY", sMS_OUTBOUND_KEY) :
                new ObjectParameter("SMS_OUTBOUND_KEY", typeof(int));
    
            var rESPONSEParameter = rESPONSE != null ?
                new ObjectParameter("RESPONSE", rESPONSE) :
                new ObjectParameter("RESPONSE", typeof(string));
    
            var sENT_USINGParameter = sENT_USING != null ?
                new ObjectParameter("SENT_USING", sENT_USING) :
                new ObjectParameter("SENT_USING", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SMSSaveResponses", sMS_OUTBOUND_KEYParameter, rESPONSEParameter, sENT_USINGParameter);
        }
    
        public virtual int usp_SMSUpdateFailed(Nullable<int> sMS_OUTBOUND_KEY, string rESPONSE, string sENT_USING, Nullable<bool> sENT)
        {
            var sMS_OUTBOUND_KEYParameter = sMS_OUTBOUND_KEY.HasValue ?
                new ObjectParameter("SMS_OUTBOUND_KEY", sMS_OUTBOUND_KEY) :
                new ObjectParameter("SMS_OUTBOUND_KEY", typeof(int));
    
            var rESPONSEParameter = rESPONSE != null ?
                new ObjectParameter("RESPONSE", rESPONSE) :
                new ObjectParameter("RESPONSE", typeof(string));
    
            var sENT_USINGParameter = sENT_USING != null ?
                new ObjectParameter("SENT_USING", sENT_USING) :
                new ObjectParameter("SENT_USING", typeof(string));
    
            var sENTParameter = sENT.HasValue ?
                new ObjectParameter("SENT", sENT) :
                new ObjectParameter("SENT", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SMSUpdateFailed", sMS_OUTBOUND_KEYParameter, rESPONSEParameter, sENT_USINGParameter, sENTParameter);
        }
    
        public virtual int usp_SMSUpdateStatus(Nullable<int> sMS_OUTBOUND_KEY, string sENT_USING, Nullable<int> status)
        {
            var sMS_OUTBOUND_KEYParameter = sMS_OUTBOUND_KEY.HasValue ?
                new ObjectParameter("SMS_OUTBOUND_KEY", sMS_OUTBOUND_KEY) :
                new ObjectParameter("SMS_OUTBOUND_KEY", typeof(int));
    
            var sENT_USINGParameter = sENT_USING != null ?
                new ObjectParameter("SENT_USING", sENT_USING) :
                new ObjectParameter("SENT_USING", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SMSUpdateStatus", sMS_OUTBOUND_KEYParameter, sENT_USINGParameter, statusParameter);
        }
    
        public virtual int usp_SPaySchedRollover_Insert(Nullable<int> iLoanKey, Nullable<int> iZeroRecLoanKey, Nullable<int> iCustomerKey, Nullable<int> iLoanPaymentKey, Nullable<byte> iNumRollovers)
        {
            var iLoanKeyParameter = iLoanKey.HasValue ?
                new ObjectParameter("iLoanKey", iLoanKey) :
                new ObjectParameter("iLoanKey", typeof(int));
    
            var iZeroRecLoanKeyParameter = iZeroRecLoanKey.HasValue ?
                new ObjectParameter("iZeroRecLoanKey", iZeroRecLoanKey) :
                new ObjectParameter("iZeroRecLoanKey", typeof(int));
    
            var iCustomerKeyParameter = iCustomerKey.HasValue ?
                new ObjectParameter("iCustomerKey", iCustomerKey) :
                new ObjectParameter("iCustomerKey", typeof(int));
    
            var iLoanPaymentKeyParameter = iLoanPaymentKey.HasValue ?
                new ObjectParameter("iLoanPaymentKey", iLoanPaymentKey) :
                new ObjectParameter("iLoanPaymentKey", typeof(int));
    
            var iNumRolloversParameter = iNumRollovers.HasValue ?
                new ObjectParameter("iNumRollovers", iNumRollovers) :
                new ObjectParameter("iNumRollovers", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SPaySchedRollover_Insert", iLoanKeyParameter, iZeroRecLoanKeyParameter, iCustomerKeyParameter, iLoanPaymentKeyParameter, iNumRolloversParameter);
        }
    
        public virtual int usp_SPaySchedRolloverDetail_Insert(Nullable<int> iSPaySchedRolloverKey, Nullable<int> iSchedLoanPaymentKey, Nullable<System.DateTime> dRolloverDate, Nullable<decimal> nOptBuydownAmt, Nullable<byte> iRolloverNum, Nullable<decimal> nLoanAmt, Nullable<decimal> nPrincAmt, Nullable<decimal> nLoanATR, Nullable<System.DateTime> dDueDate)
        {
            var iSPaySchedRolloverKeyParameter = iSPaySchedRolloverKey.HasValue ?
                new ObjectParameter("iSPaySchedRolloverKey", iSPaySchedRolloverKey) :
                new ObjectParameter("iSPaySchedRolloverKey", typeof(int));
    
            var iSchedLoanPaymentKeyParameter = iSchedLoanPaymentKey.HasValue ?
                new ObjectParameter("iSchedLoanPaymentKey", iSchedLoanPaymentKey) :
                new ObjectParameter("iSchedLoanPaymentKey", typeof(int));
    
            var dRolloverDateParameter = dRolloverDate.HasValue ?
                new ObjectParameter("dRolloverDate", dRolloverDate) :
                new ObjectParameter("dRolloverDate", typeof(System.DateTime));
    
            var nOptBuydownAmtParameter = nOptBuydownAmt.HasValue ?
                new ObjectParameter("nOptBuydownAmt", nOptBuydownAmt) :
                new ObjectParameter("nOptBuydownAmt", typeof(decimal));
    
            var iRolloverNumParameter = iRolloverNum.HasValue ?
                new ObjectParameter("iRolloverNum", iRolloverNum) :
                new ObjectParameter("iRolloverNum", typeof(byte));
    
            var nLoanAmtParameter = nLoanAmt.HasValue ?
                new ObjectParameter("nLoanAmt", nLoanAmt) :
                new ObjectParameter("nLoanAmt", typeof(decimal));
    
            var nPrincAmtParameter = nPrincAmt.HasValue ?
                new ObjectParameter("nPrincAmt", nPrincAmt) :
                new ObjectParameter("nPrincAmt", typeof(decimal));
    
            var nLoanATRParameter = nLoanATR.HasValue ?
                new ObjectParameter("nLoanATR", nLoanATR) :
                new ObjectParameter("nLoanATR", typeof(decimal));
    
            var dDueDateParameter = dDueDate.HasValue ?
                new ObjectParameter("dDueDate", dDueDate) :
                new ObjectParameter("dDueDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SPaySchedRolloverDetail_Insert", iSPaySchedRolloverKeyParameter, iSchedLoanPaymentKeyParameter, dRolloverDateParameter, nOptBuydownAmtParameter, iRolloverNumParameter, nLoanAmtParameter, nPrincAmtParameter, nLoanATRParameter, dDueDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SpecialMessage_AzIncrease(Nullable<int> cUSTOMER_KEY)
        {
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SpecialMessage_AzIncrease", cUSTOMER_KEYParameter);
        }
    
        public virtual int usp_SpecialMessage_Delete(Nullable<int> sPECIAL_MESSAGE_KEY)
        {
            var sPECIAL_MESSAGE_KEYParameter = sPECIAL_MESSAGE_KEY.HasValue ?
                new ObjectParameter("SPECIAL_MESSAGE_KEY", sPECIAL_MESSAGE_KEY) :
                new ObjectParameter("SPECIAL_MESSAGE_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SpecialMessage_Delete", sPECIAL_MESSAGE_KEYParameter);
        }
    
        public virtual int usp_SpecialMessage_Insert(string tELLER, Nullable<System.DateTime> sTART_DATE, Nullable<System.DateTime> eND_DATE, string mESSAGE_FILE, string mESSAGE_NAME, string pROCEDURE_NAME)
        {
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var sTART_DATEParameter = sTART_DATE.HasValue ?
                new ObjectParameter("START_DATE", sTART_DATE) :
                new ObjectParameter("START_DATE", typeof(System.DateTime));
    
            var eND_DATEParameter = eND_DATE.HasValue ?
                new ObjectParameter("END_DATE", eND_DATE) :
                new ObjectParameter("END_DATE", typeof(System.DateTime));
    
            var mESSAGE_FILEParameter = mESSAGE_FILE != null ?
                new ObjectParameter("MESSAGE_FILE", mESSAGE_FILE) :
                new ObjectParameter("MESSAGE_FILE", typeof(string));
    
            var mESSAGE_NAMEParameter = mESSAGE_NAME != null ?
                new ObjectParameter("MESSAGE_NAME", mESSAGE_NAME) :
                new ObjectParameter("MESSAGE_NAME", typeof(string));
    
            var pROCEDURE_NAMEParameter = pROCEDURE_NAME != null ?
                new ObjectParameter("PROCEDURE_NAME", pROCEDURE_NAME) :
                new ObjectParameter("PROCEDURE_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SpecialMessage_Insert", tELLERParameter, sTART_DATEParameter, eND_DATEParameter, mESSAGE_FILEParameter, mESSAGE_NAMEParameter, pROCEDURE_NAMEParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMessage_Read_Result> usp_SpecialMessage_Read(Nullable<int> sPECIAL_MESSAGE_KEY)
        {
            var sPECIAL_MESSAGE_KEYParameter = sPECIAL_MESSAGE_KEY.HasValue ?
                new ObjectParameter("SPECIAL_MESSAGE_KEY", sPECIAL_MESSAGE_KEY) :
                new ObjectParameter("SPECIAL_MESSAGE_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMessage_Read_Result>("usp_SpecialMessage_Read", sPECIAL_MESSAGE_KEYParameter);
        }
    
        public virtual int usp_SpecialMessage_Update(string tELLER, Nullable<System.DateTime> sTART_DATE, Nullable<System.DateTime> eND_DATE, string mESSAGE_FILE, string mESSAGE_NAME, string pROCEDURE_NAME, Nullable<int> sPECIAL_MESSAGE_KEY)
        {
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var sTART_DATEParameter = sTART_DATE.HasValue ?
                new ObjectParameter("START_DATE", sTART_DATE) :
                new ObjectParameter("START_DATE", typeof(System.DateTime));
    
            var eND_DATEParameter = eND_DATE.HasValue ?
                new ObjectParameter("END_DATE", eND_DATE) :
                new ObjectParameter("END_DATE", typeof(System.DateTime));
    
            var mESSAGE_FILEParameter = mESSAGE_FILE != null ?
                new ObjectParameter("MESSAGE_FILE", mESSAGE_FILE) :
                new ObjectParameter("MESSAGE_FILE", typeof(string));
    
            var mESSAGE_NAMEParameter = mESSAGE_NAME != null ?
                new ObjectParameter("MESSAGE_NAME", mESSAGE_NAME) :
                new ObjectParameter("MESSAGE_NAME", typeof(string));
    
            var pROCEDURE_NAMEParameter = pROCEDURE_NAME != null ?
                new ObjectParameter("PROCEDURE_NAME", pROCEDURE_NAME) :
                new ObjectParameter("PROCEDURE_NAME", typeof(string));
    
            var sPECIAL_MESSAGE_KEYParameter = sPECIAL_MESSAGE_KEY.HasValue ?
                new ObjectParameter("SPECIAL_MESSAGE_KEY", sPECIAL_MESSAGE_KEY) :
                new ObjectParameter("SPECIAL_MESSAGE_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SpecialMessage_Update", tELLERParameter, sTART_DATEParameter, eND_DATEParameter, mESSAGE_FILEParameter, mESSAGE_NAMEParameter, pROCEDURE_NAMEParameter, sPECIAL_MESSAGE_KEYParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_Bankline_Result> usp_SpecialMsg_Bankline(Nullable<int> customerkey, Nullable<short> location)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("customerkey", customerkey) :
                new ObjectParameter("customerkey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_Bankline_Result>("usp_SpecialMsg_Bankline", customerkeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_CABankline_Result> usp_SpecialMsg_CABankline(Nullable<int> customerkey, Nullable<short> location)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("customerkey", customerkey) :
                new ObjectParameter("customerkey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_CABankline_Result>("usp_SpecialMsg_CABankline", customerkeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_SpecialMsg_CAEasyPayQualification(Nullable<int> customerKey, Nullable<short> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_SpecialMsg_CAEasyPayQualification", customerKeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_CAExpress3600_Result> usp_SpecialMsg_CAExpress3600(Nullable<int> customerKey, Nullable<short> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_CAExpress3600_Result>("usp_SpecialMsg_CAExpress3600", customerKeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_CAInstallmentTitle_Result> usp_SpecialMsg_CAInstallmentTitle(Nullable<int> customerkey, Nullable<short> location)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("customerkey", customerkey) :
                new ObjectParameter("customerkey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_CAInstallmentTitle_Result>("usp_SpecialMsg_CAInstallmentTitle", customerkeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_CanadaVouchers_Result> usp_SpecialMsg_CanadaVouchers(Nullable<int> customerKey, Nullable<int> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_CanadaVouchers_Result>("usp_SpecialMsg_CanadaVouchers", customerKeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SpecialMsg_DebitCardwillExpireSoon(Nullable<int> key, Nullable<short> location)
        {
            var keyParameter = key.HasValue ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SpecialMsg_DebitCardwillExpireSoon", keyParameter, locationParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SpecialMsg_DebtAmnesty(Nullable<int> key, Nullable<short> location)
        {
            var keyParameter = key.HasValue ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SpecialMsg_DebtAmnesty", keyParameter, locationParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_MBCheckCash_Result> usp_SpecialMsg_MBCheckCash(Nullable<int> customerKey, Nullable<short> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_MBCheckCash_Result>("usp_SpecialMsg_MBCheckCash", customerKeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_MilitaryMemberStatusVerification_Result> usp_SpecialMsg_MilitaryMemberStatusVerification(Nullable<int> customerKey, Nullable<short> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_MilitaryMemberStatusVerification_Result>("usp_SpecialMsg_MilitaryMemberStatusVerification", customerKeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SpecialMsg_NetSpendPromo(Nullable<int> customerKey, Nullable<short> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SpecialMsg_NetSpendPromo", customerKeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_NpaPayday_Result> usp_SpecialMsg_NpaPayday(Nullable<int> customerkey, Nullable<short> location, Nullable<bool> ignoreConfig)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("Customerkey", customerkey) :
                new ObjectParameter("Customerkey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            var ignoreConfigParameter = ignoreConfig.HasValue ?
                new ObjectParameter("IgnoreConfig", ignoreConfig) :
                new ObjectParameter("IgnoreConfig", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_NpaPayday_Result>("usp_SpecialMsg_NpaPayday", customerkeyParameter, locationParameter, ignoreConfigParameter);
        }
    
        public virtual ObjectResult<Nullable<short>> usp_SpecialMsg_NVCutRateFromSPayToMPay(Nullable<int> customerKey, Nullable<short> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("customerKey", customerKey) :
                new ObjectParameter("customerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("usp_SpecialMsg_NVCutRateFromSPayToMPay", customerKeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_OregonRebates_Result> usp_SpecialMsg_OregonRebates(Nullable<int> customerKey, Nullable<int> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_OregonRebates_Result>("usp_SpecialMsg_OregonRebates", customerKeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_OverChargeRefund_Result> usp_SpecialMsg_OverChargeRefund(Nullable<int> customerKey, Nullable<short> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_OverChargeRefund_Result>("usp_SpecialMsg_OverChargeRefund", customerKeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<usp_SpecialMsg_PhoneContactPermissionNeeded_Result> usp_SpecialMsg_PhoneContactPermissionNeeded(Nullable<int> customerKey, Nullable<short> location)
        {
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecialMsg_PhoneContactPermissionNeeded_Result>("usp_SpecialMsg_PhoneContactPermissionNeeded", customerKeyParameter, locationParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SpecialMsg_StoreLeadCust(Nullable<int> key, Nullable<short> location)
        {
            var keyParameter = key.HasValue ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SpecialMsg_StoreLeadCust", keyParameter, locationParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_SpecialMsg_TxClassAction(Nullable<int> customerkey, Nullable<short> location)
        {
            var customerkeyParameter = customerkey.HasValue ?
                new ObjectParameter("customerkey", customerkey) :
                new ObjectParameter("customerkey", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_SpecialMsg_TxClassAction", customerkeyParameter, locationParameter);
        }
    
        public virtual int usp_StoreWindows_Insert(string cOMPUTERNAME, Nullable<int> lOCATION, string cITRIXNAME, string rEPORT, string rECEIPT, string aGREEMENT, string dOTMATRIX, Nullable<short> mONEY_ORDERS, Nullable<bool> sHARED_PRINTERS)
        {
            var cOMPUTERNAMEParameter = cOMPUTERNAME != null ?
                new ObjectParameter("COMPUTERNAME", cOMPUTERNAME) :
                new ObjectParameter("COMPUTERNAME", typeof(string));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(int));
    
            var cITRIXNAMEParameter = cITRIXNAME != null ?
                new ObjectParameter("CITRIXNAME", cITRIXNAME) :
                new ObjectParameter("CITRIXNAME", typeof(string));
    
            var rEPORTParameter = rEPORT != null ?
                new ObjectParameter("REPORT", rEPORT) :
                new ObjectParameter("REPORT", typeof(string));
    
            var rECEIPTParameter = rECEIPT != null ?
                new ObjectParameter("RECEIPT", rECEIPT) :
                new ObjectParameter("RECEIPT", typeof(string));
    
            var aGREEMENTParameter = aGREEMENT != null ?
                new ObjectParameter("AGREEMENT", aGREEMENT) :
                new ObjectParameter("AGREEMENT", typeof(string));
    
            var dOTMATRIXParameter = dOTMATRIX != null ?
                new ObjectParameter("DOTMATRIX", dOTMATRIX) :
                new ObjectParameter("DOTMATRIX", typeof(string));
    
            var mONEY_ORDERSParameter = mONEY_ORDERS.HasValue ?
                new ObjectParameter("MONEY_ORDERS", mONEY_ORDERS) :
                new ObjectParameter("MONEY_ORDERS", typeof(short));
    
            var sHARED_PRINTERSParameter = sHARED_PRINTERS.HasValue ?
                new ObjectParameter("SHARED_PRINTERS", sHARED_PRINTERS) :
                new ObjectParameter("SHARED_PRINTERS", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_StoreWindows_Insert", cOMPUTERNAMEParameter, lOCATIONParameter, cITRIXNAMEParameter, rEPORTParameter, rECEIPTParameter, aGREEMENTParameter, dOTMATRIXParameter, mONEY_ORDERSParameter, sHARED_PRINTERSParameter);
        }
    
        public virtual int usp_Top20KPI(Nullable<System.DateTime> startBusinessDate, Nullable<System.DateTime> endBusinessDate)
        {
            var startBusinessDateParameter = startBusinessDate.HasValue ?
                new ObjectParameter("StartBusinessDate", startBusinessDate) :
                new ObjectParameter("StartBusinessDate", typeof(System.DateTime));
    
            var endBusinessDateParameter = endBusinessDate.HasValue ?
                new ObjectParameter("EndBusinessDate", endBusinessDate) :
                new ObjectParameter("EndBusinessDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Top20KPI", startBusinessDateParameter, endBusinessDateParameter);
        }
    
        public virtual int usp_Top20KPI_Manual()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Top20KPI_Manual");
        }
    
        public virtual int usp_TrainingUpdates(Nullable<bool> bIncludeAddCustomers)
        {
            var bIncludeAddCustomersParameter = bIncludeAddCustomers.HasValue ?
                new ObjectParameter("bIncludeAddCustomers", bIncludeAddCustomers) :
                new ObjectParameter("bIncludeAddCustomers", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TrainingUpdates", bIncludeAddCustomersParameter);
        }
    
        public virtual int usp_UpdatePayDates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdatePayDates");
        }
    
        public virtual int usp_UpdateTotalDailyFees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateTotalDailyFees");
        }
    
        public virtual int usp_util_AACreditBureau_GetExport(string sTeller)
        {
            var sTellerParameter = sTeller != null ?
                new ObjectParameter("sTeller", sTeller) :
                new ObjectParameter("sTeller", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_AACreditBureau_GetExport", sTellerParameter);
        }
    
        public virtual int usp_util_AACreditBureau_InsertDeleteTARs(string sTeller)
        {
            var sTellerParameter = sTeller != null ?
                new ObjectParameter("sTeller", sTeller) :
                new ObjectParameter("sTeller", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_AACreditBureau_InsertDeleteTARs", sTellerParameter);
        }
    
        public virtual int usp_util_DirtyData_ExecJob(Nullable<int> jobKey)
        {
            var jobKeyParameter = jobKey.HasValue ?
                new ObjectParameter("jobKey", jobKey) :
                new ObjectParameter("jobKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_DirtyData_ExecJob", jobKeyParameter);
        }
    
        public virtual int usp_util_DirtyData_ExecJobGroup(Nullable<int> groupKey)
        {
            var groupKeyParameter = groupKey.HasValue ?
                new ObjectParameter("groupKey", groupKey) :
                new ObjectParameter("groupKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_DirtyData_ExecJobGroup", groupKeyParameter);
        }
    
        public virtual ObjectResult<usp_util_DirtyDataJob_MPayCabFeesInNonCabLocations_Result> usp_util_DirtyDataJob_MPayCabFeesInNonCabLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_util_DirtyDataJob_MPayCabFeesInNonCabLocations_Result>("usp_util_DirtyDataJob_MPayCabFeesInNonCabLocations");
        }
    
        public virtual ObjectResult<usp_util_DirtyDataJob_MPayPastDueNotInCollections_Result> usp_util_DirtyDataJob_MPayPastDueNotInCollections()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_util_DirtyDataJob_MPayPastDueNotInCollections_Result>("usp_util_DirtyDataJob_MPayPastDueNotInCollections");
        }
    
        public virtual ObjectResult<usp_util_DirtyDataJob_OEndBucketsOutOfSync_Result> usp_util_DirtyDataJob_OEndBucketsOutOfSync()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_util_DirtyDataJob_OEndBucketsOutOfSync_Result>("usp_util_DirtyDataJob_OEndBucketsOutOfSync");
        }
    
        public virtual ObjectResult<usp_util_DirtyDataJob_OEndLoanFractionOfACent_Result> usp_util_DirtyDataJob_OEndLoanFractionOfACent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_util_DirtyDataJob_OEndLoanFractionOfACent_Result>("usp_util_DirtyDataJob_OEndLoanFractionOfACent");
        }
    
        public virtual ObjectResult<usp_util_DirtyDataJob_OEndLoanPaymentFractionOfACent_Result> usp_util_DirtyDataJob_OEndLoanPaymentFractionOfACent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_util_DirtyDataJob_OEndLoanPaymentFractionOfACent_Result>("usp_util_DirtyDataJob_OEndLoanPaymentFractionOfACent");
        }
    
        public virtual ObjectResult<usp_util_DirtyDataJob_OEndPastDueNotInCollections_Result> usp_util_DirtyDataJob_OEndPastDueNotInCollections()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_util_DirtyDataJob_OEndPastDueNotInCollections_Result>("usp_util_DirtyDataJob_OEndPastDueNotInCollections");
        }
    
        public virtual ObjectResult<usp_util_DirtyDataJob_OEndStatementFractionOfACent_Result> usp_util_DirtyDataJob_OEndStatementFractionOfACent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_util_DirtyDataJob_OEndStatementFractionOfACent_Result>("usp_util_DirtyDataJob_OEndStatementFractionOfACent");
        }
    
        public virtual ObjectResult<usp_util_DirtyDataJob_OEndStatementYesterday_Result> usp_util_DirtyDataJob_OEndStatementYesterday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_util_DirtyDataJob_OEndStatementYesterday_Result>("usp_util_DirtyDataJob_OEndStatementYesterday");
        }
    
        public virtual int usp_util_EODCashInStore(Nullable<System.DateTime> forDate, Nullable<bool> autoExport)
        {
            var forDateParameter = forDate.HasValue ?
                new ObjectParameter("ForDate", forDate) :
                new ObjectParameter("ForDate", typeof(System.DateTime));
    
            var autoExportParameter = autoExport.HasValue ?
                new ObjectParameter("AutoExport", autoExport) :
                new ObjectParameter("AutoExport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_EODCashInStore", forDateParameter, autoExportParameter);
        }
    
        public virtual int usp_util_GetCreateCommand(string objname)
        {
            var objnameParameter = objname != null ?
                new ObjectParameter("objname", objname) :
                new ObjectParameter("objname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_GetCreateCommand", objnameParameter);
        }
    
        public virtual int usp_util_GetFieldNames(string sTable, Nullable<byte> sortOrder)
        {
            var sTableParameter = sTable != null ?
                new ObjectParameter("sTable", sTable) :
                new ObjectParameter("sTable", typeof(string));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_GetFieldNames", sTableParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<usp_util_GetReceivablesForAccountingAuditSpreadsheet_Result> usp_util_GetReceivablesForAccountingAuditSpreadsheet(string loanKeys)
        {
            var loanKeysParameter = loanKeys != null ?
                new ObjectParameter("loanKeys", loanKeys) :
                new ObjectParameter("loanKeys", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_util_GetReceivablesForAccountingAuditSpreadsheet_Result>("usp_util_GetReceivablesForAccountingAuditSpreadsheet", loanKeysParameter);
        }
    
        public virtual int usp_util_IINRangeLoad(string sXmlFilePath)
        {
            var sXmlFilePathParameter = sXmlFilePath != null ?
                new ObjectParameter("sXmlFilePath", sXmlFilePath) :
                new ObjectParameter("sXmlFilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_IINRangeLoad", sXmlFilePathParameter);
        }
    
        public virtual int usp_util_ListFragmentedTables(Nullable<decimal> maxfrag)
        {
            var maxfragParameter = maxfrag.HasValue ?
                new ObjectParameter("maxfrag", maxfrag) :
                new ObjectParameter("maxfrag", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_ListFragmentedTables", maxfragParameter);
        }
    
        public virtual int usp_util_MPayLoanInSyncAdj_Rows()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_MPayLoanInSyncAdj_Rows");
        }
    
        public virtual int usp_util_RebuildFragmentedIndexes(Nullable<decimal> maxfrag)
        {
            var maxfragParameter = maxfrag.HasValue ?
                new ObjectParameter("maxfrag", maxfrag) :
                new ObjectParameter("maxfrag", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_RebuildFragmentedIndexes", maxfragParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_util_RecalcAllBalances()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_util_RecalcAllBalances");
        }
    
        public virtual int usp_util_RecreateIndexes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_RecreateIndexes");
        }
    
        public virtual int usp_util_SCIL_Reporting(Nullable<System.DateTime> forDate)
        {
            var forDateParameter = forDate.HasValue ?
                new ObjectParameter("ForDate", forDate) :
                new ObjectParameter("ForDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_SCIL_Reporting", forDateParameter);
        }
    
        public virtual int usp_util_SearchInitGL(Nullable<int> searchGLAcct)
        {
            var searchGLAcctParameter = searchGLAcct.HasValue ?
                new ObjectParameter("searchGLAcct", searchGLAcct) :
                new ObjectParameter("searchGLAcct", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_util_SearchInitGL", searchGLAcctParameter);
        }
    
        public virtual ObjectResult<usp_util_SpaceUsed_Result> usp_util_SpaceUsed()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_util_SpaceUsed_Result>("usp_util_SpaceUsed");
        }
    
        public virtual ObjectResult<string> usp_util_UtilRecalcLogPurge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_util_UtilRecalcLogPurge");
        }
    
        public virtual int usp_VaultCount_Insert_OBSOLETE(Nullable<int> tRANS_DETAIL_KEY, string tELLER, Nullable<short> lOCATION, Nullable<byte> sTART_OF_DAY, Nullable<System.DateTime> bUSINESS_DATE, string oS_REASON, string oS_CATEGORY, Nullable<int> eNTERED_PARSE_CASH_KEY, Nullable<int> cALC_PARSE_CASH_KEY, Nullable<decimal> cASHCHK_AMT, Nullable<short> cASHCHK_CNT, Nullable<decimal> cOLLCHK_AMT, Nullable<short> cOLLCHK_CNT, Nullable<decimal> cCARD_AMT, Nullable<short> cCARD_CNT, Nullable<decimal> sPAY_PAYDAY_CHECKS_AMT, Nullable<short> sPAY_PAYDAY_CHECKS_CNT, Nullable<decimal> sPAY_PAYDAY_DEBIT_CARDS_AMT, Nullable<short> sPAY_PAYDAY_DEBIT_CARDS_CNT, Nullable<decimal> mPAY_PAYDAY_AMT, Nullable<short> mPAY_PAYDAY_CNT, Nullable<decimal> oEND_PAYDAY_AMT, Nullable<short> oEND_PAYDAY_CNT, Nullable<decimal> sPAY_TITLE_AMT, Nullable<short> sPAY_TITLE_CNT, Nullable<decimal> mPAY_TITLE_AMT, Nullable<short> mPAY_TITLE_CNT, Nullable<decimal> oEND_TITLE_AMT, Nullable<short> oEND_TITLE_CNT, Nullable<decimal> sPAY_TITLE_2ND_AMT, Nullable<short> sPAY_TITLE_2ND_CNT, Nullable<decimal> mPAY_TITLE_2ND_AMT, Nullable<short> mPAY_TITLE_2ND_CNT, Nullable<decimal> oEND_TITLE_2ND_AMT, Nullable<short> oEND_TITLE_2ND_CNT, Nullable<decimal> sPAY_SIG_AMT, Nullable<short> sPAY_SIG_CNT, Nullable<decimal> mPAY_SIG_AMT, Nullable<short> mPAY_SIG_CNT, Nullable<decimal> oEND_SIG_AMT, Nullable<short> oEND_SIG_CNT, Nullable<short> bAG_MIDDAY_CNT, Nullable<short> bAG_MIDDAY_CHK_CNT, Nullable<decimal> bAG_MIDDAY_AMT, Nullable<short> bAG_EODAY_CNT, Nullable<short> bAG_EODAY_CHK_CNT, Nullable<decimal> bAG_EODAY_AMT, Nullable<short> gOLD_DAILY_BAGS_CNT, Nullable<decimal> gOLD_DAILY_BAGS_AMT)
        {
            var tRANS_DETAIL_KEYParameter = tRANS_DETAIL_KEY.HasValue ?
                new ObjectParameter("TRANS_DETAIL_KEY", tRANS_DETAIL_KEY) :
                new ObjectParameter("TRANS_DETAIL_KEY", typeof(int));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var sTART_OF_DAYParameter = sTART_OF_DAY.HasValue ?
                new ObjectParameter("START_OF_DAY", sTART_OF_DAY) :
                new ObjectParameter("START_OF_DAY", typeof(byte));
    
            var bUSINESS_DATEParameter = bUSINESS_DATE.HasValue ?
                new ObjectParameter("BUSINESS_DATE", bUSINESS_DATE) :
                new ObjectParameter("BUSINESS_DATE", typeof(System.DateTime));
    
            var oS_REASONParameter = oS_REASON != null ?
                new ObjectParameter("OS_REASON", oS_REASON) :
                new ObjectParameter("OS_REASON", typeof(string));
    
            var oS_CATEGORYParameter = oS_CATEGORY != null ?
                new ObjectParameter("OS_CATEGORY", oS_CATEGORY) :
                new ObjectParameter("OS_CATEGORY", typeof(string));
    
            var eNTERED_PARSE_CASH_KEYParameter = eNTERED_PARSE_CASH_KEY.HasValue ?
                new ObjectParameter("ENTERED_PARSE_CASH_KEY", eNTERED_PARSE_CASH_KEY) :
                new ObjectParameter("ENTERED_PARSE_CASH_KEY", typeof(int));
    
            var cALC_PARSE_CASH_KEYParameter = cALC_PARSE_CASH_KEY.HasValue ?
                new ObjectParameter("CALC_PARSE_CASH_KEY", cALC_PARSE_CASH_KEY) :
                new ObjectParameter("CALC_PARSE_CASH_KEY", typeof(int));
    
            var cASHCHK_AMTParameter = cASHCHK_AMT.HasValue ?
                new ObjectParameter("CASHCHK_AMT", cASHCHK_AMT) :
                new ObjectParameter("CASHCHK_AMT", typeof(decimal));
    
            var cASHCHK_CNTParameter = cASHCHK_CNT.HasValue ?
                new ObjectParameter("CASHCHK_CNT", cASHCHK_CNT) :
                new ObjectParameter("CASHCHK_CNT", typeof(short));
    
            var cOLLCHK_AMTParameter = cOLLCHK_AMT.HasValue ?
                new ObjectParameter("COLLCHK_AMT", cOLLCHK_AMT) :
                new ObjectParameter("COLLCHK_AMT", typeof(decimal));
    
            var cOLLCHK_CNTParameter = cOLLCHK_CNT.HasValue ?
                new ObjectParameter("COLLCHK_CNT", cOLLCHK_CNT) :
                new ObjectParameter("COLLCHK_CNT", typeof(short));
    
            var cCARD_AMTParameter = cCARD_AMT.HasValue ?
                new ObjectParameter("CCARD_AMT", cCARD_AMT) :
                new ObjectParameter("CCARD_AMT", typeof(decimal));
    
            var cCARD_CNTParameter = cCARD_CNT.HasValue ?
                new ObjectParameter("CCARD_CNT", cCARD_CNT) :
                new ObjectParameter("CCARD_CNT", typeof(short));
    
            var sPAY_PAYDAY_CHECKS_AMTParameter = sPAY_PAYDAY_CHECKS_AMT.HasValue ?
                new ObjectParameter("SPAY_PAYDAY_CHECKS_AMT", sPAY_PAYDAY_CHECKS_AMT) :
                new ObjectParameter("SPAY_PAYDAY_CHECKS_AMT", typeof(decimal));
    
            var sPAY_PAYDAY_CHECKS_CNTParameter = sPAY_PAYDAY_CHECKS_CNT.HasValue ?
                new ObjectParameter("SPAY_PAYDAY_CHECKS_CNT", sPAY_PAYDAY_CHECKS_CNT) :
                new ObjectParameter("SPAY_PAYDAY_CHECKS_CNT", typeof(short));
    
            var sPAY_PAYDAY_DEBIT_CARDS_AMTParameter = sPAY_PAYDAY_DEBIT_CARDS_AMT.HasValue ?
                new ObjectParameter("SPAY_PAYDAY_DEBIT_CARDS_AMT", sPAY_PAYDAY_DEBIT_CARDS_AMT) :
                new ObjectParameter("SPAY_PAYDAY_DEBIT_CARDS_AMT", typeof(decimal));
    
            var sPAY_PAYDAY_DEBIT_CARDS_CNTParameter = sPAY_PAYDAY_DEBIT_CARDS_CNT.HasValue ?
                new ObjectParameter("SPAY_PAYDAY_DEBIT_CARDS_CNT", sPAY_PAYDAY_DEBIT_CARDS_CNT) :
                new ObjectParameter("SPAY_PAYDAY_DEBIT_CARDS_CNT", typeof(short));
    
            var mPAY_PAYDAY_AMTParameter = mPAY_PAYDAY_AMT.HasValue ?
                new ObjectParameter("MPAY_PAYDAY_AMT", mPAY_PAYDAY_AMT) :
                new ObjectParameter("MPAY_PAYDAY_AMT", typeof(decimal));
    
            var mPAY_PAYDAY_CNTParameter = mPAY_PAYDAY_CNT.HasValue ?
                new ObjectParameter("MPAY_PAYDAY_CNT", mPAY_PAYDAY_CNT) :
                new ObjectParameter("MPAY_PAYDAY_CNT", typeof(short));
    
            var oEND_PAYDAY_AMTParameter = oEND_PAYDAY_AMT.HasValue ?
                new ObjectParameter("OEND_PAYDAY_AMT", oEND_PAYDAY_AMT) :
                new ObjectParameter("OEND_PAYDAY_AMT", typeof(decimal));
    
            var oEND_PAYDAY_CNTParameter = oEND_PAYDAY_CNT.HasValue ?
                new ObjectParameter("OEND_PAYDAY_CNT", oEND_PAYDAY_CNT) :
                new ObjectParameter("OEND_PAYDAY_CNT", typeof(short));
    
            var sPAY_TITLE_AMTParameter = sPAY_TITLE_AMT.HasValue ?
                new ObjectParameter("SPAY_TITLE_AMT", sPAY_TITLE_AMT) :
                new ObjectParameter("SPAY_TITLE_AMT", typeof(decimal));
    
            var sPAY_TITLE_CNTParameter = sPAY_TITLE_CNT.HasValue ?
                new ObjectParameter("SPAY_TITLE_CNT", sPAY_TITLE_CNT) :
                new ObjectParameter("SPAY_TITLE_CNT", typeof(short));
    
            var mPAY_TITLE_AMTParameter = mPAY_TITLE_AMT.HasValue ?
                new ObjectParameter("MPAY_TITLE_AMT", mPAY_TITLE_AMT) :
                new ObjectParameter("MPAY_TITLE_AMT", typeof(decimal));
    
            var mPAY_TITLE_CNTParameter = mPAY_TITLE_CNT.HasValue ?
                new ObjectParameter("MPAY_TITLE_CNT", mPAY_TITLE_CNT) :
                new ObjectParameter("MPAY_TITLE_CNT", typeof(short));
    
            var oEND_TITLE_AMTParameter = oEND_TITLE_AMT.HasValue ?
                new ObjectParameter("OEND_TITLE_AMT", oEND_TITLE_AMT) :
                new ObjectParameter("OEND_TITLE_AMT", typeof(decimal));
    
            var oEND_TITLE_CNTParameter = oEND_TITLE_CNT.HasValue ?
                new ObjectParameter("OEND_TITLE_CNT", oEND_TITLE_CNT) :
                new ObjectParameter("OEND_TITLE_CNT", typeof(short));
    
            var sPAY_TITLE_2ND_AMTParameter = sPAY_TITLE_2ND_AMT.HasValue ?
                new ObjectParameter("SPAY_TITLE_2ND_AMT", sPAY_TITLE_2ND_AMT) :
                new ObjectParameter("SPAY_TITLE_2ND_AMT", typeof(decimal));
    
            var sPAY_TITLE_2ND_CNTParameter = sPAY_TITLE_2ND_CNT.HasValue ?
                new ObjectParameter("SPAY_TITLE_2ND_CNT", sPAY_TITLE_2ND_CNT) :
                new ObjectParameter("SPAY_TITLE_2ND_CNT", typeof(short));
    
            var mPAY_TITLE_2ND_AMTParameter = mPAY_TITLE_2ND_AMT.HasValue ?
                new ObjectParameter("MPAY_TITLE_2ND_AMT", mPAY_TITLE_2ND_AMT) :
                new ObjectParameter("MPAY_TITLE_2ND_AMT", typeof(decimal));
    
            var mPAY_TITLE_2ND_CNTParameter = mPAY_TITLE_2ND_CNT.HasValue ?
                new ObjectParameter("MPAY_TITLE_2ND_CNT", mPAY_TITLE_2ND_CNT) :
                new ObjectParameter("MPAY_TITLE_2ND_CNT", typeof(short));
    
            var oEND_TITLE_2ND_AMTParameter = oEND_TITLE_2ND_AMT.HasValue ?
                new ObjectParameter("OEND_TITLE_2ND_AMT", oEND_TITLE_2ND_AMT) :
                new ObjectParameter("OEND_TITLE_2ND_AMT", typeof(decimal));
    
            var oEND_TITLE_2ND_CNTParameter = oEND_TITLE_2ND_CNT.HasValue ?
                new ObjectParameter("OEND_TITLE_2ND_CNT", oEND_TITLE_2ND_CNT) :
                new ObjectParameter("OEND_TITLE_2ND_CNT", typeof(short));
    
            var sPAY_SIG_AMTParameter = sPAY_SIG_AMT.HasValue ?
                new ObjectParameter("SPAY_SIG_AMT", sPAY_SIG_AMT) :
                new ObjectParameter("SPAY_SIG_AMT", typeof(decimal));
    
            var sPAY_SIG_CNTParameter = sPAY_SIG_CNT.HasValue ?
                new ObjectParameter("SPAY_SIG_CNT", sPAY_SIG_CNT) :
                new ObjectParameter("SPAY_SIG_CNT", typeof(short));
    
            var mPAY_SIG_AMTParameter = mPAY_SIG_AMT.HasValue ?
                new ObjectParameter("MPAY_SIG_AMT", mPAY_SIG_AMT) :
                new ObjectParameter("MPAY_SIG_AMT", typeof(decimal));
    
            var mPAY_SIG_CNTParameter = mPAY_SIG_CNT.HasValue ?
                new ObjectParameter("MPAY_SIG_CNT", mPAY_SIG_CNT) :
                new ObjectParameter("MPAY_SIG_CNT", typeof(short));
    
            var oEND_SIG_AMTParameter = oEND_SIG_AMT.HasValue ?
                new ObjectParameter("OEND_SIG_AMT", oEND_SIG_AMT) :
                new ObjectParameter("OEND_SIG_AMT", typeof(decimal));
    
            var oEND_SIG_CNTParameter = oEND_SIG_CNT.HasValue ?
                new ObjectParameter("OEND_SIG_CNT", oEND_SIG_CNT) :
                new ObjectParameter("OEND_SIG_CNT", typeof(short));
    
            var bAG_MIDDAY_CNTParameter = bAG_MIDDAY_CNT.HasValue ?
                new ObjectParameter("BAG_MIDDAY_CNT", bAG_MIDDAY_CNT) :
                new ObjectParameter("BAG_MIDDAY_CNT", typeof(short));
    
            var bAG_MIDDAY_CHK_CNTParameter = bAG_MIDDAY_CHK_CNT.HasValue ?
                new ObjectParameter("BAG_MIDDAY_CHK_CNT", bAG_MIDDAY_CHK_CNT) :
                new ObjectParameter("BAG_MIDDAY_CHK_CNT", typeof(short));
    
            var bAG_MIDDAY_AMTParameter = bAG_MIDDAY_AMT.HasValue ?
                new ObjectParameter("BAG_MIDDAY_AMT", bAG_MIDDAY_AMT) :
                new ObjectParameter("BAG_MIDDAY_AMT", typeof(decimal));
    
            var bAG_EODAY_CNTParameter = bAG_EODAY_CNT.HasValue ?
                new ObjectParameter("BAG_EODAY_CNT", bAG_EODAY_CNT) :
                new ObjectParameter("BAG_EODAY_CNT", typeof(short));
    
            var bAG_EODAY_CHK_CNTParameter = bAG_EODAY_CHK_CNT.HasValue ?
                new ObjectParameter("BAG_EODAY_CHK_CNT", bAG_EODAY_CHK_CNT) :
                new ObjectParameter("BAG_EODAY_CHK_CNT", typeof(short));
    
            var bAG_EODAY_AMTParameter = bAG_EODAY_AMT.HasValue ?
                new ObjectParameter("BAG_EODAY_AMT", bAG_EODAY_AMT) :
                new ObjectParameter("BAG_EODAY_AMT", typeof(decimal));
    
            var gOLD_DAILY_BAGS_CNTParameter = gOLD_DAILY_BAGS_CNT.HasValue ?
                new ObjectParameter("GOLD_DAILY_BAGS_CNT", gOLD_DAILY_BAGS_CNT) :
                new ObjectParameter("GOLD_DAILY_BAGS_CNT", typeof(short));
    
            var gOLD_DAILY_BAGS_AMTParameter = gOLD_DAILY_BAGS_AMT.HasValue ?
                new ObjectParameter("GOLD_DAILY_BAGS_AMT", gOLD_DAILY_BAGS_AMT) :
                new ObjectParameter("GOLD_DAILY_BAGS_AMT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VaultCount_Insert_OBSOLETE", tRANS_DETAIL_KEYParameter, tELLERParameter, lOCATIONParameter, sTART_OF_DAYParameter, bUSINESS_DATEParameter, oS_REASONParameter, oS_CATEGORYParameter, eNTERED_PARSE_CASH_KEYParameter, cALC_PARSE_CASH_KEYParameter, cASHCHK_AMTParameter, cASHCHK_CNTParameter, cOLLCHK_AMTParameter, cOLLCHK_CNTParameter, cCARD_AMTParameter, cCARD_CNTParameter, sPAY_PAYDAY_CHECKS_AMTParameter, sPAY_PAYDAY_CHECKS_CNTParameter, sPAY_PAYDAY_DEBIT_CARDS_AMTParameter, sPAY_PAYDAY_DEBIT_CARDS_CNTParameter, mPAY_PAYDAY_AMTParameter, mPAY_PAYDAY_CNTParameter, oEND_PAYDAY_AMTParameter, oEND_PAYDAY_CNTParameter, sPAY_TITLE_AMTParameter, sPAY_TITLE_CNTParameter, mPAY_TITLE_AMTParameter, mPAY_TITLE_CNTParameter, oEND_TITLE_AMTParameter, oEND_TITLE_CNTParameter, sPAY_TITLE_2ND_AMTParameter, sPAY_TITLE_2ND_CNTParameter, mPAY_TITLE_2ND_AMTParameter, mPAY_TITLE_2ND_CNTParameter, oEND_TITLE_2ND_AMTParameter, oEND_TITLE_2ND_CNTParameter, sPAY_SIG_AMTParameter, sPAY_SIG_CNTParameter, mPAY_SIG_AMTParameter, mPAY_SIG_CNTParameter, oEND_SIG_AMTParameter, oEND_SIG_CNTParameter, bAG_MIDDAY_CNTParameter, bAG_MIDDAY_CHK_CNTParameter, bAG_MIDDAY_AMTParameter, bAG_EODAY_CNTParameter, bAG_EODAY_CHK_CNTParameter, bAG_EODAY_AMTParameter, gOLD_DAILY_BAGS_CNTParameter, gOLD_DAILY_BAGS_AMTParameter);
        }
    
        public virtual int usp_VaultCountService_Insert_OBSOLETE(Nullable<int> vAULT_COUNT_KEY, Nullable<int> sERVICE_DETAIL_KEY, Nullable<short> sERVICE_CNT, Nullable<short> sERVICE_CALC)
        {
            var vAULT_COUNT_KEYParameter = vAULT_COUNT_KEY.HasValue ?
                new ObjectParameter("VAULT_COUNT_KEY", vAULT_COUNT_KEY) :
                new ObjectParameter("VAULT_COUNT_KEY", typeof(int));
    
            var sERVICE_DETAIL_KEYParameter = sERVICE_DETAIL_KEY.HasValue ?
                new ObjectParameter("SERVICE_DETAIL_KEY", sERVICE_DETAIL_KEY) :
                new ObjectParameter("SERVICE_DETAIL_KEY", typeof(int));
    
            var sERVICE_CNTParameter = sERVICE_CNT.HasValue ?
                new ObjectParameter("SERVICE_CNT", sERVICE_CNT) :
                new ObjectParameter("SERVICE_CNT", typeof(short));
    
            var sERVICE_CALCParameter = sERVICE_CALC.HasValue ?
                new ObjectParameter("SERVICE_CALC", sERVICE_CALC) :
                new ObjectParameter("SERVICE_CALC", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VaultCountService_Insert_OBSOLETE", vAULT_COUNT_KEYParameter, sERVICE_DETAIL_KEYParameter, sERVICE_CNTParameter, sERVICE_CALCParameter);
        }
    
        public virtual int usp_VaultMaster_Insert(Nullable<short> lOCATION, Nullable<decimal> vAULT_100, Nullable<decimal> vAULT_50, Nullable<decimal> vAULT_20, Nullable<decimal> vAULT_10, Nullable<decimal> vAULT_05, Nullable<decimal> vAULT_01, Nullable<decimal> vAULT_HLF, Nullable<decimal> vAULT_QTR, Nullable<decimal> vAULT_DIME, Nullable<decimal> vAULT_NIC, Nullable<decimal> vAULT_PEN, Nullable<decimal> vAULT_MISC, Nullable<decimal> vAULT_CASHCHK_AMT, Nullable<short> vAULT_CASHCHK_CNT, Nullable<decimal> vAULT_SPAY_PAYDAY_CHECKS_AMT, Nullable<short> vAULT_SPAY_PAYDAY_CHECKS_CNT, Nullable<decimal> vAULT_SPAY_PAYDAY_DEBIT_CARDS_AMT, Nullable<short> vAULT_SPAY_PAYDAY_DEBIT_CARDS_CNT, Nullable<decimal> vAULT_MPAY_PAYDAY_AMT, Nullable<int> vAULT_MPAY_PAYDAY_CNT, Nullable<decimal> vAULT_OEND_PAYDAY_AMT, Nullable<int> vAULT_OEND_PAYDAY_CNT, Nullable<decimal> vAULT_SPAY_TITLE_AMT, Nullable<int> vAULT_SPAY_TITLE_CNT, Nullable<decimal> vAULT_MPAY_TITLE_AMT, Nullable<int> vAULT_MPAY_TITLE_CNT, Nullable<decimal> vAULT_OEND_TITLE_AMT, Nullable<int> vAULT_OEND_TITLE_CNT, Nullable<decimal> vAULT_SPAY_TITLE_2ND_AMT, Nullable<int> vAULT_SPAY_TITLE_2ND_CNT, Nullable<decimal> vAULT_MPAY_TITLE_2ND_AMT, Nullable<int> vAULT_MPAY_TITLE_2ND_CNT, Nullable<decimal> vAULT_OEND_TITLE_2ND_AMT, Nullable<int> vAULT_OEND_TITLE_2ND_CNT, Nullable<decimal> vAULT_SPAY_SIG_AMT, Nullable<int> vAULT_SPAY_SIG_CNT, Nullable<decimal> vAULT_MPAY_SIG_AMT, Nullable<int> vAULT_MPAY_SIG_CNT, Nullable<decimal> vAULT_OEND_SIG_AMT, Nullable<int> vAULT_OEND_SIG_CNT, Nullable<int> vAULT_BAG_MIDDAY_CNT, Nullable<int> vAULT_BAG_MIDDAY_CHK_CNT, Nullable<decimal> vAULT_BAG_MIDDAY_AMT, Nullable<int> vAULT_BAG_EODAY_CNT, Nullable<int> vAULT_BAG_EODAY_CHK_CNT, Nullable<decimal> vAULT_BAG_EODAY_AMT, Nullable<int> vAULT_GOLD_DAILY_BAGS_CNT, Nullable<decimal> vAULT_GOLD_DAILY_BAGS_AMT, Nullable<decimal> vAULT_2P, Nullable<decimal> vAULT_20P, Nullable<decimal> vAULT_02)
        {
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(short));
    
            var vAULT_100Parameter = vAULT_100.HasValue ?
                new ObjectParameter("VAULT_100", vAULT_100) :
                new ObjectParameter("VAULT_100", typeof(decimal));
    
            var vAULT_50Parameter = vAULT_50.HasValue ?
                new ObjectParameter("VAULT_50", vAULT_50) :
                new ObjectParameter("VAULT_50", typeof(decimal));
    
            var vAULT_20Parameter = vAULT_20.HasValue ?
                new ObjectParameter("VAULT_20", vAULT_20) :
                new ObjectParameter("VAULT_20", typeof(decimal));
    
            var vAULT_10Parameter = vAULT_10.HasValue ?
                new ObjectParameter("VAULT_10", vAULT_10) :
                new ObjectParameter("VAULT_10", typeof(decimal));
    
            var vAULT_05Parameter = vAULT_05.HasValue ?
                new ObjectParameter("VAULT_05", vAULT_05) :
                new ObjectParameter("VAULT_05", typeof(decimal));
    
            var vAULT_01Parameter = vAULT_01.HasValue ?
                new ObjectParameter("VAULT_01", vAULT_01) :
                new ObjectParameter("VAULT_01", typeof(decimal));
    
            var vAULT_HLFParameter = vAULT_HLF.HasValue ?
                new ObjectParameter("VAULT_HLF", vAULT_HLF) :
                new ObjectParameter("VAULT_HLF", typeof(decimal));
    
            var vAULT_QTRParameter = vAULT_QTR.HasValue ?
                new ObjectParameter("VAULT_QTR", vAULT_QTR) :
                new ObjectParameter("VAULT_QTR", typeof(decimal));
    
            var vAULT_DIMEParameter = vAULT_DIME.HasValue ?
                new ObjectParameter("VAULT_DIME", vAULT_DIME) :
                new ObjectParameter("VAULT_DIME", typeof(decimal));
    
            var vAULT_NICParameter = vAULT_NIC.HasValue ?
                new ObjectParameter("VAULT_NIC", vAULT_NIC) :
                new ObjectParameter("VAULT_NIC", typeof(decimal));
    
            var vAULT_PENParameter = vAULT_PEN.HasValue ?
                new ObjectParameter("VAULT_PEN", vAULT_PEN) :
                new ObjectParameter("VAULT_PEN", typeof(decimal));
    
            var vAULT_MISCParameter = vAULT_MISC.HasValue ?
                new ObjectParameter("VAULT_MISC", vAULT_MISC) :
                new ObjectParameter("VAULT_MISC", typeof(decimal));
    
            var vAULT_CASHCHK_AMTParameter = vAULT_CASHCHK_AMT.HasValue ?
                new ObjectParameter("VAULT_CASHCHK_AMT", vAULT_CASHCHK_AMT) :
                new ObjectParameter("VAULT_CASHCHK_AMT", typeof(decimal));
    
            var vAULT_CASHCHK_CNTParameter = vAULT_CASHCHK_CNT.HasValue ?
                new ObjectParameter("VAULT_CASHCHK_CNT", vAULT_CASHCHK_CNT) :
                new ObjectParameter("VAULT_CASHCHK_CNT", typeof(short));
    
            var vAULT_SPAY_PAYDAY_CHECKS_AMTParameter = vAULT_SPAY_PAYDAY_CHECKS_AMT.HasValue ?
                new ObjectParameter("VAULT_SPAY_PAYDAY_CHECKS_AMT", vAULT_SPAY_PAYDAY_CHECKS_AMT) :
                new ObjectParameter("VAULT_SPAY_PAYDAY_CHECKS_AMT", typeof(decimal));
    
            var vAULT_SPAY_PAYDAY_CHECKS_CNTParameter = vAULT_SPAY_PAYDAY_CHECKS_CNT.HasValue ?
                new ObjectParameter("VAULT_SPAY_PAYDAY_CHECKS_CNT", vAULT_SPAY_PAYDAY_CHECKS_CNT) :
                new ObjectParameter("VAULT_SPAY_PAYDAY_CHECKS_CNT", typeof(short));
    
            var vAULT_SPAY_PAYDAY_DEBIT_CARDS_AMTParameter = vAULT_SPAY_PAYDAY_DEBIT_CARDS_AMT.HasValue ?
                new ObjectParameter("VAULT_SPAY_PAYDAY_DEBIT_CARDS_AMT", vAULT_SPAY_PAYDAY_DEBIT_CARDS_AMT) :
                new ObjectParameter("VAULT_SPAY_PAYDAY_DEBIT_CARDS_AMT", typeof(decimal));
    
            var vAULT_SPAY_PAYDAY_DEBIT_CARDS_CNTParameter = vAULT_SPAY_PAYDAY_DEBIT_CARDS_CNT.HasValue ?
                new ObjectParameter("VAULT_SPAY_PAYDAY_DEBIT_CARDS_CNT", vAULT_SPAY_PAYDAY_DEBIT_CARDS_CNT) :
                new ObjectParameter("VAULT_SPAY_PAYDAY_DEBIT_CARDS_CNT", typeof(short));
    
            var vAULT_MPAY_PAYDAY_AMTParameter = vAULT_MPAY_PAYDAY_AMT.HasValue ?
                new ObjectParameter("VAULT_MPAY_PAYDAY_AMT", vAULT_MPAY_PAYDAY_AMT) :
                new ObjectParameter("VAULT_MPAY_PAYDAY_AMT", typeof(decimal));
    
            var vAULT_MPAY_PAYDAY_CNTParameter = vAULT_MPAY_PAYDAY_CNT.HasValue ?
                new ObjectParameter("VAULT_MPAY_PAYDAY_CNT", vAULT_MPAY_PAYDAY_CNT) :
                new ObjectParameter("VAULT_MPAY_PAYDAY_CNT", typeof(int));
    
            var vAULT_OEND_PAYDAY_AMTParameter = vAULT_OEND_PAYDAY_AMT.HasValue ?
                new ObjectParameter("VAULT_OEND_PAYDAY_AMT", vAULT_OEND_PAYDAY_AMT) :
                new ObjectParameter("VAULT_OEND_PAYDAY_AMT", typeof(decimal));
    
            var vAULT_OEND_PAYDAY_CNTParameter = vAULT_OEND_PAYDAY_CNT.HasValue ?
                new ObjectParameter("VAULT_OEND_PAYDAY_CNT", vAULT_OEND_PAYDAY_CNT) :
                new ObjectParameter("VAULT_OEND_PAYDAY_CNT", typeof(int));
    
            var vAULT_SPAY_TITLE_AMTParameter = vAULT_SPAY_TITLE_AMT.HasValue ?
                new ObjectParameter("VAULT_SPAY_TITLE_AMT", vAULT_SPAY_TITLE_AMT) :
                new ObjectParameter("VAULT_SPAY_TITLE_AMT", typeof(decimal));
    
            var vAULT_SPAY_TITLE_CNTParameter = vAULT_SPAY_TITLE_CNT.HasValue ?
                new ObjectParameter("VAULT_SPAY_TITLE_CNT", vAULT_SPAY_TITLE_CNT) :
                new ObjectParameter("VAULT_SPAY_TITLE_CNT", typeof(int));
    
            var vAULT_MPAY_TITLE_AMTParameter = vAULT_MPAY_TITLE_AMT.HasValue ?
                new ObjectParameter("VAULT_MPAY_TITLE_AMT", vAULT_MPAY_TITLE_AMT) :
                new ObjectParameter("VAULT_MPAY_TITLE_AMT", typeof(decimal));
    
            var vAULT_MPAY_TITLE_CNTParameter = vAULT_MPAY_TITLE_CNT.HasValue ?
                new ObjectParameter("VAULT_MPAY_TITLE_CNT", vAULT_MPAY_TITLE_CNT) :
                new ObjectParameter("VAULT_MPAY_TITLE_CNT", typeof(int));
    
            var vAULT_OEND_TITLE_AMTParameter = vAULT_OEND_TITLE_AMT.HasValue ?
                new ObjectParameter("VAULT_OEND_TITLE_AMT", vAULT_OEND_TITLE_AMT) :
                new ObjectParameter("VAULT_OEND_TITLE_AMT", typeof(decimal));
    
            var vAULT_OEND_TITLE_CNTParameter = vAULT_OEND_TITLE_CNT.HasValue ?
                new ObjectParameter("VAULT_OEND_TITLE_CNT", vAULT_OEND_TITLE_CNT) :
                new ObjectParameter("VAULT_OEND_TITLE_CNT", typeof(int));
    
            var vAULT_SPAY_TITLE_2ND_AMTParameter = vAULT_SPAY_TITLE_2ND_AMT.HasValue ?
                new ObjectParameter("VAULT_SPAY_TITLE_2ND_AMT", vAULT_SPAY_TITLE_2ND_AMT) :
                new ObjectParameter("VAULT_SPAY_TITLE_2ND_AMT", typeof(decimal));
    
            var vAULT_SPAY_TITLE_2ND_CNTParameter = vAULT_SPAY_TITLE_2ND_CNT.HasValue ?
                new ObjectParameter("VAULT_SPAY_TITLE_2ND_CNT", vAULT_SPAY_TITLE_2ND_CNT) :
                new ObjectParameter("VAULT_SPAY_TITLE_2ND_CNT", typeof(int));
    
            var vAULT_MPAY_TITLE_2ND_AMTParameter = vAULT_MPAY_TITLE_2ND_AMT.HasValue ?
                new ObjectParameter("VAULT_MPAY_TITLE_2ND_AMT", vAULT_MPAY_TITLE_2ND_AMT) :
                new ObjectParameter("VAULT_MPAY_TITLE_2ND_AMT", typeof(decimal));
    
            var vAULT_MPAY_TITLE_2ND_CNTParameter = vAULT_MPAY_TITLE_2ND_CNT.HasValue ?
                new ObjectParameter("VAULT_MPAY_TITLE_2ND_CNT", vAULT_MPAY_TITLE_2ND_CNT) :
                new ObjectParameter("VAULT_MPAY_TITLE_2ND_CNT", typeof(int));
    
            var vAULT_OEND_TITLE_2ND_AMTParameter = vAULT_OEND_TITLE_2ND_AMT.HasValue ?
                new ObjectParameter("VAULT_OEND_TITLE_2ND_AMT", vAULT_OEND_TITLE_2ND_AMT) :
                new ObjectParameter("VAULT_OEND_TITLE_2ND_AMT", typeof(decimal));
    
            var vAULT_OEND_TITLE_2ND_CNTParameter = vAULT_OEND_TITLE_2ND_CNT.HasValue ?
                new ObjectParameter("VAULT_OEND_TITLE_2ND_CNT", vAULT_OEND_TITLE_2ND_CNT) :
                new ObjectParameter("VAULT_OEND_TITLE_2ND_CNT", typeof(int));
    
            var vAULT_SPAY_SIG_AMTParameter = vAULT_SPAY_SIG_AMT.HasValue ?
                new ObjectParameter("VAULT_SPAY_SIG_AMT", vAULT_SPAY_SIG_AMT) :
                new ObjectParameter("VAULT_SPAY_SIG_AMT", typeof(decimal));
    
            var vAULT_SPAY_SIG_CNTParameter = vAULT_SPAY_SIG_CNT.HasValue ?
                new ObjectParameter("VAULT_SPAY_SIG_CNT", vAULT_SPAY_SIG_CNT) :
                new ObjectParameter("VAULT_SPAY_SIG_CNT", typeof(int));
    
            var vAULT_MPAY_SIG_AMTParameter = vAULT_MPAY_SIG_AMT.HasValue ?
                new ObjectParameter("VAULT_MPAY_SIG_AMT", vAULT_MPAY_SIG_AMT) :
                new ObjectParameter("VAULT_MPAY_SIG_AMT", typeof(decimal));
    
            var vAULT_MPAY_SIG_CNTParameter = vAULT_MPAY_SIG_CNT.HasValue ?
                new ObjectParameter("VAULT_MPAY_SIG_CNT", vAULT_MPAY_SIG_CNT) :
                new ObjectParameter("VAULT_MPAY_SIG_CNT", typeof(int));
    
            var vAULT_OEND_SIG_AMTParameter = vAULT_OEND_SIG_AMT.HasValue ?
                new ObjectParameter("VAULT_OEND_SIG_AMT", vAULT_OEND_SIG_AMT) :
                new ObjectParameter("VAULT_OEND_SIG_AMT", typeof(decimal));
    
            var vAULT_OEND_SIG_CNTParameter = vAULT_OEND_SIG_CNT.HasValue ?
                new ObjectParameter("VAULT_OEND_SIG_CNT", vAULT_OEND_SIG_CNT) :
                new ObjectParameter("VAULT_OEND_SIG_CNT", typeof(int));
    
            var vAULT_BAG_MIDDAY_CNTParameter = vAULT_BAG_MIDDAY_CNT.HasValue ?
                new ObjectParameter("VAULT_BAG_MIDDAY_CNT", vAULT_BAG_MIDDAY_CNT) :
                new ObjectParameter("VAULT_BAG_MIDDAY_CNT", typeof(int));
    
            var vAULT_BAG_MIDDAY_CHK_CNTParameter = vAULT_BAG_MIDDAY_CHK_CNT.HasValue ?
                new ObjectParameter("VAULT_BAG_MIDDAY_CHK_CNT", vAULT_BAG_MIDDAY_CHK_CNT) :
                new ObjectParameter("VAULT_BAG_MIDDAY_CHK_CNT", typeof(int));
    
            var vAULT_BAG_MIDDAY_AMTParameter = vAULT_BAG_MIDDAY_AMT.HasValue ?
                new ObjectParameter("VAULT_BAG_MIDDAY_AMT", vAULT_BAG_MIDDAY_AMT) :
                new ObjectParameter("VAULT_BAG_MIDDAY_AMT", typeof(decimal));
    
            var vAULT_BAG_EODAY_CNTParameter = vAULT_BAG_EODAY_CNT.HasValue ?
                new ObjectParameter("VAULT_BAG_EODAY_CNT", vAULT_BAG_EODAY_CNT) :
                new ObjectParameter("VAULT_BAG_EODAY_CNT", typeof(int));
    
            var vAULT_BAG_EODAY_CHK_CNTParameter = vAULT_BAG_EODAY_CHK_CNT.HasValue ?
                new ObjectParameter("VAULT_BAG_EODAY_CHK_CNT", vAULT_BAG_EODAY_CHK_CNT) :
                new ObjectParameter("VAULT_BAG_EODAY_CHK_CNT", typeof(int));
    
            var vAULT_BAG_EODAY_AMTParameter = vAULT_BAG_EODAY_AMT.HasValue ?
                new ObjectParameter("VAULT_BAG_EODAY_AMT", vAULT_BAG_EODAY_AMT) :
                new ObjectParameter("VAULT_BAG_EODAY_AMT", typeof(decimal));
    
            var vAULT_GOLD_DAILY_BAGS_CNTParameter = vAULT_GOLD_DAILY_BAGS_CNT.HasValue ?
                new ObjectParameter("VAULT_GOLD_DAILY_BAGS_CNT", vAULT_GOLD_DAILY_BAGS_CNT) :
                new ObjectParameter("VAULT_GOLD_DAILY_BAGS_CNT", typeof(int));
    
            var vAULT_GOLD_DAILY_BAGS_AMTParameter = vAULT_GOLD_DAILY_BAGS_AMT.HasValue ?
                new ObjectParameter("VAULT_GOLD_DAILY_BAGS_AMT", vAULT_GOLD_DAILY_BAGS_AMT) :
                new ObjectParameter("VAULT_GOLD_DAILY_BAGS_AMT", typeof(decimal));
    
            var vAULT_2PParameter = vAULT_2P.HasValue ?
                new ObjectParameter("VAULT_2P", vAULT_2P) :
                new ObjectParameter("VAULT_2P", typeof(decimal));
    
            var vAULT_20PParameter = vAULT_20P.HasValue ?
                new ObjectParameter("VAULT_20P", vAULT_20P) :
                new ObjectParameter("VAULT_20P", typeof(decimal));
    
            var vAULT_02Parameter = vAULT_02.HasValue ?
                new ObjectParameter("VAULT_02", vAULT_02) :
                new ObjectParameter("VAULT_02", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VaultMaster_Insert", lOCATIONParameter, vAULT_100Parameter, vAULT_50Parameter, vAULT_20Parameter, vAULT_10Parameter, vAULT_05Parameter, vAULT_01Parameter, vAULT_HLFParameter, vAULT_QTRParameter, vAULT_DIMEParameter, vAULT_NICParameter, vAULT_PENParameter, vAULT_MISCParameter, vAULT_CASHCHK_AMTParameter, vAULT_CASHCHK_CNTParameter, vAULT_SPAY_PAYDAY_CHECKS_AMTParameter, vAULT_SPAY_PAYDAY_CHECKS_CNTParameter, vAULT_SPAY_PAYDAY_DEBIT_CARDS_AMTParameter, vAULT_SPAY_PAYDAY_DEBIT_CARDS_CNTParameter, vAULT_MPAY_PAYDAY_AMTParameter, vAULT_MPAY_PAYDAY_CNTParameter, vAULT_OEND_PAYDAY_AMTParameter, vAULT_OEND_PAYDAY_CNTParameter, vAULT_SPAY_TITLE_AMTParameter, vAULT_SPAY_TITLE_CNTParameter, vAULT_MPAY_TITLE_AMTParameter, vAULT_MPAY_TITLE_CNTParameter, vAULT_OEND_TITLE_AMTParameter, vAULT_OEND_TITLE_CNTParameter, vAULT_SPAY_TITLE_2ND_AMTParameter, vAULT_SPAY_TITLE_2ND_CNTParameter, vAULT_MPAY_TITLE_2ND_AMTParameter, vAULT_MPAY_TITLE_2ND_CNTParameter, vAULT_OEND_TITLE_2ND_AMTParameter, vAULT_OEND_TITLE_2ND_CNTParameter, vAULT_SPAY_SIG_AMTParameter, vAULT_SPAY_SIG_CNTParameter, vAULT_MPAY_SIG_AMTParameter, vAULT_MPAY_SIG_CNTParameter, vAULT_OEND_SIG_AMTParameter, vAULT_OEND_SIG_CNTParameter, vAULT_BAG_MIDDAY_CNTParameter, vAULT_BAG_MIDDAY_CHK_CNTParameter, vAULT_BAG_MIDDAY_AMTParameter, vAULT_BAG_EODAY_CNTParameter, vAULT_BAG_EODAY_CHK_CNTParameter, vAULT_BAG_EODAY_AMTParameter, vAULT_GOLD_DAILY_BAGS_CNTParameter, vAULT_GOLD_DAILY_BAGS_AMTParameter, vAULT_2PParameter, vAULT_20PParameter, vAULT_02Parameter);
        }
    
        public virtual int usp_VeritecLoanID_insert(Nullable<int> lOAN_KEY, string tRANS_NUM, Nullable<bool> mANUALLY_ENTERED, Nullable<int> cUSTOMER_KEY)
        {
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var tRANS_NUMParameter = tRANS_NUM != null ?
                new ObjectParameter("TRANS_NUM", tRANS_NUM) :
                new ObjectParameter("TRANS_NUM", typeof(string));
    
            var mANUALLY_ENTEREDParameter = mANUALLY_ENTERED.HasValue ?
                new ObjectParameter("MANUALLY_ENTERED", mANUALLY_ENTERED) :
                new ObjectParameter("MANUALLY_ENTERED", typeof(bool));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VeritecLoanID_insert", lOAN_KEYParameter, tRANS_NUMParameter, mANUALLY_ENTEREDParameter, cUSTOMER_KEYParameter);
        }
    
        public virtual ObjectResult<usp_Visitor_Info_Result> usp_Visitor_Info(Nullable<int> vISITOR_KEY)
        {
            var vISITOR_KEYParameter = vISITOR_KEY.HasValue ?
                new ObjectParameter("VISITOR_KEY", vISITOR_KEY) :
                new ObjectParameter("VISITOR_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Visitor_Info_Result>("usp_Visitor_Info", vISITOR_KEYParameter);
        }
    
        public virtual int usp_Visitor_Update_SIGNIN_COUNT(Nullable<int> sIGNIN_COUNT, Nullable<int> vISITOR_KEY)
        {
            var sIGNIN_COUNTParameter = sIGNIN_COUNT.HasValue ?
                new ObjectParameter("SIGNIN_COUNT", sIGNIN_COUNT) :
                new ObjectParameter("SIGNIN_COUNT", typeof(int));
    
            var vISITOR_KEYParameter = vISITOR_KEY.HasValue ?
                new ObjectParameter("VISITOR_KEY", vISITOR_KEY) :
                new ObjectParameter("VISITOR_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Visitor_Update_SIGNIN_COUNT", sIGNIN_COUNTParameter, vISITOR_KEYParameter);
        }
    
        public virtual int usp_VisitorEmail_Insert(Nullable<int> vISITOR_KEY, string eMAIL_FROM_ADDRESS, string eMAIL_TO_ADDRESS, Nullable<byte> eMAIL_ID, string eMAIL_SUBJECT, string eMAIL_BODY, Nullable<int> lOAN_APPLICATION_KEY, Nullable<int> lOAN_KEY, Nullable<int> eMAIL_TEMPLATE_KEY, Nullable<System.DateTime> eMAIL_DATE, ObjectParameter vISITOR_EMAIL_KEY)
        {
            var vISITOR_KEYParameter = vISITOR_KEY.HasValue ?
                new ObjectParameter("VISITOR_KEY", vISITOR_KEY) :
                new ObjectParameter("VISITOR_KEY", typeof(int));
    
            var eMAIL_FROM_ADDRESSParameter = eMAIL_FROM_ADDRESS != null ?
                new ObjectParameter("EMAIL_FROM_ADDRESS", eMAIL_FROM_ADDRESS) :
                new ObjectParameter("EMAIL_FROM_ADDRESS", typeof(string));
    
            var eMAIL_TO_ADDRESSParameter = eMAIL_TO_ADDRESS != null ?
                new ObjectParameter("EMAIL_TO_ADDRESS", eMAIL_TO_ADDRESS) :
                new ObjectParameter("EMAIL_TO_ADDRESS", typeof(string));
    
            var eMAIL_IDParameter = eMAIL_ID.HasValue ?
                new ObjectParameter("EMAIL_ID", eMAIL_ID) :
                new ObjectParameter("EMAIL_ID", typeof(byte));
    
            var eMAIL_SUBJECTParameter = eMAIL_SUBJECT != null ?
                new ObjectParameter("EMAIL_SUBJECT", eMAIL_SUBJECT) :
                new ObjectParameter("EMAIL_SUBJECT", typeof(string));
    
            var eMAIL_BODYParameter = eMAIL_BODY != null ?
                new ObjectParameter("EMAIL_BODY", eMAIL_BODY) :
                new ObjectParameter("EMAIL_BODY", typeof(string));
    
            var lOAN_APPLICATION_KEYParameter = lOAN_APPLICATION_KEY.HasValue ?
                new ObjectParameter("LOAN_APPLICATION_KEY", lOAN_APPLICATION_KEY) :
                new ObjectParameter("LOAN_APPLICATION_KEY", typeof(int));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var eMAIL_TEMPLATE_KEYParameter = eMAIL_TEMPLATE_KEY.HasValue ?
                new ObjectParameter("EMAIL_TEMPLATE_KEY", eMAIL_TEMPLATE_KEY) :
                new ObjectParameter("EMAIL_TEMPLATE_KEY", typeof(int));
    
            var eMAIL_DATEParameter = eMAIL_DATE.HasValue ?
                new ObjectParameter("EMAIL_DATE", eMAIL_DATE) :
                new ObjectParameter("EMAIL_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VisitorEmail_Insert", vISITOR_KEYParameter, eMAIL_FROM_ADDRESSParameter, eMAIL_TO_ADDRESSParameter, eMAIL_IDParameter, eMAIL_SUBJECTParameter, eMAIL_BODYParameter, lOAN_APPLICATION_KEYParameter, lOAN_KEYParameter, eMAIL_TEMPLATE_KEYParameter, eMAIL_DATEParameter, vISITOR_EMAIL_KEY);
        }
    
        public virtual int usp_VisitorEmail_InsertByEmailAddr(string eMAIL_ADDRESS, Nullable<byte> eMAIL_ID, string eMAIL_SUBJECT, string eMAIL_BODY, Nullable<System.DateTime> eMAIL_DATE, Nullable<int> lOAN_APPLICATION_KEY, Nullable<int> lOAN_KEY, Nullable<int> eMAIL_TEMPLATE_KEY, ObjectParameter vISITOR_EMAIL_KEY)
        {
            var eMAIL_ADDRESSParameter = eMAIL_ADDRESS != null ?
                new ObjectParameter("EMAIL_ADDRESS", eMAIL_ADDRESS) :
                new ObjectParameter("EMAIL_ADDRESS", typeof(string));
    
            var eMAIL_IDParameter = eMAIL_ID.HasValue ?
                new ObjectParameter("EMAIL_ID", eMAIL_ID) :
                new ObjectParameter("EMAIL_ID", typeof(byte));
    
            var eMAIL_SUBJECTParameter = eMAIL_SUBJECT != null ?
                new ObjectParameter("EMAIL_SUBJECT", eMAIL_SUBJECT) :
                new ObjectParameter("EMAIL_SUBJECT", typeof(string));
    
            var eMAIL_BODYParameter = eMAIL_BODY != null ?
                new ObjectParameter("EMAIL_BODY", eMAIL_BODY) :
                new ObjectParameter("EMAIL_BODY", typeof(string));
    
            var eMAIL_DATEParameter = eMAIL_DATE.HasValue ?
                new ObjectParameter("EMAIL_DATE", eMAIL_DATE) :
                new ObjectParameter("EMAIL_DATE", typeof(System.DateTime));
    
            var lOAN_APPLICATION_KEYParameter = lOAN_APPLICATION_KEY.HasValue ?
                new ObjectParameter("LOAN_APPLICATION_KEY", lOAN_APPLICATION_KEY) :
                new ObjectParameter("LOAN_APPLICATION_KEY", typeof(int));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var eMAIL_TEMPLATE_KEYParameter = eMAIL_TEMPLATE_KEY.HasValue ?
                new ObjectParameter("EMAIL_TEMPLATE_KEY", eMAIL_TEMPLATE_KEY) :
                new ObjectParameter("EMAIL_TEMPLATE_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VisitorEmail_InsertByEmailAddr", eMAIL_ADDRESSParameter, eMAIL_IDParameter, eMAIL_SUBJECTParameter, eMAIL_BODYParameter, eMAIL_DATEParameter, lOAN_APPLICATION_KEYParameter, lOAN_KEYParameter, eMAIL_TEMPLATE_KEYParameter, vISITOR_EMAIL_KEY);
        }
    
        public virtual int usp_VisitorHistory_Insert(Nullable<int> vISITOR_KEY, string iP_ADDRESS, string pAGE_NAME, string mETHOD_CALL, string sESSION_GUID, ObjectParameter vISITOR_HISTORY_KEY, ObjectParameter sESSION_EXPIRED)
        {
            var vISITOR_KEYParameter = vISITOR_KEY.HasValue ?
                new ObjectParameter("VISITOR_KEY", vISITOR_KEY) :
                new ObjectParameter("VISITOR_KEY", typeof(int));
    
            var iP_ADDRESSParameter = iP_ADDRESS != null ?
                new ObjectParameter("IP_ADDRESS", iP_ADDRESS) :
                new ObjectParameter("IP_ADDRESS", typeof(string));
    
            var pAGE_NAMEParameter = pAGE_NAME != null ?
                new ObjectParameter("PAGE_NAME", pAGE_NAME) :
                new ObjectParameter("PAGE_NAME", typeof(string));
    
            var mETHOD_CALLParameter = mETHOD_CALL != null ?
                new ObjectParameter("METHOD_CALL", mETHOD_CALL) :
                new ObjectParameter("METHOD_CALL", typeof(string));
    
            var sESSION_GUIDParameter = sESSION_GUID != null ?
                new ObjectParameter("SESSION_GUID", sESSION_GUID) :
                new ObjectParameter("SESSION_GUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VisitorHistory_Insert", vISITOR_KEYParameter, iP_ADDRESSParameter, pAGE_NAMEParameter, mETHOD_CALLParameter, sESSION_GUIDParameter, vISITOR_HISTORY_KEY, sESSION_EXPIRED);
        }
    
        public virtual int usp_VisitorLogin(Nullable<int> vISITOR_KEY, Nullable<bool> iS_PASSWORD_VALID)
        {
            var vISITOR_KEYParameter = vISITOR_KEY.HasValue ?
                new ObjectParameter("VISITOR_KEY", vISITOR_KEY) :
                new ObjectParameter("VISITOR_KEY", typeof(int));
    
            var iS_PASSWORD_VALIDParameter = iS_PASSWORD_VALID.HasValue ?
                new ObjectParameter("IS_PASSWORD_VALID", iS_PASSWORD_VALID) :
                new ObjectParameter("IS_PASSWORD_VALID", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VisitorLogin", vISITOR_KEYParameter, iS_PASSWORD_VALIDParameter);
        }
    
        public virtual int usp_WebAlertDelete(Nullable<int> webAlertKey)
        {
            var webAlertKeyParameter = webAlertKey.HasValue ?
                new ObjectParameter("WebAlertKey", webAlertKey) :
                new ObjectParameter("WebAlertKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebAlertDelete", webAlertKeyParameter);
        }
    
        public virtual int usp_WebAlertInsert(ObjectParameter webAlertKey, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string alertText, string currentUserId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var alertTextParameter = alertText != null ?
                new ObjectParameter("AlertText", alertText) :
                new ObjectParameter("AlertText", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebAlertInsert", webAlertKey, startDateParameter, endDateParameter, alertTextParameter, currentUserIdParameter);
        }
    
        public virtual ObjectResult<usp_WebAlertsLoad_Result> usp_WebAlertsLoad(Nullable<int> filter)
        {
            var filterParameter = filter.HasValue ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebAlertsLoad_Result>("usp_WebAlertsLoad", filterParameter);
        }
    
        public virtual int usp_WebAlertUpdate(Nullable<int> webAlertKey, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string alertText, string currentUserId)
        {
            var webAlertKeyParameter = webAlertKey.HasValue ?
                new ObjectParameter("WebAlertKey", webAlertKey) :
                new ObjectParameter("WebAlertKey", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var alertTextParameter = alertText != null ?
                new ObjectParameter("AlertText", alertText) :
                new ObjectParameter("AlertText", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebAlertUpdate", webAlertKeyParameter, startDateParameter, endDateParameter, alertTextParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebBlob_Loan_Insert(Nullable<int> lOAN_KEY, Nullable<short> bLOB_TYPE, byte[] pDF, string dESCRIPTION)
        {
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var bLOB_TYPEParameter = bLOB_TYPE.HasValue ?
                new ObjectParameter("BLOB_TYPE", bLOB_TYPE) :
                new ObjectParameter("BLOB_TYPE", typeof(short));
    
            var pDFParameter = pDF != null ?
                new ObjectParameter("PDF", pDF) :
                new ObjectParameter("PDF", typeof(byte[]));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebBlob_Loan_Insert", lOAN_KEYParameter, bLOB_TYPEParameter, pDFParameter, dESCRIPTIONParameter);
        }
    
        public virtual int usp_WebBlob_VisitorEmail_Insert(ObjectParameter web_Blob_Key, Nullable<int> visitor_Email_Key, byte[] attachment, string attachment_Name, string extension, string description)
        {
            var visitor_Email_KeyParameter = visitor_Email_Key.HasValue ?
                new ObjectParameter("Visitor_Email_Key", visitor_Email_Key) :
                new ObjectParameter("Visitor_Email_Key", typeof(int));
    
            var attachmentParameter = attachment != null ?
                new ObjectParameter("Attachment", attachment) :
                new ObjectParameter("Attachment", typeof(byte[]));
    
            var attachment_NameParameter = attachment_Name != null ?
                new ObjectParameter("Attachment_Name", attachment_Name) :
                new ObjectParameter("Attachment_Name", typeof(string));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("Extension", extension) :
                new ObjectParameter("Extension", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebBlob_VisitorEmail_Insert", web_Blob_Key, visitor_Email_KeyParameter, attachmentParameter, attachment_NameParameter, extensionParameter, descriptionParameter);
        }
    
        public virtual int usp_WebCallApplicationModeAuditDelete(Nullable<int> web_Call_Application_Mode_Audit_Key)
        {
            var web_Call_Application_Mode_Audit_KeyParameter = web_Call_Application_Mode_Audit_Key.HasValue ?
                new ObjectParameter("Web_Call_Application_Mode_Audit_Key", web_Call_Application_Mode_Audit_Key) :
                new ObjectParameter("Web_Call_Application_Mode_Audit_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallApplicationModeAuditDelete", web_Call_Application_Mode_Audit_KeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallApplicationModeAuditLoadActive_Result> usp_WebCallApplicationModeAuditLoadActive()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallApplicationModeAuditLoadActive_Result>("usp_WebCallApplicationModeAuditLoadActive");
        }
    
        public virtual ObjectResult<usp_WebCallApplicationModeAuditLoadByDate_Result> usp_WebCallApplicationModeAuditLoadByDate(Nullable<System.DateTime> minStartDate, Nullable<System.DateTime> maxStartDate, Nullable<bool> includeActive)
        {
            var minStartDateParameter = minStartDate.HasValue ?
                new ObjectParameter("MinStartDate", minStartDate) :
                new ObjectParameter("MinStartDate", typeof(System.DateTime));
    
            var maxStartDateParameter = maxStartDate.HasValue ?
                new ObjectParameter("MaxStartDate", maxStartDate) :
                new ObjectParameter("MaxStartDate", typeof(System.DateTime));
    
            var includeActiveParameter = includeActive.HasValue ?
                new ObjectParameter("IncludeActive", includeActive) :
                new ObjectParameter("IncludeActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallApplicationModeAuditLoadByDate_Result>("usp_WebCallApplicationModeAuditLoadByDate", minStartDateParameter, maxStartDateParameter, includeActiveParameter);
        }
    
        public virtual int usp_WebCallApplicationModeDelete(Nullable<int> web_Call_Application_Mode_Key)
        {
            var web_Call_Application_Mode_KeyParameter = web_Call_Application_Mode_Key.HasValue ?
                new ObjectParameter("Web_Call_Application_Mode_Key", web_Call_Application_Mode_Key) :
                new ObjectParameter("Web_Call_Application_Mode_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallApplicationModeDelete", web_Call_Application_Mode_KeyParameter);
        }
    
        public virtual int usp_WebCallApplicationModeEnd(Nullable<int> web_Call_Application_Mode_Audit_Key, Nullable<System.DateTime> end_Date)
        {
            var web_Call_Application_Mode_Audit_KeyParameter = web_Call_Application_Mode_Audit_Key.HasValue ?
                new ObjectParameter("Web_Call_Application_Mode_Audit_Key", web_Call_Application_Mode_Audit_Key) :
                new ObjectParameter("Web_Call_Application_Mode_Audit_Key", typeof(int));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("End_Date", end_Date) :
                new ObjectParameter("End_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallApplicationModeEnd", web_Call_Application_Mode_Audit_KeyParameter, end_DateParameter);
        }
    
        public virtual int usp_WebCallApplicationModeInsert(ObjectParameter web_Call_Application_Mode_Key, string name, Nullable<int> activation_Event, Nullable<int> onSelected_Action, Nullable<bool> disabled, Nullable<int> display_Order, Nullable<bool> isWorkingHoursMode)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activation_EventParameter = activation_Event.HasValue ?
                new ObjectParameter("Activation_Event", activation_Event) :
                new ObjectParameter("Activation_Event", typeof(int));
    
            var onSelected_ActionParameter = onSelected_Action.HasValue ?
                new ObjectParameter("OnSelected_Action", onSelected_Action) :
                new ObjectParameter("OnSelected_Action", typeof(int));
    
            var disabledParameter = disabled.HasValue ?
                new ObjectParameter("Disabled", disabled) :
                new ObjectParameter("Disabled", typeof(bool));
    
            var display_OrderParameter = display_Order.HasValue ?
                new ObjectParameter("Display_Order", display_Order) :
                new ObjectParameter("Display_Order", typeof(int));
    
            var isWorkingHoursModeParameter = isWorkingHoursMode.HasValue ?
                new ObjectParameter("IsWorkingHoursMode", isWorkingHoursMode) :
                new ObjectParameter("IsWorkingHoursMode", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallApplicationModeInsert", web_Call_Application_Mode_Key, nameParameter, activation_EventParameter, onSelected_ActionParameter, disabledParameter, display_OrderParameter, isWorkingHoursModeParameter);
        }
    
        public virtual ObjectResult<usp_WebCallApplicationModesLoad_Result> usp_WebCallApplicationModesLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallApplicationModesLoad_Result>("usp_WebCallApplicationModesLoad");
        }
    
        public virtual int usp_WebCallApplicationModeStart(ObjectParameter web_Call_Application_Mode_Audit_Key, Nullable<int> web_Call_Application_Mode_Key, Nullable<System.DateTime> start_Date, string user)
        {
            var web_Call_Application_Mode_KeyParameter = web_Call_Application_Mode_Key.HasValue ?
                new ObjectParameter("Web_Call_Application_Mode_Key", web_Call_Application_Mode_Key) :
                new ObjectParameter("Web_Call_Application_Mode_Key", typeof(int));
    
            var start_DateParameter = start_Date.HasValue ?
                new ObjectParameter("Start_Date", start_Date) :
                new ObjectParameter("Start_Date", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallApplicationModeStart", web_Call_Application_Mode_Audit_Key, web_Call_Application_Mode_KeyParameter, start_DateParameter, userParameter);
        }
    
        public virtual int usp_WebCallApplicationModeUpdate(Nullable<int> web_Call_Application_Mode_Key, string name, Nullable<int> activation_Event, Nullable<int> onSelected_Action, Nullable<bool> disabled, Nullable<int> display_Order, Nullable<bool> isWorkingHoursMode)
        {
            var web_Call_Application_Mode_KeyParameter = web_Call_Application_Mode_Key.HasValue ?
                new ObjectParameter("Web_Call_Application_Mode_Key", web_Call_Application_Mode_Key) :
                new ObjectParameter("Web_Call_Application_Mode_Key", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activation_EventParameter = activation_Event.HasValue ?
                new ObjectParameter("Activation_Event", activation_Event) :
                new ObjectParameter("Activation_Event", typeof(int));
    
            var onSelected_ActionParameter = onSelected_Action.HasValue ?
                new ObjectParameter("OnSelected_Action", onSelected_Action) :
                new ObjectParameter("OnSelected_Action", typeof(int));
    
            var disabledParameter = disabled.HasValue ?
                new ObjectParameter("Disabled", disabled) :
                new ObjectParameter("Disabled", typeof(bool));
    
            var display_OrderParameter = display_Order.HasValue ?
                new ObjectParameter("Display_Order", display_Order) :
                new ObjectParameter("Display_Order", typeof(int));
    
            var isWorkingHoursModeParameter = isWorkingHoursMode.HasValue ?
                new ObjectParameter("IsWorkingHoursMode", isWorkingHoursMode) :
                new ObjectParameter("IsWorkingHoursMode", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallApplicationModeUpdate", web_Call_Application_Mode_KeyParameter, nameParameter, activation_EventParameter, onSelected_ActionParameter, disabledParameter, display_OrderParameter, isWorkingHoursModeParameter);
        }
    
        public virtual int usp_WebCallApplicationStatusHistoryAppStatusInsert(ObjectParameter web_Call_Application_Status_History_KEY, Nullable<int> loan_Application_Key, Nullable<int> loan_Application_Status)
        {
            var loan_Application_KeyParameter = loan_Application_Key.HasValue ?
                new ObjectParameter("Loan_Application_Key", loan_Application_Key) :
                new ObjectParameter("Loan_Application_Key", typeof(int));
    
            var loan_Application_StatusParameter = loan_Application_Status.HasValue ?
                new ObjectParameter("Loan_Application_Status", loan_Application_Status) :
                new ObjectParameter("Loan_Application_Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallApplicationStatusHistoryAppStatusInsert", web_Call_Application_Status_History_KEY, loan_Application_KeyParameter, loan_Application_StatusParameter);
        }
    
        public virtual int usp_WebCallApplicationStatusHistoryCallCenterStatusInsert(ObjectParameter web_Call_Application_Status_History_KEY, Nullable<int> loan_Application_Key, Nullable<int> web_Call_RARR_History_Key)
        {
            var loan_Application_KeyParameter = loan_Application_Key.HasValue ?
                new ObjectParameter("Loan_Application_Key", loan_Application_Key) :
                new ObjectParameter("Loan_Application_Key", typeof(int));
    
            var web_Call_RARR_History_KeyParameter = web_Call_RARR_History_Key.HasValue ?
                new ObjectParameter("Web_Call_RARR_History_Key", web_Call_RARR_History_Key) :
                new ObjectParameter("Web_Call_RARR_History_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallApplicationStatusHistoryCallCenterStatusInsert", web_Call_Application_Status_History_KEY, loan_Application_KeyParameter, web_Call_RARR_History_KeyParameter);
        }
    
        public virtual int usp_WebCallAuthorizedVisitorContactDelete(Nullable<int> web_Call_Authorized_Visitor_Contact_Key)
        {
            var web_Call_Authorized_Visitor_Contact_KeyParameter = web_Call_Authorized_Visitor_Contact_Key.HasValue ?
                new ObjectParameter("Web_Call_Authorized_Visitor_Contact_Key", web_Call_Authorized_Visitor_Contact_Key) :
                new ObjectParameter("Web_Call_Authorized_Visitor_Contact_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallAuthorizedVisitorContactDelete", web_Call_Authorized_Visitor_Contact_KeyParameter);
        }
    
        public virtual int usp_WebCallAuthorizedVisitorContactInsert(ObjectParameter web_Call_Authorized_Visitor_Contact_Key, Nullable<int> visitor_Key, string first_Name, string last_Name, string relationship, Nullable<System.DateTime> dOB)
        {
            var visitor_KeyParameter = visitor_Key.HasValue ?
                new ObjectParameter("Visitor_Key", visitor_Key) :
                new ObjectParameter("Visitor_Key", typeof(int));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var relationshipParameter = relationship != null ?
                new ObjectParameter("Relationship", relationship) :
                new ObjectParameter("Relationship", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallAuthorizedVisitorContactInsert", web_Call_Authorized_Visitor_Contact_Key, visitor_KeyParameter, first_NameParameter, last_NameParameter, relationshipParameter, dOBParameter);
        }
    
        public virtual ObjectResult<usp_WebCallAuthorizedVisitorContactsLoad_Result> usp_WebCallAuthorizedVisitorContactsLoad(Nullable<int> visitor_Key)
        {
            var visitor_KeyParameter = visitor_Key.HasValue ?
                new ObjectParameter("Visitor_Key", visitor_Key) :
                new ObjectParameter("Visitor_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallAuthorizedVisitorContactsLoad_Result>("usp_WebCallAuthorizedVisitorContactsLoad", visitor_KeyParameter);
        }
    
        public virtual int usp_WebCallAuthorizedVisitorContactUpdate(Nullable<int> web_Call_Authorized_Visitor_Contact_Key, Nullable<int> visitor_Key, string first_Name, string last_Name, string relationship, Nullable<System.DateTime> dOB)
        {
            var web_Call_Authorized_Visitor_Contact_KeyParameter = web_Call_Authorized_Visitor_Contact_Key.HasValue ?
                new ObjectParameter("Web_Call_Authorized_Visitor_Contact_Key", web_Call_Authorized_Visitor_Contact_Key) :
                new ObjectParameter("Web_Call_Authorized_Visitor_Contact_Key", typeof(int));
    
            var visitor_KeyParameter = visitor_Key.HasValue ?
                new ObjectParameter("Visitor_Key", visitor_Key) :
                new ObjectParameter("Visitor_Key", typeof(int));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var relationshipParameter = relationship != null ?
                new ObjectParameter("Relationship", relationship) :
                new ObjectParameter("Relationship", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallAuthorizedVisitorContactUpdate", web_Call_Authorized_Visitor_Contact_KeyParameter, visitor_KeyParameter, first_NameParameter, last_NameParameter, relationshipParameter, dOBParameter);
        }
    
        public virtual int usp_WebCallBatchActionDelete(Nullable<int> web_Call_BatchTaskAction_Key)
        {
            var web_Call_BatchTaskAction_KeyParameter = web_Call_BatchTaskAction_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTaskAction_Key", web_Call_BatchTaskAction_Key) :
                new ObjectParameter("Web_Call_BatchTaskAction_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallBatchActionDelete", web_Call_BatchTaskAction_KeyParameter);
        }
    
        public virtual int usp_WebCallBatchActionInsert(ObjectParameter web_Call_BatchTaskAction_Key, Nullable<int> web_Call_BatchTask_Key, Nullable<int> action_Type, Nullable<int> web_Call_Reason_Key, Nullable<int> web_Call_Action_Key, Nullable<int> web_Call_Result1_Key, Nullable<int> web_Call_Result2_Key, Nullable<int> web_Call_Rarr_Key, Nullable<int> web_Call_Category_Key)
        {
            var web_Call_BatchTask_KeyParameter = web_Call_BatchTask_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTask_Key", web_Call_BatchTask_Key) :
                new ObjectParameter("Web_Call_BatchTask_Key", typeof(int));
    
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(int));
    
            var web_Call_Reason_KeyParameter = web_Call_Reason_Key.HasValue ?
                new ObjectParameter("Web_Call_Reason_Key", web_Call_Reason_Key) :
                new ObjectParameter("Web_Call_Reason_Key", typeof(int));
    
            var web_Call_Action_KeyParameter = web_Call_Action_Key.HasValue ?
                new ObjectParameter("Web_Call_Action_Key", web_Call_Action_Key) :
                new ObjectParameter("Web_Call_Action_Key", typeof(int));
    
            var web_Call_Result1_KeyParameter = web_Call_Result1_Key.HasValue ?
                new ObjectParameter("Web_Call_Result1_Key", web_Call_Result1_Key) :
                new ObjectParameter("Web_Call_Result1_Key", typeof(int));
    
            var web_Call_Result2_KeyParameter = web_Call_Result2_Key.HasValue ?
                new ObjectParameter("Web_Call_Result2_Key", web_Call_Result2_Key) :
                new ObjectParameter("Web_Call_Result2_Key", typeof(int));
    
            var web_Call_Rarr_KeyParameter = web_Call_Rarr_Key.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Key", web_Call_Rarr_Key) :
                new ObjectParameter("Web_Call_Rarr_Key", typeof(int));
    
            var web_Call_Category_KeyParameter = web_Call_Category_Key.HasValue ?
                new ObjectParameter("Web_Call_Category_Key", web_Call_Category_Key) :
                new ObjectParameter("Web_Call_Category_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallBatchActionInsert", web_Call_BatchTaskAction_Key, web_Call_BatchTask_KeyParameter, action_TypeParameter, web_Call_Reason_KeyParameter, web_Call_Action_KeyParameter, web_Call_Result1_KeyParameter, web_Call_Result2_KeyParameter, web_Call_Rarr_KeyParameter, web_Call_Category_KeyParameter);
        }
    
        public virtual int usp_WebCallBatchActionUpdate(Nullable<int> web_Call_BatchTaskAction_Key, Nullable<int> web_Call_BatchTask_Key, Nullable<int> action_Type, Nullable<int> web_Call_Reason_Key, Nullable<int> web_Call_Action_Key, Nullable<int> web_Call_Result1_Key, Nullable<int> web_Call_Result2_Key, Nullable<int> web_Call_Rarr_Key, Nullable<int> web_Call_Category_Key)
        {
            var web_Call_BatchTaskAction_KeyParameter = web_Call_BatchTaskAction_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTaskAction_Key", web_Call_BatchTaskAction_Key) :
                new ObjectParameter("Web_Call_BatchTaskAction_Key", typeof(int));
    
            var web_Call_BatchTask_KeyParameter = web_Call_BatchTask_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTask_Key", web_Call_BatchTask_Key) :
                new ObjectParameter("Web_Call_BatchTask_Key", typeof(int));
    
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(int));
    
            var web_Call_Reason_KeyParameter = web_Call_Reason_Key.HasValue ?
                new ObjectParameter("Web_Call_Reason_Key", web_Call_Reason_Key) :
                new ObjectParameter("Web_Call_Reason_Key", typeof(int));
    
            var web_Call_Action_KeyParameter = web_Call_Action_Key.HasValue ?
                new ObjectParameter("Web_Call_Action_Key", web_Call_Action_Key) :
                new ObjectParameter("Web_Call_Action_Key", typeof(int));
    
            var web_Call_Result1_KeyParameter = web_Call_Result1_Key.HasValue ?
                new ObjectParameter("Web_Call_Result1_Key", web_Call_Result1_Key) :
                new ObjectParameter("Web_Call_Result1_Key", typeof(int));
    
            var web_Call_Result2_KeyParameter = web_Call_Result2_Key.HasValue ?
                new ObjectParameter("Web_Call_Result2_Key", web_Call_Result2_Key) :
                new ObjectParameter("Web_Call_Result2_Key", typeof(int));
    
            var web_Call_Rarr_KeyParameter = web_Call_Rarr_Key.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Key", web_Call_Rarr_Key) :
                new ObjectParameter("Web_Call_Rarr_Key", typeof(int));
    
            var web_Call_Category_KeyParameter = web_Call_Category_Key.HasValue ?
                new ObjectParameter("Web_Call_Category_Key", web_Call_Category_Key) :
                new ObjectParameter("Web_Call_Category_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallBatchActionUpdate", web_Call_BatchTaskAction_KeyParameter, web_Call_BatchTask_KeyParameter, action_TypeParameter, web_Call_Reason_KeyParameter, web_Call_Action_KeyParameter, web_Call_Result1_KeyParameter, web_Call_Result2_KeyParameter, web_Call_Rarr_KeyParameter, web_Call_Category_KeyParameter);
        }
    
        public virtual int usp_WebCallBatchCriteriaDelete(Nullable<int> web_Call_BatchTaskCriteria_Key)
        {
            var web_Call_BatchTaskCriteria_KeyParameter = web_Call_BatchTaskCriteria_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTaskCriteria_Key", web_Call_BatchTaskCriteria_Key) :
                new ObjectParameter("Web_Call_BatchTaskCriteria_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallBatchCriteriaDelete", web_Call_BatchTaskCriteria_KeyParameter);
        }
    
        public virtual int usp_WebCallBatchCriteriaInsert(ObjectParameter web_Call_BatchTaskCriteria_Key, Nullable<int> web_Call_BatchTask_Key, Nullable<int> criteria_Type, Nullable<int> criteria_Value, Nullable<int> web_Call_Reason_Key, Nullable<int> web_Call_Action_Key, Nullable<int> web_Call_Result1_Key, Nullable<int> web_Call_Result2_Key, Nullable<int> web_Call_Rarr_Key)
        {
            var web_Call_BatchTask_KeyParameter = web_Call_BatchTask_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTask_Key", web_Call_BatchTask_Key) :
                new ObjectParameter("Web_Call_BatchTask_Key", typeof(int));
    
            var criteria_TypeParameter = criteria_Type.HasValue ?
                new ObjectParameter("Criteria_Type", criteria_Type) :
                new ObjectParameter("Criteria_Type", typeof(int));
    
            var criteria_ValueParameter = criteria_Value.HasValue ?
                new ObjectParameter("Criteria_Value", criteria_Value) :
                new ObjectParameter("Criteria_Value", typeof(int));
    
            var web_Call_Reason_KeyParameter = web_Call_Reason_Key.HasValue ?
                new ObjectParameter("Web_Call_Reason_Key", web_Call_Reason_Key) :
                new ObjectParameter("Web_Call_Reason_Key", typeof(int));
    
            var web_Call_Action_KeyParameter = web_Call_Action_Key.HasValue ?
                new ObjectParameter("Web_Call_Action_Key", web_Call_Action_Key) :
                new ObjectParameter("Web_Call_Action_Key", typeof(int));
    
            var web_Call_Result1_KeyParameter = web_Call_Result1_Key.HasValue ?
                new ObjectParameter("Web_Call_Result1_Key", web_Call_Result1_Key) :
                new ObjectParameter("Web_Call_Result1_Key", typeof(int));
    
            var web_Call_Result2_KeyParameter = web_Call_Result2_Key.HasValue ?
                new ObjectParameter("Web_Call_Result2_Key", web_Call_Result2_Key) :
                new ObjectParameter("Web_Call_Result2_Key", typeof(int));
    
            var web_Call_Rarr_KeyParameter = web_Call_Rarr_Key.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Key", web_Call_Rarr_Key) :
                new ObjectParameter("Web_Call_Rarr_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallBatchCriteriaInsert", web_Call_BatchTaskCriteria_Key, web_Call_BatchTask_KeyParameter, criteria_TypeParameter, criteria_ValueParameter, web_Call_Reason_KeyParameter, web_Call_Action_KeyParameter, web_Call_Result1_KeyParameter, web_Call_Result2_KeyParameter, web_Call_Rarr_KeyParameter);
        }
    
        public virtual int usp_WebCallBatchCriteriaUpdate(Nullable<int> web_Call_BatchTaskCriteria_Key, Nullable<int> web_Call_BatchTask_Key, Nullable<int> criteria_Type, Nullable<int> criteria_Value, Nullable<int> web_Call_Reason_Key, Nullable<int> web_Call_Action_Key, Nullable<int> web_Call_Result1_Key, Nullable<int> web_Call_Result2_Key, Nullable<int> web_Call_Rarr_Key)
        {
            var web_Call_BatchTaskCriteria_KeyParameter = web_Call_BatchTaskCriteria_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTaskCriteria_Key", web_Call_BatchTaskCriteria_Key) :
                new ObjectParameter("Web_Call_BatchTaskCriteria_Key", typeof(int));
    
            var web_Call_BatchTask_KeyParameter = web_Call_BatchTask_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTask_Key", web_Call_BatchTask_Key) :
                new ObjectParameter("Web_Call_BatchTask_Key", typeof(int));
    
            var criteria_TypeParameter = criteria_Type.HasValue ?
                new ObjectParameter("Criteria_Type", criteria_Type) :
                new ObjectParameter("Criteria_Type", typeof(int));
    
            var criteria_ValueParameter = criteria_Value.HasValue ?
                new ObjectParameter("Criteria_Value", criteria_Value) :
                new ObjectParameter("Criteria_Value", typeof(int));
    
            var web_Call_Reason_KeyParameter = web_Call_Reason_Key.HasValue ?
                new ObjectParameter("Web_Call_Reason_Key", web_Call_Reason_Key) :
                new ObjectParameter("Web_Call_Reason_Key", typeof(int));
    
            var web_Call_Action_KeyParameter = web_Call_Action_Key.HasValue ?
                new ObjectParameter("Web_Call_Action_Key", web_Call_Action_Key) :
                new ObjectParameter("Web_Call_Action_Key", typeof(int));
    
            var web_Call_Result1_KeyParameter = web_Call_Result1_Key.HasValue ?
                new ObjectParameter("Web_Call_Result1_Key", web_Call_Result1_Key) :
                new ObjectParameter("Web_Call_Result1_Key", typeof(int));
    
            var web_Call_Result2_KeyParameter = web_Call_Result2_Key.HasValue ?
                new ObjectParameter("Web_Call_Result2_Key", web_Call_Result2_Key) :
                new ObjectParameter("Web_Call_Result2_Key", typeof(int));
    
            var web_Call_Rarr_KeyParameter = web_Call_Rarr_Key.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Key", web_Call_Rarr_Key) :
                new ObjectParameter("Web_Call_Rarr_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallBatchCriteriaUpdate", web_Call_BatchTaskCriteria_KeyParameter, web_Call_BatchTask_KeyParameter, criteria_TypeParameter, criteria_ValueParameter, web_Call_Reason_KeyParameter, web_Call_Action_KeyParameter, web_Call_Result1_KeyParameter, web_Call_Result2_KeyParameter, web_Call_Rarr_KeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallBatchTaskActionsLoad_Result> usp_WebCallBatchTaskActionsLoad(Nullable<int> web_Call_BatchTask_Key)
        {
            var web_Call_BatchTask_KeyParameter = web_Call_BatchTask_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTask_Key", web_Call_BatchTask_Key) :
                new ObjectParameter("Web_Call_BatchTask_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallBatchTaskActionsLoad_Result>("usp_WebCallBatchTaskActionsLoad", web_Call_BatchTask_KeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallBatchTaskCriteriaLoad_Result> usp_WebCallBatchTaskCriteriaLoad(Nullable<int> web_Call_BatchTask_Key)
        {
            var web_Call_BatchTask_KeyParameter = web_Call_BatchTask_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTask_Key", web_Call_BatchTask_Key) :
                new ObjectParameter("Web_Call_BatchTask_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallBatchTaskCriteriaLoad_Result>("usp_WebCallBatchTaskCriteriaLoad", web_Call_BatchTask_KeyParameter);
        }
    
        public virtual int usp_WebCallBatchTaskDelete(Nullable<int> web_Call_BatchTask_Key)
        {
            var web_Call_BatchTask_KeyParameter = web_Call_BatchTask_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTask_Key", web_Call_BatchTask_Key) :
                new ObjectParameter("Web_Call_BatchTask_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallBatchTaskDelete", web_Call_BatchTask_KeyParameter);
        }
    
        public virtual int usp_WebCallBatchTaskExecutionHistoryInsert(Nullable<int> web_Call_BatchTask_Key, string criteriaText, string actionText, string targetWorkItemIDs, Nullable<System.DateTime> runDate, string runBy)
        {
            var web_Call_BatchTask_KeyParameter = web_Call_BatchTask_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTask_Key", web_Call_BatchTask_Key) :
                new ObjectParameter("Web_Call_BatchTask_Key", typeof(int));
    
            var criteriaTextParameter = criteriaText != null ?
                new ObjectParameter("CriteriaText", criteriaText) :
                new ObjectParameter("CriteriaText", typeof(string));
    
            var actionTextParameter = actionText != null ?
                new ObjectParameter("ActionText", actionText) :
                new ObjectParameter("ActionText", typeof(string));
    
            var targetWorkItemIDsParameter = targetWorkItemIDs != null ?
                new ObjectParameter("TargetWorkItemIDs", targetWorkItemIDs) :
                new ObjectParameter("TargetWorkItemIDs", typeof(string));
    
            var runDateParameter = runDate.HasValue ?
                new ObjectParameter("RunDate", runDate) :
                new ObjectParameter("RunDate", typeof(System.DateTime));
    
            var runByParameter = runBy != null ?
                new ObjectParameter("RunBy", runBy) :
                new ObjectParameter("RunBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallBatchTaskExecutionHistoryInsert", web_Call_BatchTask_KeyParameter, criteriaTextParameter, actionTextParameter, targetWorkItemIDsParameter, runDateParameter, runByParameter);
        }
    
        public virtual int usp_WebCallBatchTaskInsert(ObjectParameter web_Call_BatchTask_Key, string taskName, Nullable<bool> enabled, Nullable<bool> allowScheduling, string created_By)
        {
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var allowSchedulingParameter = allowScheduling.HasValue ?
                new ObjectParameter("AllowScheduling", allowScheduling) :
                new ObjectParameter("AllowScheduling", typeof(bool));
    
            var created_ByParameter = created_By != null ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallBatchTaskInsert", web_Call_BatchTask_Key, taskNameParameter, enabledParameter, allowSchedulingParameter, created_ByParameter);
        }
    
        public virtual ObjectResult<usp_WebCallBatchTasksLoad_Result> usp_WebCallBatchTasksLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallBatchTasksLoad_Result>("usp_WebCallBatchTasksLoad");
        }
    
        public virtual int usp_WebCallBatchTaskUpdate(Nullable<int> web_Call_BatchTask_Key, string taskName, Nullable<bool> enabled, Nullable<bool> allowScheduling)
        {
            var web_Call_BatchTask_KeyParameter = web_Call_BatchTask_Key.HasValue ?
                new ObjectParameter("Web_Call_BatchTask_Key", web_Call_BatchTask_Key) :
                new ObjectParameter("Web_Call_BatchTask_Key", typeof(int));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var allowSchedulingParameter = allowScheduling.HasValue ?
                new ObjectParameter("AllowScheduling", allowScheduling) :
                new ObjectParameter("AllowScheduling", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallBatchTaskUpdate", web_Call_BatchTask_KeyParameter, taskNameParameter, enabledParameter, allowSchedulingParameter);
        }
    
        public virtual ObjectResult<usp_WebCallBatchTaskWorkItemsLoad_Result> usp_WebCallBatchTaskWorkItemsLoad(string workItemIDs)
        {
            var workItemIDsParameter = workItemIDs != null ?
                new ObjectParameter("WorkItemIDs", workItemIDs) :
                new ObjectParameter("WorkItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallBatchTaskWorkItemsLoad_Result>("usp_WebCallBatchTaskWorkItemsLoad", workItemIDsParameter);
        }
    
        public virtual ObjectResult<usp_WebCallCampaignCategoriesGet_Result> usp_WebCallCampaignCategoriesGet(Nullable<int> campaignId)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallCampaignCategoriesGet_Result>("usp_WebCallCampaignCategoriesGet", campaignIdParameter);
        }
    
        public virtual int usp_WebCallCampaignCategoryDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCampaignCategoryDelete", idParameter);
        }
    
        public virtual int usp_WebCallCampaignCategoryInsert(ObjectParameter id, Nullable<int> campaignId, Nullable<int> categoryId, Nullable<int> sortPriority)
        {
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var sortPriorityParameter = sortPriority.HasValue ?
                new ObjectParameter("SortPriority", sortPriority) :
                new ObjectParameter("SortPriority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCampaignCategoryInsert", id, campaignIdParameter, categoryIdParameter, sortPriorityParameter);
        }
    
        public virtual int usp_WebCallCampaignCategoryUpdate(Nullable<int> id, Nullable<int> campaignId, Nullable<int> categoryId, Nullable<int> sortPriority)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var sortPriorityParameter = sortPriority.HasValue ?
                new ObjectParameter("SortPriority", sortPriority) :
                new ObjectParameter("SortPriority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCampaignCategoryUpdate", idParameter, campaignIdParameter, categoryIdParameter, sortPriorityParameter);
        }
    
        public virtual int usp_WebCallCampaignDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCampaignDelete", idParameter);
        }
    
        public virtual int usp_WebCallCampaignInsert(ObjectParameter id, string campaign)
        {
            var campaignParameter = campaign != null ?
                new ObjectParameter("Campaign", campaign) :
                new ObjectParameter("Campaign", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCampaignInsert", id, campaignParameter);
        }
    
        public virtual ObjectResult<usp_WebCallCampaignsGetList_Result> usp_WebCallCampaignsGetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallCampaignsGetList_Result>("usp_WebCallCampaignsGetList");
        }
    
        public virtual int usp_WebCallCampaignUpdate(Nullable<int> id, string campaign)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var campaignParameter = campaign != null ?
                new ObjectParameter("Campaign", campaign) :
                new ObjectParameter("Campaign", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCampaignUpdate", idParameter, campaignParameter);
        }
    
        public virtual ObjectResult<usp_WebCallCategoriesGetList_Result> usp_WebCallCategoriesGetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallCategoriesGetList_Result>("usp_WebCallCategoriesGetList");
        }
    
        public virtual int usp_WebCallCategoryDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCategoryDelete", idParameter);
        }
    
        public virtual int usp_WebCallCategoryInsert(ObjectParameter id, string category, Nullable<short> sortPriority, Nullable<int> colorRGB, Nullable<bool> dialerUpload, Nullable<int> dialerRefreshMinutes, Nullable<bool> iS_CUJO, Nullable<bool> isCollections, Nullable<bool> resetDaily, Nullable<System.DateTime> lastResetDate)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var sortPriorityParameter = sortPriority.HasValue ?
                new ObjectParameter("SortPriority", sortPriority) :
                new ObjectParameter("SortPriority", typeof(short));
    
            var colorRGBParameter = colorRGB.HasValue ?
                new ObjectParameter("ColorRGB", colorRGB) :
                new ObjectParameter("ColorRGB", typeof(int));
    
            var dialerUploadParameter = dialerUpload.HasValue ?
                new ObjectParameter("DialerUpload", dialerUpload) :
                new ObjectParameter("DialerUpload", typeof(bool));
    
            var dialerRefreshMinutesParameter = dialerRefreshMinutes.HasValue ?
                new ObjectParameter("DialerRefreshMinutes", dialerRefreshMinutes) :
                new ObjectParameter("DialerRefreshMinutes", typeof(int));
    
            var iS_CUJOParameter = iS_CUJO.HasValue ?
                new ObjectParameter("IS_CUJO", iS_CUJO) :
                new ObjectParameter("IS_CUJO", typeof(bool));
    
            var isCollectionsParameter = isCollections.HasValue ?
                new ObjectParameter("IsCollections", isCollections) :
                new ObjectParameter("IsCollections", typeof(bool));
    
            var resetDailyParameter = resetDaily.HasValue ?
                new ObjectParameter("ResetDaily", resetDaily) :
                new ObjectParameter("ResetDaily", typeof(bool));
    
            var lastResetDateParameter = lastResetDate.HasValue ?
                new ObjectParameter("LastResetDate", lastResetDate) :
                new ObjectParameter("LastResetDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCategoryInsert", id, categoryParameter, sortPriorityParameter, colorRGBParameter, dialerUploadParameter, dialerRefreshMinutesParameter, iS_CUJOParameter, isCollectionsParameter, resetDailyParameter, lastResetDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallCategoryLoad_Result> usp_WebCallCategoryLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallCategoryLoad_Result>("usp_WebCallCategoryLoad");
        }
    
        public virtual int usp_WebCallCategoryUpdate(Nullable<int> id, string category, Nullable<short> sortPriority, Nullable<bool> dialerUpload, Nullable<int> dialerRefreshMinutes, Nullable<int> colorRGB, Nullable<bool> iS_CUJO, Nullable<bool> isCollections, Nullable<bool> resetDaily, Nullable<System.DateTime> lastResetDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var sortPriorityParameter = sortPriority.HasValue ?
                new ObjectParameter("SortPriority", sortPriority) :
                new ObjectParameter("SortPriority", typeof(short));
    
            var dialerUploadParameter = dialerUpload.HasValue ?
                new ObjectParameter("DialerUpload", dialerUpload) :
                new ObjectParameter("DialerUpload", typeof(bool));
    
            var dialerRefreshMinutesParameter = dialerRefreshMinutes.HasValue ?
                new ObjectParameter("DialerRefreshMinutes", dialerRefreshMinutes) :
                new ObjectParameter("DialerRefreshMinutes", typeof(int));
    
            var colorRGBParameter = colorRGB.HasValue ?
                new ObjectParameter("ColorRGB", colorRGB) :
                new ObjectParameter("ColorRGB", typeof(int));
    
            var iS_CUJOParameter = iS_CUJO.HasValue ?
                new ObjectParameter("IS_CUJO", iS_CUJO) :
                new ObjectParameter("IS_CUJO", typeof(bool));
    
            var isCollectionsParameter = isCollections.HasValue ?
                new ObjectParameter("IsCollections", isCollections) :
                new ObjectParameter("IsCollections", typeof(bool));
    
            var resetDailyParameter = resetDaily.HasValue ?
                new ObjectParameter("ResetDaily", resetDaily) :
                new ObjectParameter("ResetDaily", typeof(bool));
    
            var lastResetDateParameter = lastResetDate.HasValue ?
                new ObjectParameter("LastResetDate", lastResetDate) :
                new ObjectParameter("LastResetDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCategoryUpdate", idParameter, categoryParameter, sortPriorityParameter, dialerUploadParameter, dialerRefreshMinutesParameter, colorRGBParameter, iS_CUJOParameter, isCollectionsParameter, resetDailyParameter, lastResetDateParameter);
        }
    
        public virtual int usp_WebCallCatRarrAliasDelete(Nullable<int> web_Call_CatRarrAlias_Key)
        {
            var web_Call_CatRarrAlias_KeyParameter = web_Call_CatRarrAlias_Key.HasValue ?
                new ObjectParameter("Web_Call_CatRarrAlias_Key", web_Call_CatRarrAlias_Key) :
                new ObjectParameter("Web_Call_CatRarrAlias_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCatRarrAliasDelete", web_Call_CatRarrAlias_KeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallCatRarrAliasesLoad_Result> usp_WebCallCatRarrAliasesLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallCatRarrAliasesLoad_Result>("usp_WebCallCatRarrAliasesLoad");
        }
    
        public virtual int usp_WebCallCatRarrAliasInsert(ObjectParameter web_Call_CatRarrAlias_Key, string alias_Name, Nullable<int> cATEGORYID, Nullable<int> rEASONID, Nullable<int> aCTIONID, Nullable<int> rESULT1ID, Nullable<int> rESULT2ID, Nullable<int> rARRID)
        {
            var alias_NameParameter = alias_Name != null ?
                new ObjectParameter("Alias_Name", alias_Name) :
                new ObjectParameter("Alias_Name", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var aCTIONIDParameter = aCTIONID.HasValue ?
                new ObjectParameter("ACTIONID", aCTIONID) :
                new ObjectParameter("ACTIONID", typeof(int));
    
            var rESULT1IDParameter = rESULT1ID.HasValue ?
                new ObjectParameter("RESULT1ID", rESULT1ID) :
                new ObjectParameter("RESULT1ID", typeof(int));
    
            var rESULT2IDParameter = rESULT2ID.HasValue ?
                new ObjectParameter("RESULT2ID", rESULT2ID) :
                new ObjectParameter("RESULT2ID", typeof(int));
    
            var rARRIDParameter = rARRID.HasValue ?
                new ObjectParameter("RARRID", rARRID) :
                new ObjectParameter("RARRID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCatRarrAliasInsert", web_Call_CatRarrAlias_Key, alias_NameParameter, cATEGORYIDParameter, rEASONIDParameter, aCTIONIDParameter, rESULT1IDParameter, rESULT2IDParameter, rARRIDParameter);
        }
    
        public virtual int usp_WebCallCatRarrAliasUpdate(Nullable<int> web_Call_CatRarrAlias_Key, string alias_Name, Nullable<int> cATEGORYID, Nullable<int> rEASONID, Nullable<int> aCTIONID, Nullable<int> rESULT1ID, Nullable<int> rESULT2ID, Nullable<int> rARRID)
        {
            var web_Call_CatRarrAlias_KeyParameter = web_Call_CatRarrAlias_Key.HasValue ?
                new ObjectParameter("Web_Call_CatRarrAlias_Key", web_Call_CatRarrAlias_Key) :
                new ObjectParameter("Web_Call_CatRarrAlias_Key", typeof(int));
    
            var alias_NameParameter = alias_Name != null ?
                new ObjectParameter("Alias_Name", alias_Name) :
                new ObjectParameter("Alias_Name", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var aCTIONIDParameter = aCTIONID.HasValue ?
                new ObjectParameter("ACTIONID", aCTIONID) :
                new ObjectParameter("ACTIONID", typeof(int));
    
            var rESULT1IDParameter = rESULT1ID.HasValue ?
                new ObjectParameter("RESULT1ID", rESULT1ID) :
                new ObjectParameter("RESULT1ID", typeof(int));
    
            var rESULT2IDParameter = rESULT2ID.HasValue ?
                new ObjectParameter("RESULT2ID", rESULT2ID) :
                new ObjectParameter("RESULT2ID", typeof(int));
    
            var rARRIDParameter = rARRID.HasValue ?
                new ObjectParameter("RARRID", rARRID) :
                new ObjectParameter("RARRID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCatRarrAliasUpdate", web_Call_CatRarrAlias_KeyParameter, alias_NameParameter, cATEGORYIDParameter, rEASONIDParameter, aCTIONIDParameter, rESULT1IDParameter, rESULT2IDParameter, rARRIDParameter);
        }
    
        public virtual int usp_WebCallChatCannedResponseDelete(Nullable<int> wEB_CALL_CHAT_CANNED_RESPONSES_KEY)
        {
            var wEB_CALL_CHAT_CANNED_RESPONSES_KEYParameter = wEB_CALL_CHAT_CANNED_RESPONSES_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_CHAT_CANNED_RESPONSES_KEY", wEB_CALL_CHAT_CANNED_RESPONSES_KEY) :
                new ObjectParameter("WEB_CALL_CHAT_CANNED_RESPONSES_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatCannedResponseDelete", wEB_CALL_CHAT_CANNED_RESPONSES_KEYParameter);
        }
    
        public virtual ObjectResult<usp_WebCallChatCannedResponseGetList_Result> usp_WebCallChatCannedResponseGetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallChatCannedResponseGetList_Result>("usp_WebCallChatCannedResponseGetList");
        }
    
        public virtual int usp_WebCallChatCannedResponseInsert(ObjectParameter wEB_CALL_CHAT_CANNED_RESPONSES_KEY, string description, Nullable<short> sortPriority)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sortPriorityParameter = sortPriority.HasValue ?
                new ObjectParameter("SortPriority", sortPriority) :
                new ObjectParameter("SortPriority", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatCannedResponseInsert", wEB_CALL_CHAT_CANNED_RESPONSES_KEY, descriptionParameter, sortPriorityParameter);
        }
    
        public virtual int usp_WebCallChatCannedResponseUpdate(Nullable<int> wEB_CALL_CHAT_CANNED_RESPONSES_KEY, string description, Nullable<short> sortPriority)
        {
            var wEB_CALL_CHAT_CANNED_RESPONSES_KEYParameter = wEB_CALL_CHAT_CANNED_RESPONSES_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_CHAT_CANNED_RESPONSES_KEY", wEB_CALL_CHAT_CANNED_RESPONSES_KEY) :
                new ObjectParameter("WEB_CALL_CHAT_CANNED_RESPONSES_KEY", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sortPriorityParameter = sortPriority.HasValue ?
                new ObjectParameter("SortPriority", sortPriority) :
                new ObjectParameter("SortPriority", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatCannedResponseUpdate", wEB_CALL_CHAT_CANNED_RESPONSES_KEYParameter, descriptionParameter, sortPriorityParameter);
        }
    
        public virtual ObjectResult<usp_WebCallChatConfigurationLoad_Result> usp_WebCallChatConfigurationLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallChatConfigurationLoad_Result>("usp_WebCallChatConfigurationLoad");
        }
    
        public virtual ObjectResult<usp_WebCallChatGetMessages_Result> usp_WebCallChatGetMessages(Nullable<System.Guid> sESSIONID)
        {
            var sESSIONIDParameter = sESSIONID.HasValue ?
                new ObjectParameter("SESSIONID", sESSIONID) :
                new ObjectParameter("SESSIONID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallChatGetMessages_Result>("usp_WebCallChatGetMessages", sESSIONIDParameter);
        }
    
        public virtual ObjectResult<usp_WebCallChatGetSession_Result> usp_WebCallChatGetSession(Nullable<System.Guid> sESSIONID)
        {
            var sESSIONIDParameter = sESSIONID.HasValue ?
                new ObjectParameter("SESSIONID", sESSIONID) :
                new ObjectParameter("SESSIONID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallChatGetSession_Result>("usp_WebCallChatGetSession", sESSIONIDParameter);
        }
    
        public virtual ObjectResult<usp_WebCallChatGetStatus_Result> usp_WebCallChatGetStatus(Nullable<System.Guid> sESSIONID, Nullable<int> sTATUSTYPE)
        {
            var sESSIONIDParameter = sESSIONID.HasValue ?
                new ObjectParameter("SESSIONID", sESSIONID) :
                new ObjectParameter("SESSIONID", typeof(System.Guid));
    
            var sTATUSTYPEParameter = sTATUSTYPE.HasValue ?
                new ObjectParameter("STATUSTYPE", sTATUSTYPE) :
                new ObjectParameter("STATUSTYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallChatGetStatus_Result>("usp_WebCallChatGetStatus", sESSIONIDParameter, sTATUSTYPEParameter);
        }
    
        public virtual ObjectResult<usp_WebCallChatHistoryLoad_Result> usp_WebCallChatHistoryLoad(Nullable<int> cUSTOMERID, Nullable<int> vISITORID, Nullable<int> lOANAPPID)
        {
            var cUSTOMERIDParameter = cUSTOMERID.HasValue ?
                new ObjectParameter("CUSTOMERID", cUSTOMERID) :
                new ObjectParameter("CUSTOMERID", typeof(int));
    
            var vISITORIDParameter = vISITORID.HasValue ?
                new ObjectParameter("VISITORID", vISITORID) :
                new ObjectParameter("VISITORID", typeof(int));
    
            var lOANAPPIDParameter = lOANAPPID.HasValue ?
                new ObjectParameter("LOANAPPID", lOANAPPID) :
                new ObjectParameter("LOANAPPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallChatHistoryLoad_Result>("usp_WebCallChatHistoryLoad", cUSTOMERIDParameter, vISITORIDParameter, lOANAPPIDParameter);
        }
    
        public virtual int usp_WebCallChatInsertMessage(Nullable<System.Guid> sESSIONID, string mESSAGE)
        {
            var sESSIONIDParameter = sESSIONID.HasValue ?
                new ObjectParameter("SESSIONID", sESSIONID) :
                new ObjectParameter("SESSIONID", typeof(System.Guid));
    
            var mESSAGEParameter = mESSAGE != null ?
                new ObjectParameter("MESSAGE", mESSAGE) :
                new ObjectParameter("MESSAGE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatInsertMessage", sESSIONIDParameter, mESSAGEParameter);
        }
    
        public virtual int usp_WebCallChatInsertSession(Nullable<System.Guid> sESSIONID, Nullable<int> wORKITEMID, string cSRID, Nullable<int> cHATUSERID, Nullable<System.DateTime> dATEREQUESTED, Nullable<System.DateTime> dATEACCEPTED, Nullable<System.DateTime> dATEENDED, Nullable<int> cHATTOPICID)
        {
            var sESSIONIDParameter = sESSIONID.HasValue ?
                new ObjectParameter("SESSIONID", sESSIONID) :
                new ObjectParameter("SESSIONID", typeof(System.Guid));
    
            var wORKITEMIDParameter = wORKITEMID.HasValue ?
                new ObjectParameter("WORKITEMID", wORKITEMID) :
                new ObjectParameter("WORKITEMID", typeof(int));
    
            var cSRIDParameter = cSRID != null ?
                new ObjectParameter("CSRID", cSRID) :
                new ObjectParameter("CSRID", typeof(string));
    
            var cHATUSERIDParameter = cHATUSERID.HasValue ?
                new ObjectParameter("CHATUSERID", cHATUSERID) :
                new ObjectParameter("CHATUSERID", typeof(int));
    
            var dATEREQUESTEDParameter = dATEREQUESTED.HasValue ?
                new ObjectParameter("DATEREQUESTED", dATEREQUESTED) :
                new ObjectParameter("DATEREQUESTED", typeof(System.DateTime));
    
            var dATEACCEPTEDParameter = dATEACCEPTED.HasValue ?
                new ObjectParameter("DATEACCEPTED", dATEACCEPTED) :
                new ObjectParameter("DATEACCEPTED", typeof(System.DateTime));
    
            var dATEENDEDParameter = dATEENDED.HasValue ?
                new ObjectParameter("DATEENDED", dATEENDED) :
                new ObjectParameter("DATEENDED", typeof(System.DateTime));
    
            var cHATTOPICIDParameter = cHATTOPICID.HasValue ?
                new ObjectParameter("CHATTOPICID", cHATTOPICID) :
                new ObjectParameter("CHATTOPICID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatInsertSession", sESSIONIDParameter, wORKITEMIDParameter, cSRIDParameter, cHATUSERIDParameter, dATEREQUESTEDParameter, dATEACCEPTEDParameter, dATEENDEDParameter, cHATTOPICIDParameter);
        }
    
        public virtual int usp_WebCallChatInsertStatus(ObjectParameter iD, Nullable<System.Guid> sESSIONID, string mESSAGE, Nullable<int> sTATUSTYPE, Nullable<int> sTATUSSENDERID, ObjectParameter sTATUSDATE)
        {
            var sESSIONIDParameter = sESSIONID.HasValue ?
                new ObjectParameter("SESSIONID", sESSIONID) :
                new ObjectParameter("SESSIONID", typeof(System.Guid));
    
            var mESSAGEParameter = mESSAGE != null ?
                new ObjectParameter("MESSAGE", mESSAGE) :
                new ObjectParameter("MESSAGE", typeof(string));
    
            var sTATUSTYPEParameter = sTATUSTYPE.HasValue ?
                new ObjectParameter("STATUSTYPE", sTATUSTYPE) :
                new ObjectParameter("STATUSTYPE", typeof(int));
    
            var sTATUSSENDERIDParameter = sTATUSSENDERID.HasValue ?
                new ObjectParameter("STATUSSENDERID", sTATUSSENDERID) :
                new ObjectParameter("STATUSSENDERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatInsertStatus", iD, sESSIONIDParameter, mESSAGEParameter, sTATUSTYPEParameter, sTATUSSENDERIDParameter, sTATUSDATE);
        }
    
        public virtual ObjectResult<usp_WebCallChatLoadUser_Result> usp_WebCallChatLoadUser(string eMAILADDRESS)
        {
            var eMAILADDRESSParameter = eMAILADDRESS != null ?
                new ObjectParameter("EMAILADDRESS", eMAILADDRESS) :
                new ObjectParameter("EMAILADDRESS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallChatLoadUser_Result>("usp_WebCallChatLoadUser", eMAILADDRESSParameter);
        }
    
        public virtual ObjectResult<usp_WebCallChatLoadUserById_Result> usp_WebCallChatLoadUserById(Nullable<int> wEB_CALL_CHAT_USER_KEY)
        {
            var wEB_CALL_CHAT_USER_KEYParameter = wEB_CALL_CHAT_USER_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_CHAT_USER_KEY", wEB_CALL_CHAT_USER_KEY) :
                new ObjectParameter("WEB_CALL_CHAT_USER_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallChatLoadUserById_Result>("usp_WebCallChatLoadUserById", wEB_CALL_CHAT_USER_KEYParameter);
        }
    
        public virtual int usp_WebCallChatRegisterUser(ObjectParameter iD, string uSERNAME, string eMAILADDRESS, string pHONENUMBER)
        {
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var eMAILADDRESSParameter = eMAILADDRESS != null ?
                new ObjectParameter("EMAILADDRESS", eMAILADDRESS) :
                new ObjectParameter("EMAILADDRESS", typeof(string));
    
            var pHONENUMBERParameter = pHONENUMBER != null ?
                new ObjectParameter("PHONENUMBER", pHONENUMBER) :
                new ObjectParameter("PHONENUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatRegisterUser", iD, uSERNAMEParameter, eMAILADDRESSParameter, pHONENUMBERParameter);
        }
    
        public virtual int usp_WebCallChatTopicDelete(Nullable<int> wEB_CALL_CHAT_TOPICS_KEY)
        {
            var wEB_CALL_CHAT_TOPICS_KEYParameter = wEB_CALL_CHAT_TOPICS_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_CHAT_TOPICS_KEY", wEB_CALL_CHAT_TOPICS_KEY) :
                new ObjectParameter("WEB_CALL_CHAT_TOPICS_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatTopicDelete", wEB_CALL_CHAT_TOPICS_KEYParameter);
        }
    
        public virtual ObjectResult<usp_WebCallChatTopicGetList_Result> usp_WebCallChatTopicGetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallChatTopicGetList_Result>("usp_WebCallChatTopicGetList");
        }
    
        public virtual int usp_WebCallChatTopicInsert(ObjectParameter wEB_CALL_CHAT_TOPICS_KEY, string description, Nullable<short> sortPriority)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sortPriorityParameter = sortPriority.HasValue ?
                new ObjectParameter("SortPriority", sortPriority) :
                new ObjectParameter("SortPriority", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatTopicInsert", wEB_CALL_CHAT_TOPICS_KEY, descriptionParameter, sortPriorityParameter);
        }
    
        public virtual int usp_WebCallChatTopicUpdate(Nullable<int> wEB_CALL_CHAT_TOPICS_KEY, string description, Nullable<short> sortPriority)
        {
            var wEB_CALL_CHAT_TOPICS_KEYParameter = wEB_CALL_CHAT_TOPICS_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_CHAT_TOPICS_KEY", wEB_CALL_CHAT_TOPICS_KEY) :
                new ObjectParameter("WEB_CALL_CHAT_TOPICS_KEY", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var sortPriorityParameter = sortPriority.HasValue ?
                new ObjectParameter("SortPriority", sortPriority) :
                new ObjectParameter("SortPriority", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatTopicUpdate", wEB_CALL_CHAT_TOPICS_KEYParameter, descriptionParameter, sortPriorityParameter);
        }
    
        public virtual int usp_WebCallChatUpdateSession(Nullable<System.Guid> sESSIONID, Nullable<int> wORKITEMID, string cSRID, Nullable<int> cHATUSERID, Nullable<System.DateTime> dATEREQUESTED, Nullable<System.DateTime> dATEACCEPTED, Nullable<System.DateTime> dATEENDED, Nullable<int> cHATTOPICID)
        {
            var sESSIONIDParameter = sESSIONID.HasValue ?
                new ObjectParameter("SESSIONID", sESSIONID) :
                new ObjectParameter("SESSIONID", typeof(System.Guid));
    
            var wORKITEMIDParameter = wORKITEMID.HasValue ?
                new ObjectParameter("WORKITEMID", wORKITEMID) :
                new ObjectParameter("WORKITEMID", typeof(int));
    
            var cSRIDParameter = cSRID != null ?
                new ObjectParameter("CSRID", cSRID) :
                new ObjectParameter("CSRID", typeof(string));
    
            var cHATUSERIDParameter = cHATUSERID.HasValue ?
                new ObjectParameter("CHATUSERID", cHATUSERID) :
                new ObjectParameter("CHATUSERID", typeof(int));
    
            var dATEREQUESTEDParameter = dATEREQUESTED.HasValue ?
                new ObjectParameter("DATEREQUESTED", dATEREQUESTED) :
                new ObjectParameter("DATEREQUESTED", typeof(System.DateTime));
    
            var dATEACCEPTEDParameter = dATEACCEPTED.HasValue ?
                new ObjectParameter("DATEACCEPTED", dATEACCEPTED) :
                new ObjectParameter("DATEACCEPTED", typeof(System.DateTime));
    
            var dATEENDEDParameter = dATEENDED.HasValue ?
                new ObjectParameter("DATEENDED", dATEENDED) :
                new ObjectParameter("DATEENDED", typeof(System.DateTime));
    
            var cHATTOPICIDParameter = cHATTOPICID.HasValue ?
                new ObjectParameter("CHATTOPICID", cHATTOPICID) :
                new ObjectParameter("CHATTOPICID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatUpdateSession", sESSIONIDParameter, wORKITEMIDParameter, cSRIDParameter, cHATUSERIDParameter, dATEREQUESTEDParameter, dATEACCEPTEDParameter, dATEENDEDParameter, cHATTOPICIDParameter);
        }
    
        public virtual int usp_WebCallChatUpdateUser(Nullable<int> iD, string uSERNAME, string eMAILADDRESS, string pHONENUMBER)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var eMAILADDRESSParameter = eMAILADDRESS != null ?
                new ObjectParameter("EMAILADDRESS", eMAILADDRESS) :
                new ObjectParameter("EMAILADDRESS", typeof(string));
    
            var pHONENUMBERParameter = pHONENUMBER != null ?
                new ObjectParameter("PHONENUMBER", pHONENUMBER) :
                new ObjectParameter("PHONENUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallChatUpdateUser", iDParameter, uSERNAMEParameter, eMAILADDRESSParameter, pHONENUMBERParameter);
        }
    
        public virtual int usp_WebCallCloseOpenCustomerIssues(Nullable<int> parentWorkQueueId, Nullable<int> visitorId, Nullable<int> customerId, string currentUser, Nullable<int> workItemType)
        {
            var parentWorkQueueIdParameter = parentWorkQueueId.HasValue ?
                new ObjectParameter("ParentWorkQueueId", parentWorkQueueId) :
                new ObjectParameter("ParentWorkQueueId", typeof(int));
    
            var visitorIdParameter = visitorId.HasValue ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var currentUserParameter = currentUser != null ?
                new ObjectParameter("CurrentUser", currentUser) :
                new ObjectParameter("CurrentUser", typeof(string));
    
            var workItemTypeParameter = workItemType.HasValue ?
                new ObjectParameter("WorkItemType", workItemType) :
                new ObjectParameter("WorkItemType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCloseOpenCustomerIssues", parentWorkQueueIdParameter, visitorIdParameter, customerIdParameter, currentUserParameter, workItemTypeParameter);
        }
    
        public virtual int usp_WebCallCommunicationHistoryLoad(Nullable<int> customerId, Nullable<int> visitorId, Nullable<int> applicationId, Nullable<int> workItemId, Nullable<int> loanId, Nullable<int> rARRCustomerId, Nullable<int> rARRVisitorId, Nullable<bool> includeLoanHistory, Nullable<bool> includeOPTPlusHistory, Nullable<bool> includeCUROHistory, Nullable<bool> includeDialerHistory, Nullable<bool> includeRARRHistoryByCustomer, Nullable<bool> includeVRFYHistory)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var visitorIdParameter = visitorId.HasValue ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(int));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(int));
    
            var workItemIdParameter = workItemId.HasValue ?
                new ObjectParameter("WorkItemId", workItemId) :
                new ObjectParameter("WorkItemId", typeof(int));
    
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("LoanId", loanId) :
                new ObjectParameter("LoanId", typeof(int));
    
            var rARRCustomerIdParameter = rARRCustomerId.HasValue ?
                new ObjectParameter("RARRCustomerId", rARRCustomerId) :
                new ObjectParameter("RARRCustomerId", typeof(int));
    
            var rARRVisitorIdParameter = rARRVisitorId.HasValue ?
                new ObjectParameter("RARRVisitorId", rARRVisitorId) :
                new ObjectParameter("RARRVisitorId", typeof(int));
    
            var includeLoanHistoryParameter = includeLoanHistory.HasValue ?
                new ObjectParameter("IncludeLoanHistory", includeLoanHistory) :
                new ObjectParameter("IncludeLoanHistory", typeof(bool));
    
            var includeOPTPlusHistoryParameter = includeOPTPlusHistory.HasValue ?
                new ObjectParameter("IncludeOPTPlusHistory", includeOPTPlusHistory) :
                new ObjectParameter("IncludeOPTPlusHistory", typeof(bool));
    
            var includeCUROHistoryParameter = includeCUROHistory.HasValue ?
                new ObjectParameter("IncludeCUROHistory", includeCUROHistory) :
                new ObjectParameter("IncludeCUROHistory", typeof(bool));
    
            var includeDialerHistoryParameter = includeDialerHistory.HasValue ?
                new ObjectParameter("IncludeDialerHistory", includeDialerHistory) :
                new ObjectParameter("IncludeDialerHistory", typeof(bool));
    
            var includeRARRHistoryByCustomerParameter = includeRARRHistoryByCustomer.HasValue ?
                new ObjectParameter("IncludeRARRHistoryByCustomer", includeRARRHistoryByCustomer) :
                new ObjectParameter("IncludeRARRHistoryByCustomer", typeof(bool));
    
            var includeVRFYHistoryParameter = includeVRFYHistory.HasValue ?
                new ObjectParameter("IncludeVRFYHistory", includeVRFYHistory) :
                new ObjectParameter("IncludeVRFYHistory", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCommunicationHistoryLoad", customerIdParameter, visitorIdParameter, applicationIdParameter, workItemIdParameter, loanIdParameter, rARRCustomerIdParameter, rARRVisitorIdParameter, includeLoanHistoryParameter, includeOPTPlusHistoryParameter, includeCUROHistoryParameter, includeDialerHistoryParameter, includeRARRHistoryByCustomerParameter, includeVRFYHistoryParameter);
        }
    
        public virtual int usp_WebCallCSRLoanAppCreditCard(string teller, Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCSRLoanAppCreditCard", tellerParameter, beginDateParameter, endDateParameter);
        }
    
        public virtual int usp_WebCallCSRReportColumnDelete(Nullable<int> web_Call_CSRReport_Columns_Key)
        {
            var web_Call_CSRReport_Columns_KeyParameter = web_Call_CSRReport_Columns_Key.HasValue ?
                new ObjectParameter("Web_Call_CSRReport_Columns_Key", web_Call_CSRReport_Columns_Key) :
                new ObjectParameter("Web_Call_CSRReport_Columns_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCSRReportColumnDelete", web_Call_CSRReport_Columns_KeyParameter);
        }
    
        public virtual int usp_WebCallCSRReportColumnInsert(ObjectParameter web_Call_CSRReport_Columns_Key, string columnName)
        {
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCSRReportColumnInsert", web_Call_CSRReport_Columns_Key, columnNameParameter);
        }
    
        public virtual int usp_WebCallCSRReportColumnRarrDelete(Nullable<int> web_Call_CSRReport_ColumnRARR_Key)
        {
            var web_Call_CSRReport_ColumnRARR_KeyParameter = web_Call_CSRReport_ColumnRARR_Key.HasValue ?
                new ObjectParameter("Web_Call_CSRReport_ColumnRARR_Key", web_Call_CSRReport_ColumnRARR_Key) :
                new ObjectParameter("Web_Call_CSRReport_ColumnRARR_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCSRReportColumnRarrDelete", web_Call_CSRReport_ColumnRARR_KeyParameter);
        }
    
        public virtual int usp_WebCallCSRReportColumnRarrInsert(ObjectParameter web_Call_CSRReport_ColumnRARR_Key, Nullable<int> web_Call_CSRReport_Columns_Key, Nullable<int> web_Call_RARR_Key)
        {
            var web_Call_CSRReport_Columns_KeyParameter = web_Call_CSRReport_Columns_Key.HasValue ?
                new ObjectParameter("Web_Call_CSRReport_Columns_Key", web_Call_CSRReport_Columns_Key) :
                new ObjectParameter("Web_Call_CSRReport_Columns_Key", typeof(int));
    
            var web_Call_RARR_KeyParameter = web_Call_RARR_Key.HasValue ?
                new ObjectParameter("Web_Call_RARR_Key", web_Call_RARR_Key) :
                new ObjectParameter("Web_Call_RARR_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCSRReportColumnRarrInsert", web_Call_CSRReport_ColumnRARR_Key, web_Call_CSRReport_Columns_KeyParameter, web_Call_RARR_KeyParameter);
        }
    
        public virtual int usp_WebCallCSRReportColumnRarrUpdate(Nullable<int> web_Call_CSRReport_ColumnRARR_Key, Nullable<int> web_Call_CSRReport_Columns_Key, Nullable<int> web_Call_RARR_Key)
        {
            var web_Call_CSRReport_ColumnRARR_KeyParameter = web_Call_CSRReport_ColumnRARR_Key.HasValue ?
                new ObjectParameter("Web_Call_CSRReport_ColumnRARR_Key", web_Call_CSRReport_ColumnRARR_Key) :
                new ObjectParameter("Web_Call_CSRReport_ColumnRARR_Key", typeof(int));
    
            var web_Call_CSRReport_Columns_KeyParameter = web_Call_CSRReport_Columns_Key.HasValue ?
                new ObjectParameter("Web_Call_CSRReport_Columns_Key", web_Call_CSRReport_Columns_Key) :
                new ObjectParameter("Web_Call_CSRReport_Columns_Key", typeof(int));
    
            var web_Call_RARR_KeyParameter = web_Call_RARR_Key.HasValue ?
                new ObjectParameter("Web_Call_RARR_Key", web_Call_RARR_Key) :
                new ObjectParameter("Web_Call_RARR_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCSRReportColumnRarrUpdate", web_Call_CSRReport_ColumnRARR_KeyParameter, web_Call_CSRReport_Columns_KeyParameter, web_Call_RARR_KeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallCSRReportColumnsLoad_Result> usp_WebCallCSRReportColumnsLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallCSRReportColumnsLoad_Result>("usp_WebCallCSRReportColumnsLoad");
        }
    
        public virtual int usp_WebCallCSRReportColumnUpdate(Nullable<int> web_Call_CSRReport_Columns_Key, string columnName)
        {
            var web_Call_CSRReport_Columns_KeyParameter = web_Call_CSRReport_Columns_Key.HasValue ?
                new ObjectParameter("Web_Call_CSRReport_Columns_Key", web_Call_CSRReport_Columns_Key) :
                new ObjectParameter("Web_Call_CSRReport_Columns_Key", typeof(int));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallCSRReportColumnUpdate", web_Call_CSRReport_Columns_KeyParameter, columnNameParameter);
        }
    
        public virtual int usp_WebCallDDContactUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallDDContactUpdate");
        }
    
        public virtual int usp_WebCallDDSetupComplete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallDDSetupComplete");
        }
    
        public virtual int usp_WebCallDDWelcome()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallDDWelcome");
        }
    
        public virtual int usp_WebCallDialerResultTypeInsert(ObjectParameter web_Dialer_Result_Type_Key, string name, Nullable<bool> enabled, Nullable<bool> system)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var systemParameter = system.HasValue ?
                new ObjectParameter("System", system) :
                new ObjectParameter("System", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallDialerResultTypeInsert", web_Dialer_Result_Type_Key, nameParameter, enabledParameter, systemParameter);
        }
    
        public virtual ObjectResult<usp_WebCallDialerResultTypesLoad_Result> usp_WebCallDialerResultTypesLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallDialerResultTypesLoad_Result>("usp_WebCallDialerResultTypesLoad");
        }
    
        public virtual int usp_WebCallDialerResultTypeUpdate(Nullable<int> web_Dialer_Result_Type_Key, string name, Nullable<bool> enabled, Nullable<bool> system)
        {
            var web_Dialer_Result_Type_KeyParameter = web_Dialer_Result_Type_Key.HasValue ?
                new ObjectParameter("Web_Dialer_Result_Type_Key", web_Dialer_Result_Type_Key) :
                new ObjectParameter("Web_Dialer_Result_Type_Key", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var systemParameter = system.HasValue ?
                new ObjectParameter("System", system) :
                new ObjectParameter("System", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallDialerResultTypeUpdate", web_Dialer_Result_Type_KeyParameter, nameParameter, enabledParameter, systemParameter);
        }
    
        public virtual int usp_WebCallDualAuthDelete(Nullable<int> web_Call_DualAuthId)
        {
            var web_Call_DualAuthIdParameter = web_Call_DualAuthId.HasValue ?
                new ObjectParameter("Web_Call_DualAuthId", web_Call_DualAuthId) :
                new ObjectParameter("Web_Call_DualAuthId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallDualAuthDelete", web_Call_DualAuthIdParameter);
        }
    
        public virtual int usp_WebCallDualAuthFeatureUpdate(Nullable<int> web_Call_Features_Key, Nullable<bool> cSRDualAuthEnabled, Nullable<bool> supDualAuthEnabled)
        {
            var web_Call_Features_KeyParameter = web_Call_Features_Key.HasValue ?
                new ObjectParameter("Web_Call_Features_Key", web_Call_Features_Key) :
                new ObjectParameter("Web_Call_Features_Key", typeof(int));
    
            var cSRDualAuthEnabledParameter = cSRDualAuthEnabled.HasValue ?
                new ObjectParameter("CSRDualAuthEnabled", cSRDualAuthEnabled) :
                new ObjectParameter("CSRDualAuthEnabled", typeof(bool));
    
            var supDualAuthEnabledParameter = supDualAuthEnabled.HasValue ?
                new ObjectParameter("SupDualAuthEnabled", supDualAuthEnabled) :
                new ObjectParameter("SupDualAuthEnabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallDualAuthFeatureUpdate", web_Call_Features_KeyParameter, cSRDualAuthEnabledParameter, supDualAuthEnabledParameter);
        }
    
        public virtual int usp_WebCallDualAuthInsert(ObjectParameter web_Call_DualAuthId, Nullable<int> featureId, Nullable<int> customerId, Nullable<int> visitorId, Nullable<int> loanId, Nullable<decimal> loanAmount, string requestedBy, string authorizedBy, Nullable<System.DateTime> authorizedDate)
        {
            var featureIdParameter = featureId.HasValue ?
                new ObjectParameter("FeatureId", featureId) :
                new ObjectParameter("FeatureId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var visitorIdParameter = visitorId.HasValue ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(int));
    
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("LoanId", loanId) :
                new ObjectParameter("LoanId", typeof(int));
    
            var loanAmountParameter = loanAmount.HasValue ?
                new ObjectParameter("LoanAmount", loanAmount) :
                new ObjectParameter("LoanAmount", typeof(decimal));
    
            var requestedByParameter = requestedBy != null ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(string));
    
            var authorizedByParameter = authorizedBy != null ?
                new ObjectParameter("AuthorizedBy", authorizedBy) :
                new ObjectParameter("AuthorizedBy", typeof(string));
    
            var authorizedDateParameter = authorizedDate.HasValue ?
                new ObjectParameter("AuthorizedDate", authorizedDate) :
                new ObjectParameter("AuthorizedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallDualAuthInsert", web_Call_DualAuthId, featureIdParameter, customerIdParameter, visitorIdParameter, loanIdParameter, loanAmountParameter, requestedByParameter, authorizedByParameter, authorizedDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallDualAuthLoad_Result> usp_WebCallDualAuthLoad(Nullable<int> web_Call_DualAuthId)
        {
            var web_Call_DualAuthIdParameter = web_Call_DualAuthId.HasValue ?
                new ObjectParameter("Web_Call_DualAuthId", web_Call_DualAuthId) :
                new ObjectParameter("Web_Call_DualAuthId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallDualAuthLoad_Result>("usp_WebCallDualAuthLoad", web_Call_DualAuthIdParameter);
        }
    
        public virtual int usp_WebCallDualAuthRarrFeaturesUpdate(Nullable<int> web_Call_Features_Key, Nullable<bool> cSRDualAuthEnabled, Nullable<bool> supDualAuthEnabled)
        {
            var web_Call_Features_KeyParameter = web_Call_Features_Key.HasValue ?
                new ObjectParameter("Web_Call_Features_Key", web_Call_Features_Key) :
                new ObjectParameter("Web_Call_Features_Key", typeof(int));
    
            var cSRDualAuthEnabledParameter = cSRDualAuthEnabled.HasValue ?
                new ObjectParameter("CSRDualAuthEnabled", cSRDualAuthEnabled) :
                new ObjectParameter("CSRDualAuthEnabled", typeof(bool));
    
            var supDualAuthEnabledParameter = supDualAuthEnabled.HasValue ?
                new ObjectParameter("SupDualAuthEnabled", supDualAuthEnabled) :
                new ObjectParameter("SupDualAuthEnabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallDualAuthRarrFeaturesUpdate", web_Call_Features_KeyParameter, cSRDualAuthEnabledParameter, supDualAuthEnabledParameter);
        }
    
        public virtual int usp_WebCallDualAuthUpdate(Nullable<int> web_Call_DualAuthId, Nullable<int> featureId, Nullable<int> customerId, Nullable<int> visitorId, Nullable<int> loanId, Nullable<decimal> loanAmount, string requestedBy, string authorizedBy, Nullable<System.DateTime> authorizedDate)
        {
            var web_Call_DualAuthIdParameter = web_Call_DualAuthId.HasValue ?
                new ObjectParameter("Web_Call_DualAuthId", web_Call_DualAuthId) :
                new ObjectParameter("Web_Call_DualAuthId", typeof(int));
    
            var featureIdParameter = featureId.HasValue ?
                new ObjectParameter("FeatureId", featureId) :
                new ObjectParameter("FeatureId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var visitorIdParameter = visitorId.HasValue ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(int));
    
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("LoanId", loanId) :
                new ObjectParameter("LoanId", typeof(int));
    
            var loanAmountParameter = loanAmount.HasValue ?
                new ObjectParameter("LoanAmount", loanAmount) :
                new ObjectParameter("LoanAmount", typeof(decimal));
    
            var requestedByParameter = requestedBy != null ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(string));
    
            var authorizedByParameter = authorizedBy != null ?
                new ObjectParameter("AuthorizedBy", authorizedBy) :
                new ObjectParameter("AuthorizedBy", typeof(string));
    
            var authorizedDateParameter = authorizedDate.HasValue ?
                new ObjectParameter("AuthorizedDate", authorizedDate) :
                new ObjectParameter("AuthorizedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallDualAuthUpdate", web_Call_DualAuthIdParameter, featureIdParameter, customerIdParameter, visitorIdParameter, loanIdParameter, loanAmountParameter, requestedByParameter, authorizedByParameter, authorizedDateParameter);
        }
    
        public virtual int usp_WebCallEmailTemplateDelete(Nullable<int> web_Call_EmailTemplate_Key)
        {
            var web_Call_EmailTemplate_KeyParameter = web_Call_EmailTemplate_Key.HasValue ?
                new ObjectParameter("Web_Call_EmailTemplate_Key", web_Call_EmailTemplate_Key) :
                new ObjectParameter("Web_Call_EmailTemplate_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallEmailTemplateDelete", web_Call_EmailTemplate_KeyParameter);
        }
    
        public virtual int usp_WebCallEmailTemplateInsert(ObjectParameter web_Call_EmailTemplate_Key, string template_Name, string template_Description, string subject, string body, Nullable<bool> is_Body_Html, Nullable<System.DateTime> date_Entered, Nullable<bool> iS_ACTIVE)
        {
            var template_NameParameter = template_Name != null ?
                new ObjectParameter("Template_Name", template_Name) :
                new ObjectParameter("Template_Name", typeof(string));
    
            var template_DescriptionParameter = template_Description != null ?
                new ObjectParameter("Template_Description", template_Description) :
                new ObjectParameter("Template_Description", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var is_Body_HtmlParameter = is_Body_Html.HasValue ?
                new ObjectParameter("Is_Body_Html", is_Body_Html) :
                new ObjectParameter("Is_Body_Html", typeof(bool));
    
            var date_EnteredParameter = date_Entered.HasValue ?
                new ObjectParameter("Date_Entered", date_Entered) :
                new ObjectParameter("Date_Entered", typeof(System.DateTime));
    
            var iS_ACTIVEParameter = iS_ACTIVE.HasValue ?
                new ObjectParameter("IS_ACTIVE", iS_ACTIVE) :
                new ObjectParameter("IS_ACTIVE", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallEmailTemplateInsert", web_Call_EmailTemplate_Key, template_NameParameter, template_DescriptionParameter, subjectParameter, bodyParameter, is_Body_HtmlParameter, date_EnteredParameter, iS_ACTIVEParameter);
        }
    
        public virtual ObjectResult<usp_WebCallEmailTemplatesLoad_Result> usp_WebCallEmailTemplatesLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallEmailTemplatesLoad_Result>("usp_WebCallEmailTemplatesLoad");
        }
    
        public virtual int usp_WebCallEmailTemplateUpdate(Nullable<int> web_Call_EmailTemplate_Key, string template_Name, string template_Description, string subject, string body, Nullable<bool> is_Body_Html, Nullable<bool> iS_ACTIVE)
        {
            var web_Call_EmailTemplate_KeyParameter = web_Call_EmailTemplate_Key.HasValue ?
                new ObjectParameter("Web_Call_EmailTemplate_Key", web_Call_EmailTemplate_Key) :
                new ObjectParameter("Web_Call_EmailTemplate_Key", typeof(int));
    
            var template_NameParameter = template_Name != null ?
                new ObjectParameter("Template_Name", template_Name) :
                new ObjectParameter("Template_Name", typeof(string));
    
            var template_DescriptionParameter = template_Description != null ?
                new ObjectParameter("Template_Description", template_Description) :
                new ObjectParameter("Template_Description", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var is_Body_HtmlParameter = is_Body_Html.HasValue ?
                new ObjectParameter("Is_Body_Html", is_Body_Html) :
                new ObjectParameter("Is_Body_Html", typeof(bool));
    
            var iS_ACTIVEParameter = iS_ACTIVE.HasValue ?
                new ObjectParameter("IS_ACTIVE", iS_ACTIVE) :
                new ObjectParameter("IS_ACTIVE", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallEmailTemplateUpdate", web_Call_EmailTemplate_KeyParameter, template_NameParameter, template_DescriptionParameter, subjectParameter, bodyParameter, is_Body_HtmlParameter, iS_ACTIVEParameter);
        }
    
        public virtual ObjectResult<byte[]> usp_WebCallFAQAttachmentBytesLoad(Nullable<int> web_Call_FAQ_Attachment_Key)
        {
            var web_Call_FAQ_Attachment_KeyParameter = web_Call_FAQ_Attachment_Key.HasValue ?
                new ObjectParameter("Web_Call_FAQ_Attachment_Key", web_Call_FAQ_Attachment_Key) :
                new ObjectParameter("Web_Call_FAQ_Attachment_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("usp_WebCallFAQAttachmentBytesLoad", web_Call_FAQ_Attachment_KeyParameter);
        }
    
        public virtual int usp_WebCallFAQAttachmentDelete(Nullable<int> wEB_CALL_FAQ_Attachment_Key)
        {
            var wEB_CALL_FAQ_Attachment_KeyParameter = wEB_CALL_FAQ_Attachment_Key.HasValue ?
                new ObjectParameter("WEB_CALL_FAQ_Attachment_Key", wEB_CALL_FAQ_Attachment_Key) :
                new ObjectParameter("WEB_CALL_FAQ_Attachment_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallFAQAttachmentDelete", wEB_CALL_FAQ_Attachment_KeyParameter);
        }
    
        public virtual int usp_WebCallFAQAttachmentInsert(ObjectParameter wEB_CALL_FAQ_Attachment_Key, Nullable<int> wEB_CALL_FAQ_Key, byte[] attachment, string attachmentName)
        {
            var wEB_CALL_FAQ_KeyParameter = wEB_CALL_FAQ_Key.HasValue ?
                new ObjectParameter("WEB_CALL_FAQ_Key", wEB_CALL_FAQ_Key) :
                new ObjectParameter("WEB_CALL_FAQ_Key", typeof(int));
    
            var attachmentParameter = attachment != null ?
                new ObjectParameter("Attachment", attachment) :
                new ObjectParameter("Attachment", typeof(byte[]));
    
            var attachmentNameParameter = attachmentName != null ?
                new ObjectParameter("AttachmentName", attachmentName) :
                new ObjectParameter("AttachmentName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallFAQAttachmentInsert", wEB_CALL_FAQ_Attachment_Key, wEB_CALL_FAQ_KeyParameter, attachmentParameter, attachmentNameParameter);
        }
    
        public virtual ObjectResult<usp_WebCallFAQAttachmentsLoad_Result> usp_WebCallFAQAttachmentsLoad(Nullable<int> wEB_CALL_FAQ_Key)
        {
            var wEB_CALL_FAQ_KeyParameter = wEB_CALL_FAQ_Key.HasValue ?
                new ObjectParameter("WEB_CALL_FAQ_Key", wEB_CALL_FAQ_Key) :
                new ObjectParameter("WEB_CALL_FAQ_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallFAQAttachmentsLoad_Result>("usp_WebCallFAQAttachmentsLoad", wEB_CALL_FAQ_KeyParameter);
        }
    
        public virtual int usp_WebCallFAQAttachmentUpdate(Nullable<int> wEB_CALL_FAQ_Attachment_Key, Nullable<int> wEB_CALL_FAQ_Key, byte[] attachment, string attachmentName)
        {
            var wEB_CALL_FAQ_Attachment_KeyParameter = wEB_CALL_FAQ_Attachment_Key.HasValue ?
                new ObjectParameter("WEB_CALL_FAQ_Attachment_Key", wEB_CALL_FAQ_Attachment_Key) :
                new ObjectParameter("WEB_CALL_FAQ_Attachment_Key", typeof(int));
    
            var wEB_CALL_FAQ_KeyParameter = wEB_CALL_FAQ_Key.HasValue ?
                new ObjectParameter("WEB_CALL_FAQ_Key", wEB_CALL_FAQ_Key) :
                new ObjectParameter("WEB_CALL_FAQ_Key", typeof(int));
    
            var attachmentParameter = attachment != null ?
                new ObjectParameter("Attachment", attachment) :
                new ObjectParameter("Attachment", typeof(byte[]));
    
            var attachmentNameParameter = attachmentName != null ?
                new ObjectParameter("AttachmentName", attachmentName) :
                new ObjectParameter("AttachmentName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallFAQAttachmentUpdate", wEB_CALL_FAQ_Attachment_KeyParameter, wEB_CALL_FAQ_KeyParameter, attachmentParameter, attachmentNameParameter);
        }
    
        public virtual int usp_WebCallFAQCategoryDelete(Nullable<int> web_Call_FAQ_Category_Key)
        {
            var web_Call_FAQ_Category_KeyParameter = web_Call_FAQ_Category_Key.HasValue ?
                new ObjectParameter("Web_Call_FAQ_Category_Key", web_Call_FAQ_Category_Key) :
                new ObjectParameter("Web_Call_FAQ_Category_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallFAQCategoryDelete", web_Call_FAQ_Category_KeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallFAQCategoryGetList_Result> usp_WebCallFAQCategoryGetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallFAQCategoryGetList_Result>("usp_WebCallFAQCategoryGetList");
        }
    
        public virtual int usp_WebCallFAQCategoryInsert(ObjectParameter web_Call_FAQ_Category_Key, string fAQ_Category_Description)
        {
            var fAQ_Category_DescriptionParameter = fAQ_Category_Description != null ?
                new ObjectParameter("FAQ_Category_Description", fAQ_Category_Description) :
                new ObjectParameter("FAQ_Category_Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallFAQCategoryInsert", web_Call_FAQ_Category_Key, fAQ_Category_DescriptionParameter);
        }
    
        public virtual ObjectResult<usp_WebCallFAQCategoryLoad_Result> usp_WebCallFAQCategoryLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallFAQCategoryLoad_Result>("usp_WebCallFAQCategoryLoad");
        }
    
        public virtual int usp_WebCallFAQCategoryUpdate(Nullable<int> web_Call_FAQ_Category_Key, string fAQ_Category_Description)
        {
            var web_Call_FAQ_Category_KeyParameter = web_Call_FAQ_Category_Key.HasValue ?
                new ObjectParameter("Web_Call_FAQ_Category_Key", web_Call_FAQ_Category_Key) :
                new ObjectParameter("Web_Call_FAQ_Category_Key", typeof(int));
    
            var fAQ_Category_DescriptionParameter = fAQ_Category_Description != null ?
                new ObjectParameter("FAQ_Category_Description", fAQ_Category_Description) :
                new ObjectParameter("FAQ_Category_Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallFAQCategoryUpdate", web_Call_FAQ_Category_KeyParameter, fAQ_Category_DescriptionParameter);
        }
    
        public virtual int usp_WebCallFAQDelete(Nullable<int> web_Call_FAQ_Key)
        {
            var web_Call_FAQ_KeyParameter = web_Call_FAQ_Key.HasValue ?
                new ObjectParameter("Web_Call_FAQ_Key", web_Call_FAQ_Key) :
                new ObjectParameter("Web_Call_FAQ_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallFAQDelete", web_Call_FAQ_KeyParameter);
        }
    
        public virtual int usp_WebCallFAQInsert(ObjectParameter web_Call_FAQ_Key, Nullable<int> web_Call_FAQ_Category_Key, string fAQ_Title, string fAQ_Content)
        {
            var web_Call_FAQ_Category_KeyParameter = web_Call_FAQ_Category_Key.HasValue ?
                new ObjectParameter("Web_Call_FAQ_Category_Key", web_Call_FAQ_Category_Key) :
                new ObjectParameter("Web_Call_FAQ_Category_Key", typeof(int));
    
            var fAQ_TitleParameter = fAQ_Title != null ?
                new ObjectParameter("FAQ_Title", fAQ_Title) :
                new ObjectParameter("FAQ_Title", typeof(string));
    
            var fAQ_ContentParameter = fAQ_Content != null ?
                new ObjectParameter("FAQ_Content", fAQ_Content) :
                new ObjectParameter("FAQ_Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallFAQInsert", web_Call_FAQ_Key, web_Call_FAQ_Category_KeyParameter, fAQ_TitleParameter, fAQ_ContentParameter);
        }
    
        public virtual ObjectResult<usp_WebCallFAQsLoad_Result> usp_WebCallFAQsLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallFAQsLoad_Result>("usp_WebCallFAQsLoad");
        }
    
        public virtual int usp_WebCallFAQUpdate(Nullable<int> web_Call_FAQ_Key, Nullable<int> web_Call_FAQ_Category_Key, string fAQ_Title, string fAQ_Content)
        {
            var web_Call_FAQ_KeyParameter = web_Call_FAQ_Key.HasValue ?
                new ObjectParameter("Web_Call_FAQ_Key", web_Call_FAQ_Key) :
                new ObjectParameter("Web_Call_FAQ_Key", typeof(int));
    
            var web_Call_FAQ_Category_KeyParameter = web_Call_FAQ_Category_Key.HasValue ?
                new ObjectParameter("Web_Call_FAQ_Category_Key", web_Call_FAQ_Category_Key) :
                new ObjectParameter("Web_Call_FAQ_Category_Key", typeof(int));
    
            var fAQ_TitleParameter = fAQ_Title != null ?
                new ObjectParameter("FAQ_Title", fAQ_Title) :
                new ObjectParameter("FAQ_Title", typeof(string));
    
            var fAQ_ContentParameter = fAQ_Content != null ?
                new ObjectParameter("FAQ_Content", fAQ_Content) :
                new ObjectParameter("FAQ_Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallFAQUpdate", web_Call_FAQ_KeyParameter, web_Call_FAQ_Category_KeyParameter, fAQ_TitleParameter, fAQ_ContentParameter);
        }
    
        public virtual ObjectResult<usp_WebCallFeaturesLoad_Result> usp_WebCallFeaturesLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallFeaturesLoad_Result>("usp_WebCallFeaturesLoad");
        }
    
        public virtual int usp_WebCallGetLastQueueItemCategoryForVisitor(Nullable<int> visitorKey, Nullable<int> workItemType, ObjectParameter lastCategory)
        {
            var visitorKeyParameter = visitorKey.HasValue ?
                new ObjectParameter("VisitorKey", visitorKey) :
                new ObjectParameter("VisitorKey", typeof(int));
    
            var workItemTypeParameter = workItemType.HasValue ?
                new ObjectParameter("WorkItemType", workItemType) :
                new ObjectParameter("WorkItemType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallGetLastQueueItemCategoryForVisitor", visitorKeyParameter, workItemTypeParameter, lastCategory);
        }
    
        public virtual ObjectResult<usp_WebCallGetLoggedInUsers_Result> usp_WebCallGetLoggedInUsers(Nullable<System.DateTime> minimumLoginDate)
        {
            var minimumLoginDateParameter = minimumLoginDate.HasValue ?
                new ObjectParameter("MinimumLoginDate", minimumLoginDate) :
                new ObjectParameter("MinimumLoginDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallGetLoggedInUsers_Result>("usp_WebCallGetLoggedInUsers", minimumLoginDateParameter);
        }
    
        public virtual int usp_WebCallGetMultiSourceCustomerInfo(Nullable<int> queueKey, Nullable<int> appKey, Nullable<int> visitorKey, Nullable<int> customerKey, Nullable<int> loanKey)
        {
            var queueKeyParameter = queueKey.HasValue ?
                new ObjectParameter("QueueKey", queueKey) :
                new ObjectParameter("QueueKey", typeof(int));
    
            var appKeyParameter = appKey.HasValue ?
                new ObjectParameter("AppKey", appKey) :
                new ObjectParameter("AppKey", typeof(int));
    
            var visitorKeyParameter = visitorKey.HasValue ?
                new ObjectParameter("VisitorKey", visitorKey) :
                new ObjectParameter("VisitorKey", typeof(int));
    
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            var loanKeyParameter = loanKey.HasValue ?
                new ObjectParameter("LoanKey", loanKey) :
                new ObjectParameter("LoanKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallGetMultiSourceCustomerInfo", queueKeyParameter, appKeyParameter, visitorKeyParameter, customerKeyParameter, loanKeyParameter);
        }
    
        public virtual int usp_WebCallGetOpenWorkItemKeyByAllSources(Nullable<int> appKey, Nullable<int> visitorKey, Nullable<int> customerKey, ObjectParameter workQueueKey)
        {
            var appKeyParameter = appKey.HasValue ?
                new ObjectParameter("AppKey", appKey) :
                new ObjectParameter("AppKey", typeof(int));
    
            var visitorKeyParameter = visitorKey.HasValue ?
                new ObjectParameter("VisitorKey", visitorKey) :
                new ObjectParameter("VisitorKey", typeof(int));
    
            var customerKeyParameter = customerKey.HasValue ?
                new ObjectParameter("CustomerKey", customerKey) :
                new ObjectParameter("CustomerKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallGetOpenWorkItemKeyByAllSources", appKeyParameter, visitorKeyParameter, customerKeyParameter, workQueueKey);
        }
    
        public virtual int usp_WebCallGetOpenWorkItemKeyByPhoneAndName(string phone, string firstName, string lastName, ObjectParameter workQueueKey)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallGetOpenWorkItemKeyByPhoneAndName", phoneParameter, firstNameParameter, lastNameParameter, workQueueKey);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_WebCallGetOpenWorkItemKeys(Nullable<int> webCallQueueKey, Nullable<int> visitorKey)
        {
            var webCallQueueKeyParameter = webCallQueueKey.HasValue ?
                new ObjectParameter("WebCallQueueKey", webCallQueueKey) :
                new ObjectParameter("WebCallQueueKey", typeof(int));
    
            var visitorKeyParameter = visitorKey.HasValue ?
                new ObjectParameter("VisitorKey", visitorKey) :
                new ObjectParameter("VisitorKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_WebCallGetOpenWorkItemKeys", webCallQueueKeyParameter, visitorKeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallGetRARRId_Result> usp_WebCallGetRARRId(Nullable<int> rEASONID, Nullable<int> aCTIONID, Nullable<int> rESULT1ID, Nullable<int> rESULT2ID)
        {
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var aCTIONIDParameter = aCTIONID.HasValue ?
                new ObjectParameter("ACTIONID", aCTIONID) :
                new ObjectParameter("ACTIONID", typeof(int));
    
            var rESULT1IDParameter = rESULT1ID.HasValue ?
                new ObjectParameter("RESULT1ID", rESULT1ID) :
                new ObjectParameter("RESULT1ID", typeof(int));
    
            var rESULT2IDParameter = rESULT2ID.HasValue ?
                new ObjectParameter("RESULT2ID", rESULT2ID) :
                new ObjectParameter("RESULT2ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallGetRARRId_Result>("usp_WebCallGetRARRId", rEASONIDParameter, aCTIONIDParameter, rESULT1IDParameter, rESULT2IDParameter);
        }
    
        public virtual ObjectResult<usp_WebCallGetRARRsPerCategoryList_Result> usp_WebCallGetRARRsPerCategoryList(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallGetRARRsPerCategoryList_Result>("usp_WebCallGetRARRsPerCategoryList", categoryIdParameter);
        }
    
        public virtual ObjectResult<usp_WebCallIntraChatGetSession_Result> usp_WebCallIntraChatGetSession(Nullable<int> sessionId)
        {
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallIntraChatGetSession_Result>("usp_WebCallIntraChatGetSession", sessionIdParameter);
        }
    
        public virtual ObjectResult<usp_WebCallIntraChatGetSessionMessages_Result> usp_WebCallIntraChatGetSessionMessages(Nullable<int> sessionId)
        {
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallIntraChatGetSessionMessages_Result>("usp_WebCallIntraChatGetSessionMessages", sessionIdParameter);
        }
    
        public virtual ObjectResult<usp_WebCallIntraChatGetUnreadMessages_Result> usp_WebCallIntraChatGetUnreadMessages(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallIntraChatGetUnreadMessages_Result>("usp_WebCallIntraChatGetUnreadMessages", userIdParameter);
        }
    
        public virtual int usp_WebCallIntraChatInsertSession(ObjectParameter web_Call_IntraChat_Session_Key, string from_User_Id, string to_User_Id)
        {
            var from_User_IdParameter = from_User_Id != null ?
                new ObjectParameter("From_User_Id", from_User_Id) :
                new ObjectParameter("From_User_Id", typeof(string));
    
            var to_User_IdParameter = to_User_Id != null ?
                new ObjectParameter("To_User_Id", to_User_Id) :
                new ObjectParameter("To_User_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallIntraChatInsertSession", web_Call_IntraChat_Session_Key, from_User_IdParameter, to_User_IdParameter);
        }
    
        public virtual ObjectResult<usp_WebCallIntraChatMessageHistoryLoad_Result> usp_WebCallIntraChatMessageHistoryLoad(string user_Id, Nullable<System.DateTime> begin_Date, Nullable<System.DateTime> end_Date)
        {
            var user_IdParameter = user_Id != null ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(string));
    
            var begin_DateParameter = begin_Date.HasValue ?
                new ObjectParameter("Begin_Date", begin_Date) :
                new ObjectParameter("Begin_Date", typeof(System.DateTime));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("End_Date", end_Date) :
                new ObjectParameter("End_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallIntraChatMessageHistoryLoad_Result>("usp_WebCallIntraChatMessageHistoryLoad", user_IdParameter, begin_DateParameter, end_DateParameter);
        }
    
        public virtual int usp_WebCallIntraChatSendMessage(Nullable<int> web_Call_IntraChat_Session_Key, string message, string from_User_Id, string to_User_Id)
        {
            var web_Call_IntraChat_Session_KeyParameter = web_Call_IntraChat_Session_Key.HasValue ?
                new ObjectParameter("Web_Call_IntraChat_Session_Key", web_Call_IntraChat_Session_Key) :
                new ObjectParameter("Web_Call_IntraChat_Session_Key", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var from_User_IdParameter = from_User_Id != null ?
                new ObjectParameter("From_User_Id", from_User_Id) :
                new ObjectParameter("From_User_Id", typeof(string));
    
            var to_User_IdParameter = to_User_Id != null ?
                new ObjectParameter("To_User_Id", to_User_Id) :
                new ObjectParameter("To_User_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallIntraChatSendMessage", web_Call_IntraChat_Session_KeyParameter, messageParameter, from_User_IdParameter, to_User_IdParameter);
        }
    
        public virtual int usp_WebCallIntraChatSessionLoginLogOut(Nullable<int> sessionId, string userId, Nullable<bool> loggedIn)
        {
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var loggedInParameter = loggedIn.HasValue ?
                new ObjectParameter("LoggedIn", loggedIn) :
                new ObjectParameter("LoggedIn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallIntraChatSessionLoginLogOut", sessionIdParameter, userIdParameter, loggedInParameter);
        }
    
        public virtual int usp_WebCallInvalidPhoneNumberDelete(Nullable<int> web_Call_Invalid_Phone_Number_Key)
        {
            var web_Call_Invalid_Phone_Number_KeyParameter = web_Call_Invalid_Phone_Number_Key.HasValue ?
                new ObjectParameter("Web_Call_Invalid_Phone_Number_Key", web_Call_Invalid_Phone_Number_Key) :
                new ObjectParameter("Web_Call_Invalid_Phone_Number_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallInvalidPhoneNumberDelete", web_Call_Invalid_Phone_Number_KeyParameter);
        }
    
        public virtual int usp_WebCallInvalidPhoneNumberInsert(ObjectParameter web_Call_Invalid_Phone_Number_Key, string phone_Number, Nullable<System.DateTime> invalid_Until)
        {
            var phone_NumberParameter = phone_Number != null ?
                new ObjectParameter("Phone_Number", phone_Number) :
                new ObjectParameter("Phone_Number", typeof(string));
    
            var invalid_UntilParameter = invalid_Until.HasValue ?
                new ObjectParameter("Invalid_Until", invalid_Until) :
                new ObjectParameter("Invalid_Until", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallInvalidPhoneNumberInsert", web_Call_Invalid_Phone_Number_Key, phone_NumberParameter, invalid_UntilParameter);
        }
    
        public virtual ObjectResult<usp_WebCallInvalidPhoneNumberLoad_Result> usp_WebCallInvalidPhoneNumberLoad(Nullable<int> web_Call_Invalid_Phone_Number_Key)
        {
            var web_Call_Invalid_Phone_Number_KeyParameter = web_Call_Invalid_Phone_Number_Key.HasValue ?
                new ObjectParameter("Web_Call_Invalid_Phone_Number_Key", web_Call_Invalid_Phone_Number_Key) :
                new ObjectParameter("Web_Call_Invalid_Phone_Number_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallInvalidPhoneNumberLoad_Result>("usp_WebCallInvalidPhoneNumberLoad", web_Call_Invalid_Phone_Number_KeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallInvalidPhoneNumberLoadByPhoneNumber_Result> usp_WebCallInvalidPhoneNumberLoadByPhoneNumber(string phone_Number)
        {
            var phone_NumberParameter = phone_Number != null ?
                new ObjectParameter("Phone_Number", phone_Number) :
                new ObjectParameter("Phone_Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallInvalidPhoneNumberLoadByPhoneNumber_Result>("usp_WebCallInvalidPhoneNumberLoadByPhoneNumber", phone_NumberParameter);
        }
    
        public virtual ObjectResult<usp_WebCallInvalidPhoneNumbersLoad_Result> usp_WebCallInvalidPhoneNumbersLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallInvalidPhoneNumbersLoad_Result>("usp_WebCallInvalidPhoneNumbersLoad");
        }
    
        public virtual int usp_WebCallInvalidPhoneNumberUpdate(Nullable<int> web_Call_Invalid_Phone_Number_Key, Nullable<System.DateTime> invalid_Until)
        {
            var web_Call_Invalid_Phone_Number_KeyParameter = web_Call_Invalid_Phone_Number_Key.HasValue ?
                new ObjectParameter("Web_Call_Invalid_Phone_Number_Key", web_Call_Invalid_Phone_Number_Key) :
                new ObjectParameter("Web_Call_Invalid_Phone_Number_Key", typeof(int));
    
            var invalid_UntilParameter = invalid_Until.HasValue ?
                new ObjectParameter("Invalid_Until", invalid_Until) :
                new ObjectParameter("Invalid_Until", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallInvalidPhoneNumberUpdate", web_Call_Invalid_Phone_Number_KeyParameter, invalid_UntilParameter);
        }
    
        public virtual ObjectResult<usp_WebCallLoanAppSourceAppsGetList_Result> usp_WebCallLoanAppSourceAppsGetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallLoanAppSourceAppsGetList_Result>("usp_WebCallLoanAppSourceAppsGetList");
        }
    
        public virtual int usp_WebCallLoanProductConfigDelete(Nullable<int> web_Call_Loan_Product_Config_Key)
        {
            var web_Call_Loan_Product_Config_KeyParameter = web_Call_Loan_Product_Config_Key.HasValue ?
                new ObjectParameter("Web_Call_Loan_Product_Config_Key", web_Call_Loan_Product_Config_Key) :
                new ObjectParameter("Web_Call_Loan_Product_Config_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallLoanProductConfigDelete", web_Call_Loan_Product_Config_KeyParameter);
        }
    
        public virtual int usp_WebCallLoanProductConfigInsert(ObjectParameter web_Call_Loan_Product_Config_Key, Nullable<int> loan_Product_Key, string config_Name, string config_Value, Nullable<int> display_Order, Nullable<bool> supOnly, string currentUserId, string externalLinkCaption, string externalLink)
        {
            var loan_Product_KeyParameter = loan_Product_Key.HasValue ?
                new ObjectParameter("Loan_Product_Key", loan_Product_Key) :
                new ObjectParameter("Loan_Product_Key", typeof(int));
    
            var config_NameParameter = config_Name != null ?
                new ObjectParameter("Config_Name", config_Name) :
                new ObjectParameter("Config_Name", typeof(string));
    
            var config_ValueParameter = config_Value != null ?
                new ObjectParameter("Config_Value", config_Value) :
                new ObjectParameter("Config_Value", typeof(string));
    
            var display_OrderParameter = display_Order.HasValue ?
                new ObjectParameter("Display_Order", display_Order) :
                new ObjectParameter("Display_Order", typeof(int));
    
            var supOnlyParameter = supOnly.HasValue ?
                new ObjectParameter("SupOnly", supOnly) :
                new ObjectParameter("SupOnly", typeof(bool));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var externalLinkCaptionParameter = externalLinkCaption != null ?
                new ObjectParameter("ExternalLinkCaption", externalLinkCaption) :
                new ObjectParameter("ExternalLinkCaption", typeof(string));
    
            var externalLinkParameter = externalLink != null ?
                new ObjectParameter("ExternalLink", externalLink) :
                new ObjectParameter("ExternalLink", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallLoanProductConfigInsert", web_Call_Loan_Product_Config_Key, loan_Product_KeyParameter, config_NameParameter, config_ValueParameter, display_OrderParameter, supOnlyParameter, currentUserIdParameter, externalLinkCaptionParameter, externalLinkParameter);
        }
    
        public virtual ObjectResult<usp_WebCallLoanProductConfigsLoad_Result> usp_WebCallLoanProductConfigsLoad(Nullable<int> loan_Product_Key, Nullable<bool> isSupervisor)
        {
            var loan_Product_KeyParameter = loan_Product_Key.HasValue ?
                new ObjectParameter("Loan_Product_Key", loan_Product_Key) :
                new ObjectParameter("Loan_Product_Key", typeof(int));
    
            var isSupervisorParameter = isSupervisor.HasValue ?
                new ObjectParameter("IsSupervisor", isSupervisor) :
                new ObjectParameter("IsSupervisor", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallLoanProductConfigsLoad_Result>("usp_WebCallLoanProductConfigsLoad", loan_Product_KeyParameter, isSupervisorParameter);
        }
    
        public virtual int usp_WebCallLoanProductConfigUpdate(Nullable<int> web_Call_Loan_Product_Config_Key, Nullable<int> loan_Product_Key, string config_Name, string config_Value, Nullable<int> display_Order, Nullable<bool> supOnly, string currentUserId, string externalLinkCaption, string externalLink)
        {
            var web_Call_Loan_Product_Config_KeyParameter = web_Call_Loan_Product_Config_Key.HasValue ?
                new ObjectParameter("Web_Call_Loan_Product_Config_Key", web_Call_Loan_Product_Config_Key) :
                new ObjectParameter("Web_Call_Loan_Product_Config_Key", typeof(int));
    
            var loan_Product_KeyParameter = loan_Product_Key.HasValue ?
                new ObjectParameter("Loan_Product_Key", loan_Product_Key) :
                new ObjectParameter("Loan_Product_Key", typeof(int));
    
            var config_NameParameter = config_Name != null ?
                new ObjectParameter("Config_Name", config_Name) :
                new ObjectParameter("Config_Name", typeof(string));
    
            var config_ValueParameter = config_Value != null ?
                new ObjectParameter("Config_Value", config_Value) :
                new ObjectParameter("Config_Value", typeof(string));
    
            var display_OrderParameter = display_Order.HasValue ?
                new ObjectParameter("Display_Order", display_Order) :
                new ObjectParameter("Display_Order", typeof(int));
    
            var supOnlyParameter = supOnly.HasValue ?
                new ObjectParameter("SupOnly", supOnly) :
                new ObjectParameter("SupOnly", typeof(bool));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var externalLinkCaptionParameter = externalLinkCaption != null ?
                new ObjectParameter("ExternalLinkCaption", externalLinkCaption) :
                new ObjectParameter("ExternalLinkCaption", typeof(string));
    
            var externalLinkParameter = externalLink != null ?
                new ObjectParameter("ExternalLink", externalLink) :
                new ObjectParameter("ExternalLink", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallLoanProductConfigUpdate", web_Call_Loan_Product_Config_KeyParameter, loan_Product_KeyParameter, config_NameParameter, config_ValueParameter, display_OrderParameter, supOnlyParameter, currentUserIdParameter, externalLinkCaptionParameter, externalLinkParameter);
        }
    
        public virtual ObjectResult<usp_WebCallLoanProductsLoad_Result> usp_WebCallLoanProductsLoad(string state)
        {
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallLoanProductsLoad_Result>("usp_WebCallLoanProductsLoad", stateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_WebCallLogging_AddCategory(string categoryName, Nullable<int> logID)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var logIDParameter = logID.HasValue ?
                new ObjectParameter("LogID", logID) :
                new ObjectParameter("LogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_WebCallLogging_AddCategory", categoryNameParameter, logIDParameter);
        }
    
        public virtual int usp_WebCallLogging_ClearLogs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallLogging_ClearLogs");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_WebCallLogging_InsertCategoryLog(Nullable<int> categoryID, Nullable<int> logID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var logIDParameter = logID.HasValue ?
                new ObjectParameter("LogID", logID) :
                new ObjectParameter("LogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_WebCallLogging_InsertCategoryLog", categoryIDParameter, logIDParameter);
        }
    
        public virtual int usp_WebCallLogging_WriteLog(Nullable<int> eventID, Nullable<int> priority, string severity, string title, Nullable<System.DateTime> timestamp, string machineName, string appDomainName, string processID, string processName, string threadName, string win32ThreadId, string message, string formattedMessage, ObjectParameter logId)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var severityParameter = severity != null ?
                new ObjectParameter("Severity", severity) :
                new ObjectParameter("Severity", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var timestampParameter = timestamp.HasValue ?
                new ObjectParameter("Timestamp", timestamp) :
                new ObjectParameter("Timestamp", typeof(System.DateTime));
    
            var machineNameParameter = machineName != null ?
                new ObjectParameter("MachineName", machineName) :
                new ObjectParameter("MachineName", typeof(string));
    
            var appDomainNameParameter = appDomainName != null ?
                new ObjectParameter("AppDomainName", appDomainName) :
                new ObjectParameter("AppDomainName", typeof(string));
    
            var processIDParameter = processID != null ?
                new ObjectParameter("ProcessID", processID) :
                new ObjectParameter("ProcessID", typeof(string));
    
            var processNameParameter = processName != null ?
                new ObjectParameter("ProcessName", processName) :
                new ObjectParameter("ProcessName", typeof(string));
    
            var threadNameParameter = threadName != null ?
                new ObjectParameter("ThreadName", threadName) :
                new ObjectParameter("ThreadName", typeof(string));
    
            var win32ThreadIdParameter = win32ThreadId != null ?
                new ObjectParameter("Win32ThreadId", win32ThreadId) :
                new ObjectParameter("Win32ThreadId", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var formattedMessageParameter = formattedMessage != null ?
                new ObjectParameter("FormattedMessage", formattedMessage) :
                new ObjectParameter("FormattedMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallLogging_WriteLog", eventIDParameter, priorityParameter, severityParameter, titleParameter, timestampParameter, machineNameParameter, appDomainNameParameter, processIDParameter, processNameParameter, threadNameParameter, win32ThreadIdParameter, messageParameter, formattedMessageParameter, logId);
        }
    
        public virtual ObjectResult<usp_WebCallLogin_Result> usp_WebCallLogin(string username, string pwd)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("Pwd", pwd) :
                new ObjectParameter("Pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallLogin_Result>("usp_WebCallLogin", usernameParameter, pwdParameter);
        }
    
        public virtual int usp_WebCallLogInAudit(ObjectParameter callCenter_Login_Key, string teller, string server, Nullable<System.DateTime> loginDate)
        {
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var serverParameter = server != null ?
                new ObjectParameter("Server", server) :
                new ObjectParameter("Server", typeof(string));
    
            var loginDateParameter = loginDate.HasValue ?
                new ObjectParameter("LoginDate", loginDate) :
                new ObjectParameter("LoginDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallLogInAudit", callCenter_Login_Key, tellerParameter, serverParameter, loginDateParameter);
        }
    
        public virtual int usp_WebCallLoginRoleCheck(string username, string pwd, string roleName, ObjectParameter result)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("Pwd", pwd) :
                new ObjectParameter("Pwd", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallLoginRoleCheck", usernameParameter, pwdParameter, roleNameParameter, result);
        }
    
        public virtual ObjectResult<usp_WebCallLogLoadWithCategoryName_Result> usp_WebCallLogLoadWithCategoryName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallLogLoadWithCategoryName_Result>("usp_WebCallLogLoadWithCategoryName");
        }
    
        public virtual int usp_WebCallLogOutAudit(string teller, Nullable<System.DateTime> logoutDate)
        {
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var logoutDateParameter = logoutDate.HasValue ?
                new ObjectParameter("LogoutDate", logoutDate) :
                new ObjectParameter("LogoutDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallLogOutAudit", tellerParameter, logoutDateParameter);
        }
    
        public virtual int usp_WebCallOnlineStatusDisplayDelete(Nullable<int> online_Status_Key)
        {
            var online_Status_KeyParameter = online_Status_Key.HasValue ?
                new ObjectParameter("Online_Status_Key", online_Status_Key) :
                new ObjectParameter("Online_Status_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallOnlineStatusDisplayDelete", online_Status_KeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallOnlineStatusDisplayGetList_Result> usp_WebCallOnlineStatusDisplayGetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallOnlineStatusDisplayGetList_Result>("usp_WebCallOnlineStatusDisplayGetList");
        }
    
        public virtual int usp_WebCallOnlineStatusDisplayInsert(ObjectParameter online_Status_Key, string online_Status_Value, string online_Status_Display)
        {
            var online_Status_ValueParameter = online_Status_Value != null ?
                new ObjectParameter("Online_Status_Value", online_Status_Value) :
                new ObjectParameter("Online_Status_Value", typeof(string));
    
            var online_Status_DisplayParameter = online_Status_Display != null ?
                new ObjectParameter("Online_Status_Display", online_Status_Display) :
                new ObjectParameter("Online_Status_Display", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallOnlineStatusDisplayInsert", online_Status_Key, online_Status_ValueParameter, online_Status_DisplayParameter);
        }
    
        public virtual int usp_WebCallOnlineStatusDisplayUpdate(Nullable<int> online_Status_Key, string online_Status_Value, string online_Status_Display)
        {
            var online_Status_KeyParameter = online_Status_Key.HasValue ?
                new ObjectParameter("Online_Status_Key", online_Status_Key) :
                new ObjectParameter("Online_Status_Key", typeof(int));
    
            var online_Status_ValueParameter = online_Status_Value != null ?
                new ObjectParameter("Online_Status_Value", online_Status_Value) :
                new ObjectParameter("Online_Status_Value", typeof(string));
    
            var online_Status_DisplayParameter = online_Status_Display != null ?
                new ObjectParameter("Online_Status_Display", online_Status_Display) :
                new ObjectParameter("Online_Status_Display", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallOnlineStatusDisplayUpdate", online_Status_KeyParameter, online_Status_ValueParameter, online_Status_DisplayParameter);
        }
    
        public virtual int usp_WebCallQueueAuditInsert(string user, Nullable<int> queueItemId, string fieldName, string oldValue, string newValue)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var queueItemIdParameter = queueItemId.HasValue ?
                new ObjectParameter("QueueItemId", queueItemId) :
                new ObjectParameter("QueueItemId", typeof(int));
    
            var fieldNameParameter = fieldName != null ?
                new ObjectParameter("FieldName", fieldName) :
                new ObjectParameter("FieldName", typeof(string));
    
            var oldValueParameter = oldValue != null ?
                new ObjectParameter("OldValue", oldValue) :
                new ObjectParameter("OldValue", typeof(string));
    
            var newValueParameter = newValue != null ?
                new ObjectParameter("NewValue", newValue) :
                new ObjectParameter("NewValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueAuditInsert", userParameter, queueItemIdParameter, fieldNameParameter, oldValueParameter, newValueParameter);
        }
    
        public virtual int usp_WebCallQueueAuditUpdateByWorkItem(Nullable<int> workItemID, string eMAIL, string fIRSTNAME, string lASTNAME, Nullable<int> cATEGORYID, string uSERNAME, string uSERID, string hOMEPHONE, string cELLPHONE, string wORKPHONE, Nullable<int> rEASONID, Nullable<int> aCTIONID, Nullable<int> rESULT1ID, Nullable<int> rESULT2ID, Nullable<int> rARRID, Nullable<System.DateTime> fOLLOWUPDATE, Nullable<bool> cOMPLETED, Nullable<bool> cHECKEDOUT, Nullable<System.Guid> cHATSESSIONID, string cHATCSRID, Nullable<int> customerId, Nullable<int> lOANAPPID, Nullable<int> vISITORID, Nullable<int> lOANID, Nullable<bool> sUPERVISORESCALLATION, Nullable<System.DateTime> oNLINECREATEDDATE, Nullable<System.DateTime> oFFLINECREATEDDATE, Nullable<int> sTATUSKEY, string webSource, Nullable<short> location, string address, string city, string state, string zipcode, string leadId, string buyer, Nullable<decimal> soldAmount, string finalScore, string currentUserId, Nullable<int> workItemColor, Nullable<int> workItemType)
        {
            var workItemIDParameter = workItemID.HasValue ?
                new ObjectParameter("WorkItemID", workItemID) :
                new ObjectParameter("WorkItemID", typeof(int));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fIRSTNAMEParameter = fIRSTNAME != null ?
                new ObjectParameter("FIRSTNAME", fIRSTNAME) :
                new ObjectParameter("FIRSTNAME", typeof(string));
    
            var lASTNAMEParameter = lASTNAME != null ?
                new ObjectParameter("LASTNAME", lASTNAME) :
                new ObjectParameter("LASTNAME", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var hOMEPHONEParameter = hOMEPHONE != null ?
                new ObjectParameter("HOMEPHONE", hOMEPHONE) :
                new ObjectParameter("HOMEPHONE", typeof(string));
    
            var cELLPHONEParameter = cELLPHONE != null ?
                new ObjectParameter("CELLPHONE", cELLPHONE) :
                new ObjectParameter("CELLPHONE", typeof(string));
    
            var wORKPHONEParameter = wORKPHONE != null ?
                new ObjectParameter("WORKPHONE", wORKPHONE) :
                new ObjectParameter("WORKPHONE", typeof(string));
    
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var aCTIONIDParameter = aCTIONID.HasValue ?
                new ObjectParameter("ACTIONID", aCTIONID) :
                new ObjectParameter("ACTIONID", typeof(int));
    
            var rESULT1IDParameter = rESULT1ID.HasValue ?
                new ObjectParameter("RESULT1ID", rESULT1ID) :
                new ObjectParameter("RESULT1ID", typeof(int));
    
            var rESULT2IDParameter = rESULT2ID.HasValue ?
                new ObjectParameter("RESULT2ID", rESULT2ID) :
                new ObjectParameter("RESULT2ID", typeof(int));
    
            var rARRIDParameter = rARRID.HasValue ?
                new ObjectParameter("RARRID", rARRID) :
                new ObjectParameter("RARRID", typeof(int));
    
            var fOLLOWUPDATEParameter = fOLLOWUPDATE.HasValue ?
                new ObjectParameter("FOLLOWUPDATE", fOLLOWUPDATE) :
                new ObjectParameter("FOLLOWUPDATE", typeof(System.DateTime));
    
            var cOMPLETEDParameter = cOMPLETED.HasValue ?
                new ObjectParameter("COMPLETED", cOMPLETED) :
                new ObjectParameter("COMPLETED", typeof(bool));
    
            var cHECKEDOUTParameter = cHECKEDOUT.HasValue ?
                new ObjectParameter("CHECKEDOUT", cHECKEDOUT) :
                new ObjectParameter("CHECKEDOUT", typeof(bool));
    
            var cHATSESSIONIDParameter = cHATSESSIONID.HasValue ?
                new ObjectParameter("CHATSESSIONID", cHATSESSIONID) :
                new ObjectParameter("CHATSESSIONID", typeof(System.Guid));
    
            var cHATCSRIDParameter = cHATCSRID != null ?
                new ObjectParameter("CHATCSRID", cHATCSRID) :
                new ObjectParameter("CHATCSRID", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var lOANAPPIDParameter = lOANAPPID.HasValue ?
                new ObjectParameter("LOANAPPID", lOANAPPID) :
                new ObjectParameter("LOANAPPID", typeof(int));
    
            var vISITORIDParameter = vISITORID.HasValue ?
                new ObjectParameter("VISITORID", vISITORID) :
                new ObjectParameter("VISITORID", typeof(int));
    
            var lOANIDParameter = lOANID.HasValue ?
                new ObjectParameter("LOANID", lOANID) :
                new ObjectParameter("LOANID", typeof(int));
    
            var sUPERVISORESCALLATIONParameter = sUPERVISORESCALLATION.HasValue ?
                new ObjectParameter("SUPERVISORESCALLATION", sUPERVISORESCALLATION) :
                new ObjectParameter("SUPERVISORESCALLATION", typeof(bool));
    
            var oNLINECREATEDDATEParameter = oNLINECREATEDDATE.HasValue ?
                new ObjectParameter("ONLINECREATEDDATE", oNLINECREATEDDATE) :
                new ObjectParameter("ONLINECREATEDDATE", typeof(System.DateTime));
    
            var oFFLINECREATEDDATEParameter = oFFLINECREATEDDATE.HasValue ?
                new ObjectParameter("OFFLINECREATEDDATE", oFFLINECREATEDDATE) :
                new ObjectParameter("OFFLINECREATEDDATE", typeof(System.DateTime));
    
            var sTATUSKEYParameter = sTATUSKEY.HasValue ?
                new ObjectParameter("STATUSKEY", sTATUSKEY) :
                new ObjectParameter("STATUSKEY", typeof(int));
    
            var webSourceParameter = webSource != null ?
                new ObjectParameter("WebSource", webSource) :
                new ObjectParameter("WebSource", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(string));
    
            var leadIdParameter = leadId != null ?
                new ObjectParameter("LeadId", leadId) :
                new ObjectParameter("LeadId", typeof(string));
    
            var buyerParameter = buyer != null ?
                new ObjectParameter("Buyer", buyer) :
                new ObjectParameter("Buyer", typeof(string));
    
            var soldAmountParameter = soldAmount.HasValue ?
                new ObjectParameter("SoldAmount", soldAmount) :
                new ObjectParameter("SoldAmount", typeof(decimal));
    
            var finalScoreParameter = finalScore != null ?
                new ObjectParameter("FinalScore", finalScore) :
                new ObjectParameter("FinalScore", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var workItemColorParameter = workItemColor.HasValue ?
                new ObjectParameter("WorkItemColor", workItemColor) :
                new ObjectParameter("WorkItemColor", typeof(int));
    
            var workItemTypeParameter = workItemType.HasValue ?
                new ObjectParameter("WorkItemType", workItemType) :
                new ObjectParameter("WorkItemType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueAuditUpdateByWorkItem", workItemIDParameter, eMAILParameter, fIRSTNAMEParameter, lASTNAMEParameter, cATEGORYIDParameter, uSERNAMEParameter, uSERIDParameter, hOMEPHONEParameter, cELLPHONEParameter, wORKPHONEParameter, rEASONIDParameter, aCTIONIDParameter, rESULT1IDParameter, rESULT2IDParameter, rARRIDParameter, fOLLOWUPDATEParameter, cOMPLETEDParameter, cHECKEDOUTParameter, cHATSESSIONIDParameter, cHATCSRIDParameter, customerIdParameter, lOANAPPIDParameter, vISITORIDParameter, lOANIDParameter, sUPERVISORESCALLATIONParameter, oNLINECREATEDDATEParameter, oFFLINECREATEDDATEParameter, sTATUSKEYParameter, webSourceParameter, locationParameter, addressParameter, cityParameter, stateParameter, zipcodeParameter, leadIdParameter, buyerParameter, soldAmountParameter, finalScoreParameter, currentUserIdParameter, workItemColorParameter, workItemTypeParameter);
        }
    
        public virtual ObjectResult<usp_WebCallQueueAuditWorkItemLoad_Result> usp_WebCallQueueAuditWorkItemLoad(Nullable<int> queueItemId)
        {
            var queueItemIdParameter = queueItemId.HasValue ?
                new ObjectParameter("QueueItemId", queueItemId) :
                new ObjectParameter("QueueItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallQueueAuditWorkItemLoad_Result>("usp_WebCallQueueAuditWorkItemLoad", queueItemIdParameter);
        }
    
        public virtual int usp_WebCallQueueConfigurationInsert(ObjectParameter id, Nullable<short> defaultOnlineRefreshRate, Nullable<short> defaultTestUserRefreshRate, Nullable<short> defaultCustomerSupportRefreshRate, Nullable<short> defaultSummaryRefreshRate, Nullable<short> followUpDateHourThreshold, Nullable<short> followUpDateMinuteThreshold)
        {
            var defaultOnlineRefreshRateParameter = defaultOnlineRefreshRate.HasValue ?
                new ObjectParameter("DefaultOnlineRefreshRate", defaultOnlineRefreshRate) :
                new ObjectParameter("DefaultOnlineRefreshRate", typeof(short));
    
            var defaultTestUserRefreshRateParameter = defaultTestUserRefreshRate.HasValue ?
                new ObjectParameter("DefaultTestUserRefreshRate", defaultTestUserRefreshRate) :
                new ObjectParameter("DefaultTestUserRefreshRate", typeof(short));
    
            var defaultCustomerSupportRefreshRateParameter = defaultCustomerSupportRefreshRate.HasValue ?
                new ObjectParameter("DefaultCustomerSupportRefreshRate", defaultCustomerSupportRefreshRate) :
                new ObjectParameter("DefaultCustomerSupportRefreshRate", typeof(short));
    
            var defaultSummaryRefreshRateParameter = defaultSummaryRefreshRate.HasValue ?
                new ObjectParameter("DefaultSummaryRefreshRate", defaultSummaryRefreshRate) :
                new ObjectParameter("DefaultSummaryRefreshRate", typeof(short));
    
            var followUpDateHourThresholdParameter = followUpDateHourThreshold.HasValue ?
                new ObjectParameter("FollowUpDateHourThreshold", followUpDateHourThreshold) :
                new ObjectParameter("FollowUpDateHourThreshold", typeof(short));
    
            var followUpDateMinuteThresholdParameter = followUpDateMinuteThreshold.HasValue ?
                new ObjectParameter("FollowUpDateMinuteThreshold", followUpDateMinuteThreshold) :
                new ObjectParameter("FollowUpDateMinuteThreshold", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueConfigurationInsert", id, defaultOnlineRefreshRateParameter, defaultTestUserRefreshRateParameter, defaultCustomerSupportRefreshRateParameter, defaultSummaryRefreshRateParameter, followUpDateHourThresholdParameter, followUpDateMinuteThresholdParameter);
        }
    
        public virtual ObjectResult<usp_WebCallQueueConfigurationLoad_Result> usp_WebCallQueueConfigurationLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallQueueConfigurationLoad_Result>("usp_WebCallQueueConfigurationLoad");
        }
    
        public virtual int usp_WebCallQueueConfigurationUpdate(Nullable<int> id, Nullable<short> defaultOnlineRefreshRate, Nullable<short> defaultTestUserRefreshRate, Nullable<short> defaultCustomerSupportRefreshRate, Nullable<short> defaultSummaryRefreshRate, Nullable<short> followUpDateHourThreshold, Nullable<short> followUpDateMinuteThreshold)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var defaultOnlineRefreshRateParameter = defaultOnlineRefreshRate.HasValue ?
                new ObjectParameter("DefaultOnlineRefreshRate", defaultOnlineRefreshRate) :
                new ObjectParameter("DefaultOnlineRefreshRate", typeof(short));
    
            var defaultTestUserRefreshRateParameter = defaultTestUserRefreshRate.HasValue ?
                new ObjectParameter("DefaultTestUserRefreshRate", defaultTestUserRefreshRate) :
                new ObjectParameter("DefaultTestUserRefreshRate", typeof(short));
    
            var defaultCustomerSupportRefreshRateParameter = defaultCustomerSupportRefreshRate.HasValue ?
                new ObjectParameter("DefaultCustomerSupportRefreshRate", defaultCustomerSupportRefreshRate) :
                new ObjectParameter("DefaultCustomerSupportRefreshRate", typeof(short));
    
            var defaultSummaryRefreshRateParameter = defaultSummaryRefreshRate.HasValue ?
                new ObjectParameter("DefaultSummaryRefreshRate", defaultSummaryRefreshRate) :
                new ObjectParameter("DefaultSummaryRefreshRate", typeof(short));
    
            var followUpDateHourThresholdParameter = followUpDateHourThreshold.HasValue ?
                new ObjectParameter("FollowUpDateHourThreshold", followUpDateHourThreshold) :
                new ObjectParameter("FollowUpDateHourThreshold", typeof(short));
    
            var followUpDateMinuteThresholdParameter = followUpDateMinuteThreshold.HasValue ?
                new ObjectParameter("FollowUpDateMinuteThreshold", followUpDateMinuteThreshold) :
                new ObjectParameter("FollowUpDateMinuteThreshold", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueConfigurationUpdate", idParameter, defaultOnlineRefreshRateParameter, defaultTestUserRefreshRateParameter, defaultCustomerSupportRefreshRateParameter, defaultSummaryRefreshRateParameter, followUpDateHourThresholdParameter, followUpDateMinuteThresholdParameter);
        }
    
        public virtual int usp_WebCallQueueDelete(Nullable<int> wEB_CALL_QUEUE_KEY)
        {
            var wEB_CALL_QUEUE_KEYParameter = wEB_CALL_QUEUE_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_QUEUE_KEY", wEB_CALL_QUEUE_KEY) :
                new ObjectParameter("WEB_CALL_QUEUE_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueDelete", wEB_CALL_QUEUE_KEYParameter);
        }
    
        public virtual int usp_WebCallQueueItem_UpdateWebStatus(Nullable<int> iD, string webStatus, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var webStatusParameter = webStatus != null ?
                new ObjectParameter("WebStatus", webStatus) :
                new ObjectParameter("WebStatus", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueItem_UpdateWebStatus", iDParameter, webStatusParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebCallQueueItemInsert(ObjectParameter iD, Nullable<long> wEB_VISIT_KEY, string eMAIL, string fIRSNAME, string lASTNAME, Nullable<int> cATEGORYID, string uSERNAME, string uSERID, string hOMEPHONE, string cELLPHONE, string wORKPHONE, Nullable<int> rEASONID, Nullable<int> aCTIONID, Nullable<int> rESULT1ID, Nullable<int> rESULT2ID, Nullable<int> rARRID, string nOTES, Nullable<System.DateTime> fOLLOWUPDATE, Nullable<bool> cOMPLETED, Nullable<bool> cHECKEDOUT, Nullable<System.Guid> cHATSESSIONID, string cHATCSRID, Nullable<int> customerId, Nullable<int> lOANAPPID, Nullable<int> vISITORID, string pAGE, Nullable<bool> sUPERVISORESCALLATION, Nullable<bool> iTSupportEscallation, Nullable<System.DateTime> oNLINEDATE, Nullable<System.DateTime> oFFLINEDATE, Nullable<int> status, string webSource, Nullable<short> location, string address, string city, string state, string zipcode, string leadId, string buyer, Nullable<decimal> soldAmount, string finalScore, string currentUserId, Nullable<int> oPTPLUS_CARD_DETAIL_KEY, Nullable<int> webCallQueueTypeKey, Nullable<System.DateTime> modifiedDate, Nullable<bool> isOnline, string mARKETING_SENT_KEY, Nullable<int> rISReptKey)
        {
            var wEB_VISIT_KEYParameter = wEB_VISIT_KEY.HasValue ?
                new ObjectParameter("WEB_VISIT_KEY", wEB_VISIT_KEY) :
                new ObjectParameter("WEB_VISIT_KEY", typeof(long));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fIRSNAMEParameter = fIRSNAME != null ?
                new ObjectParameter("FIRSNAME", fIRSNAME) :
                new ObjectParameter("FIRSNAME", typeof(string));
    
            var lASTNAMEParameter = lASTNAME != null ?
                new ObjectParameter("LASTNAME", lASTNAME) :
                new ObjectParameter("LASTNAME", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var hOMEPHONEParameter = hOMEPHONE != null ?
                new ObjectParameter("HOMEPHONE", hOMEPHONE) :
                new ObjectParameter("HOMEPHONE", typeof(string));
    
            var cELLPHONEParameter = cELLPHONE != null ?
                new ObjectParameter("CELLPHONE", cELLPHONE) :
                new ObjectParameter("CELLPHONE", typeof(string));
    
            var wORKPHONEParameter = wORKPHONE != null ?
                new ObjectParameter("WORKPHONE", wORKPHONE) :
                new ObjectParameter("WORKPHONE", typeof(string));
    
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var aCTIONIDParameter = aCTIONID.HasValue ?
                new ObjectParameter("ACTIONID", aCTIONID) :
                new ObjectParameter("ACTIONID", typeof(int));
    
            var rESULT1IDParameter = rESULT1ID.HasValue ?
                new ObjectParameter("RESULT1ID", rESULT1ID) :
                new ObjectParameter("RESULT1ID", typeof(int));
    
            var rESULT2IDParameter = rESULT2ID.HasValue ?
                new ObjectParameter("RESULT2ID", rESULT2ID) :
                new ObjectParameter("RESULT2ID", typeof(int));
    
            var rARRIDParameter = rARRID.HasValue ?
                new ObjectParameter("RARRID", rARRID) :
                new ObjectParameter("RARRID", typeof(int));
    
            var nOTESParameter = nOTES != null ?
                new ObjectParameter("NOTES", nOTES) :
                new ObjectParameter("NOTES", typeof(string));
    
            var fOLLOWUPDATEParameter = fOLLOWUPDATE.HasValue ?
                new ObjectParameter("FOLLOWUPDATE", fOLLOWUPDATE) :
                new ObjectParameter("FOLLOWUPDATE", typeof(System.DateTime));
    
            var cOMPLETEDParameter = cOMPLETED.HasValue ?
                new ObjectParameter("COMPLETED", cOMPLETED) :
                new ObjectParameter("COMPLETED", typeof(bool));
    
            var cHECKEDOUTParameter = cHECKEDOUT.HasValue ?
                new ObjectParameter("CHECKEDOUT", cHECKEDOUT) :
                new ObjectParameter("CHECKEDOUT", typeof(bool));
    
            var cHATSESSIONIDParameter = cHATSESSIONID.HasValue ?
                new ObjectParameter("CHATSESSIONID", cHATSESSIONID) :
                new ObjectParameter("CHATSESSIONID", typeof(System.Guid));
    
            var cHATCSRIDParameter = cHATCSRID != null ?
                new ObjectParameter("CHATCSRID", cHATCSRID) :
                new ObjectParameter("CHATCSRID", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var lOANAPPIDParameter = lOANAPPID.HasValue ?
                new ObjectParameter("LOANAPPID", lOANAPPID) :
                new ObjectParameter("LOANAPPID", typeof(int));
    
            var vISITORIDParameter = vISITORID.HasValue ?
                new ObjectParameter("VISITORID", vISITORID) :
                new ObjectParameter("VISITORID", typeof(int));
    
            var pAGEParameter = pAGE != null ?
                new ObjectParameter("PAGE", pAGE) :
                new ObjectParameter("PAGE", typeof(string));
    
            var sUPERVISORESCALLATIONParameter = sUPERVISORESCALLATION.HasValue ?
                new ObjectParameter("SUPERVISORESCALLATION", sUPERVISORESCALLATION) :
                new ObjectParameter("SUPERVISORESCALLATION", typeof(bool));
    
            var iTSupportEscallationParameter = iTSupportEscallation.HasValue ?
                new ObjectParameter("ITSupportEscallation", iTSupportEscallation) :
                new ObjectParameter("ITSupportEscallation", typeof(bool));
    
            var oNLINEDATEParameter = oNLINEDATE.HasValue ?
                new ObjectParameter("ONLINEDATE", oNLINEDATE) :
                new ObjectParameter("ONLINEDATE", typeof(System.DateTime));
    
            var oFFLINEDATEParameter = oFFLINEDATE.HasValue ?
                new ObjectParameter("OFFLINEDATE", oFFLINEDATE) :
                new ObjectParameter("OFFLINEDATE", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var webSourceParameter = webSource != null ?
                new ObjectParameter("WebSource", webSource) :
                new ObjectParameter("WebSource", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(string));
    
            var leadIdParameter = leadId != null ?
                new ObjectParameter("LeadId", leadId) :
                new ObjectParameter("LeadId", typeof(string));
    
            var buyerParameter = buyer != null ?
                new ObjectParameter("Buyer", buyer) :
                new ObjectParameter("Buyer", typeof(string));
    
            var soldAmountParameter = soldAmount.HasValue ?
                new ObjectParameter("SoldAmount", soldAmount) :
                new ObjectParameter("SoldAmount", typeof(decimal));
    
            var finalScoreParameter = finalScore != null ?
                new ObjectParameter("FinalScore", finalScore) :
                new ObjectParameter("FinalScore", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var oPTPLUS_CARD_DETAIL_KEYParameter = oPTPLUS_CARD_DETAIL_KEY.HasValue ?
                new ObjectParameter("OPTPLUS_CARD_DETAIL_KEY", oPTPLUS_CARD_DETAIL_KEY) :
                new ObjectParameter("OPTPLUS_CARD_DETAIL_KEY", typeof(int));
    
            var webCallQueueTypeKeyParameter = webCallQueueTypeKey.HasValue ?
                new ObjectParameter("WebCallQueueTypeKey", webCallQueueTypeKey) :
                new ObjectParameter("WebCallQueueTypeKey", typeof(int));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var isOnlineParameter = isOnline.HasValue ?
                new ObjectParameter("IsOnline", isOnline) :
                new ObjectParameter("IsOnline", typeof(bool));
    
            var mARKETING_SENT_KEYParameter = mARKETING_SENT_KEY != null ?
                new ObjectParameter("MARKETING_SENT_KEY", mARKETING_SENT_KEY) :
                new ObjectParameter("MARKETING_SENT_KEY", typeof(string));
    
            var rISReptKeyParameter = rISReptKey.HasValue ?
                new ObjectParameter("RISReptKey", rISReptKey) :
                new ObjectParameter("RISReptKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueItemInsert", iD, wEB_VISIT_KEYParameter, eMAILParameter, fIRSNAMEParameter, lASTNAMEParameter, cATEGORYIDParameter, uSERNAMEParameter, uSERIDParameter, hOMEPHONEParameter, cELLPHONEParameter, wORKPHONEParameter, rEASONIDParameter, aCTIONIDParameter, rESULT1IDParameter, rESULT2IDParameter, rARRIDParameter, nOTESParameter, fOLLOWUPDATEParameter, cOMPLETEDParameter, cHECKEDOUTParameter, cHATSESSIONIDParameter, cHATCSRIDParameter, customerIdParameter, lOANAPPIDParameter, vISITORIDParameter, pAGEParameter, sUPERVISORESCALLATIONParameter, iTSupportEscallationParameter, oNLINEDATEParameter, oFFLINEDATEParameter, statusParameter, webSourceParameter, locationParameter, addressParameter, cityParameter, stateParameter, zipcodeParameter, leadIdParameter, buyerParameter, soldAmountParameter, finalScoreParameter, currentUserIdParameter, oPTPLUS_CARD_DETAIL_KEYParameter, webCallQueueTypeKeyParameter, modifiedDateParameter, isOnlineParameter, mARKETING_SENT_KEYParameter, rISReptKeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallQueueItemLoad_Result> usp_WebCallQueueItemLoad(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallQueueItemLoad_Result>("usp_WebCallQueueItemLoad", iDParameter);
        }
    
        public virtual ObjectResult<usp_WebCallQueueItemLoadByLeadId_Result> usp_WebCallQueueItemLoadByLeadId(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallQueueItemLoadByLeadId_Result>("usp_WebCallQueueItemLoadByLeadId", iDParameter);
        }
    
        public virtual ObjectResult<usp_WebCallQueueItemLoadByLoanAppKey_Result> usp_WebCallQueueItemLoadByLoanAppKey(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallQueueItemLoadByLoanAppKey_Result>("usp_WebCallQueueItemLoadByLoanAppKey", iDParameter);
        }
    
        public virtual ObjectResult<usp_WebCallQueueItemLoadByVisitoryKey_Result> usp_WebCallQueueItemLoadByVisitoryKey(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallQueueItemLoadByVisitoryKey_Result>("usp_WebCallQueueItemLoadByVisitoryKey", iDParameter);
        }
    
        public virtual int usp_WebCallQueueItemMktgInsert(Nullable<int> cATEGORYID, string hOMEPHONE, string cELLPHONE, string wORKPHONE, Nullable<int> vISITORID, Nullable<int> mARKETING_SENT_KEY)
        {
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var hOMEPHONEParameter = hOMEPHONE != null ?
                new ObjectParameter("HOMEPHONE", hOMEPHONE) :
                new ObjectParameter("HOMEPHONE", typeof(string));
    
            var cELLPHONEParameter = cELLPHONE != null ?
                new ObjectParameter("CELLPHONE", cELLPHONE) :
                new ObjectParameter("CELLPHONE", typeof(string));
    
            var wORKPHONEParameter = wORKPHONE != null ?
                new ObjectParameter("WORKPHONE", wORKPHONE) :
                new ObjectParameter("WORKPHONE", typeof(string));
    
            var vISITORIDParameter = vISITORID.HasValue ?
                new ObjectParameter("VISITORID", vISITORID) :
                new ObjectParameter("VISITORID", typeof(int));
    
            var mARKETING_SENT_KEYParameter = mARKETING_SENT_KEY.HasValue ?
                new ObjectParameter("MARKETING_SENT_KEY", mARKETING_SENT_KEY) :
                new ObjectParameter("MARKETING_SENT_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueItemMktgInsert", cATEGORYIDParameter, hOMEPHONEParameter, cELLPHONEParameter, wORKPHONEParameter, vISITORIDParameter, mARKETING_SENT_KEYParameter);
        }
    
        public virtual int usp_WebCallQueueItemUpdate(Nullable<int> iD, string eMAIL, string fIRSNAME, string lASTNAME, Nullable<int> cATEGORYID, string uSERNAME, string uSERID, string hOMEPHONE, string cELLPHONE, string wORKPHONE, Nullable<int> rEASONID, Nullable<int> aCTIONID, Nullable<int> rESULT1ID, Nullable<int> rESULT2ID, Nullable<int> rARRID, string nOTES, Nullable<System.DateTime> fOLLOWUPDATE, Nullable<bool> cOMPLETED, Nullable<bool> cHECKEDOUT, Nullable<System.Guid> cHATSESSIONID, string cHATCSRID, Nullable<int> customerId, Nullable<int> lOANAPPID, Nullable<int> vISITORID, Nullable<bool> sUPERVISORESCALLATION, Nullable<bool> iTSupportEscallation, string page, Nullable<System.DateTime> oNLINEDATE, Nullable<System.DateTime> oFFLINEDATE, Nullable<int> status, string webSource, Nullable<short> location, string address, string city, string state, string zipcode, string leadId, string buyer, Nullable<decimal> soldAmount, string finalScore, string currentUserId, Nullable<int> webCallQueueTypeKey, Nullable<System.DateTime> modifiedDate, Nullable<System.DateTime> originalModifiedDate, Nullable<bool> isOnline, Nullable<int> risReptKey, ObjectParameter rowsChanged)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fIRSNAMEParameter = fIRSNAME != null ?
                new ObjectParameter("FIRSNAME", fIRSNAME) :
                new ObjectParameter("FIRSNAME", typeof(string));
    
            var lASTNAMEParameter = lASTNAME != null ?
                new ObjectParameter("LASTNAME", lASTNAME) :
                new ObjectParameter("LASTNAME", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var hOMEPHONEParameter = hOMEPHONE != null ?
                new ObjectParameter("HOMEPHONE", hOMEPHONE) :
                new ObjectParameter("HOMEPHONE", typeof(string));
    
            var cELLPHONEParameter = cELLPHONE != null ?
                new ObjectParameter("CELLPHONE", cELLPHONE) :
                new ObjectParameter("CELLPHONE", typeof(string));
    
            var wORKPHONEParameter = wORKPHONE != null ?
                new ObjectParameter("WORKPHONE", wORKPHONE) :
                new ObjectParameter("WORKPHONE", typeof(string));
    
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var aCTIONIDParameter = aCTIONID.HasValue ?
                new ObjectParameter("ACTIONID", aCTIONID) :
                new ObjectParameter("ACTIONID", typeof(int));
    
            var rESULT1IDParameter = rESULT1ID.HasValue ?
                new ObjectParameter("RESULT1ID", rESULT1ID) :
                new ObjectParameter("RESULT1ID", typeof(int));
    
            var rESULT2IDParameter = rESULT2ID.HasValue ?
                new ObjectParameter("RESULT2ID", rESULT2ID) :
                new ObjectParameter("RESULT2ID", typeof(int));
    
            var rARRIDParameter = rARRID.HasValue ?
                new ObjectParameter("RARRID", rARRID) :
                new ObjectParameter("RARRID", typeof(int));
    
            var nOTESParameter = nOTES != null ?
                new ObjectParameter("NOTES", nOTES) :
                new ObjectParameter("NOTES", typeof(string));
    
            var fOLLOWUPDATEParameter = fOLLOWUPDATE.HasValue ?
                new ObjectParameter("FOLLOWUPDATE", fOLLOWUPDATE) :
                new ObjectParameter("FOLLOWUPDATE", typeof(System.DateTime));
    
            var cOMPLETEDParameter = cOMPLETED.HasValue ?
                new ObjectParameter("COMPLETED", cOMPLETED) :
                new ObjectParameter("COMPLETED", typeof(bool));
    
            var cHECKEDOUTParameter = cHECKEDOUT.HasValue ?
                new ObjectParameter("CHECKEDOUT", cHECKEDOUT) :
                new ObjectParameter("CHECKEDOUT", typeof(bool));
    
            var cHATSESSIONIDParameter = cHATSESSIONID.HasValue ?
                new ObjectParameter("CHATSESSIONID", cHATSESSIONID) :
                new ObjectParameter("CHATSESSIONID", typeof(System.Guid));
    
            var cHATCSRIDParameter = cHATCSRID != null ?
                new ObjectParameter("CHATCSRID", cHATCSRID) :
                new ObjectParameter("CHATCSRID", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var lOANAPPIDParameter = lOANAPPID.HasValue ?
                new ObjectParameter("LOANAPPID", lOANAPPID) :
                new ObjectParameter("LOANAPPID", typeof(int));
    
            var vISITORIDParameter = vISITORID.HasValue ?
                new ObjectParameter("VISITORID", vISITORID) :
                new ObjectParameter("VISITORID", typeof(int));
    
            var sUPERVISORESCALLATIONParameter = sUPERVISORESCALLATION.HasValue ?
                new ObjectParameter("SUPERVISORESCALLATION", sUPERVISORESCALLATION) :
                new ObjectParameter("SUPERVISORESCALLATION", typeof(bool));
    
            var iTSupportEscallationParameter = iTSupportEscallation.HasValue ?
                new ObjectParameter("ITSupportEscallation", iTSupportEscallation) :
                new ObjectParameter("ITSupportEscallation", typeof(bool));
    
            var pageParameter = page != null ?
                new ObjectParameter("Page", page) :
                new ObjectParameter("Page", typeof(string));
    
            var oNLINEDATEParameter = oNLINEDATE.HasValue ?
                new ObjectParameter("ONLINEDATE", oNLINEDATE) :
                new ObjectParameter("ONLINEDATE", typeof(System.DateTime));
    
            var oFFLINEDATEParameter = oFFLINEDATE.HasValue ?
                new ObjectParameter("OFFLINEDATE", oFFLINEDATE) :
                new ObjectParameter("OFFLINEDATE", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var webSourceParameter = webSource != null ?
                new ObjectParameter("WebSource", webSource) :
                new ObjectParameter("WebSource", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(string));
    
            var leadIdParameter = leadId != null ?
                new ObjectParameter("LeadId", leadId) :
                new ObjectParameter("LeadId", typeof(string));
    
            var buyerParameter = buyer != null ?
                new ObjectParameter("Buyer", buyer) :
                new ObjectParameter("Buyer", typeof(string));
    
            var soldAmountParameter = soldAmount.HasValue ?
                new ObjectParameter("SoldAmount", soldAmount) :
                new ObjectParameter("SoldAmount", typeof(decimal));
    
            var finalScoreParameter = finalScore != null ?
                new ObjectParameter("FinalScore", finalScore) :
                new ObjectParameter("FinalScore", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var webCallQueueTypeKeyParameter = webCallQueueTypeKey.HasValue ?
                new ObjectParameter("WebCallQueueTypeKey", webCallQueueTypeKey) :
                new ObjectParameter("WebCallQueueTypeKey", typeof(int));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var originalModifiedDateParameter = originalModifiedDate.HasValue ?
                new ObjectParameter("OriginalModifiedDate", originalModifiedDate) :
                new ObjectParameter("OriginalModifiedDate", typeof(System.DateTime));
    
            var isOnlineParameter = isOnline.HasValue ?
                new ObjectParameter("IsOnline", isOnline) :
                new ObjectParameter("IsOnline", typeof(bool));
    
            var risReptKeyParameter = risReptKey.HasValue ?
                new ObjectParameter("RisReptKey", risReptKey) :
                new ObjectParameter("RisReptKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueItemUpdate", iDParameter, eMAILParameter, fIRSNAMEParameter, lASTNAMEParameter, cATEGORYIDParameter, uSERNAMEParameter, uSERIDParameter, hOMEPHONEParameter, cELLPHONEParameter, wORKPHONEParameter, rEASONIDParameter, aCTIONIDParameter, rESULT1IDParameter, rESULT2IDParameter, rARRIDParameter, nOTESParameter, fOLLOWUPDATEParameter, cOMPLETEDParameter, cHECKEDOUTParameter, cHATSESSIONIDParameter, cHATCSRIDParameter, customerIdParameter, lOANAPPIDParameter, vISITORIDParameter, sUPERVISORESCALLATIONParameter, iTSupportEscallationParameter, pageParameter, oNLINEDATEParameter, oFFLINEDATEParameter, statusParameter, webSourceParameter, locationParameter, addressParameter, cityParameter, stateParameter, zipcodeParameter, leadIdParameter, buyerParameter, soldAmountParameter, finalScoreParameter, currentUserIdParameter, webCallQueueTypeKeyParameter, modifiedDateParameter, originalModifiedDateParameter, isOnlineParameter, risReptKeyParameter, rowsChanged);
        }
    
        public virtual ObjectResult<usp_WebCallQueueLoad_OnlineItems_Result> usp_WebCallQueueLoad_OnlineItems()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallQueueLoad_OnlineItems_Result>("usp_WebCallQueueLoad_OnlineItems");
        }
    
        public virtual ObjectResult<usp_WebCallQueueLoad_OpenItems_Result> usp_WebCallQueueLoad_OpenItems(Nullable<int> cAMPAIGNID, Nullable<bool> cOMPLETED, Nullable<bool> eRRORSTATUS, Nullable<System.DateTime> mINIMUMDATE)
        {
            var cAMPAIGNIDParameter = cAMPAIGNID.HasValue ?
                new ObjectParameter("CAMPAIGNID", cAMPAIGNID) :
                new ObjectParameter("CAMPAIGNID", typeof(int));
    
            var cOMPLETEDParameter = cOMPLETED.HasValue ?
                new ObjectParameter("COMPLETED", cOMPLETED) :
                new ObjectParameter("COMPLETED", typeof(bool));
    
            var eRRORSTATUSParameter = eRRORSTATUS.HasValue ?
                new ObjectParameter("ERRORSTATUS", eRRORSTATUS) :
                new ObjectParameter("ERRORSTATUS", typeof(bool));
    
            var mINIMUMDATEParameter = mINIMUMDATE.HasValue ?
                new ObjectParameter("MINIMUMDATE", mINIMUMDATE) :
                new ObjectParameter("MINIMUMDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallQueueLoad_OpenItems_Result>("usp_WebCallQueueLoad_OpenItems", cAMPAIGNIDParameter, cOMPLETEDParameter, eRRORSTATUSParameter, mINIMUMDATEParameter);
        }
    
        public virtual ObjectResult<usp_WebCallQueueLoad_Summary_Result> usp_WebCallQueueLoad_Summary(Nullable<bool> sHOWCAMPAIGN, Nullable<bool> sHOWCATEGORY, Nullable<bool> sHOWCSR)
        {
            var sHOWCAMPAIGNParameter = sHOWCAMPAIGN.HasValue ?
                new ObjectParameter("SHOWCAMPAIGN", sHOWCAMPAIGN) :
                new ObjectParameter("SHOWCAMPAIGN", typeof(bool));
    
            var sHOWCATEGORYParameter = sHOWCATEGORY.HasValue ?
                new ObjectParameter("SHOWCATEGORY", sHOWCATEGORY) :
                new ObjectParameter("SHOWCATEGORY", typeof(bool));
    
            var sHOWCSRParameter = sHOWCSR.HasValue ?
                new ObjectParameter("SHOWCSR", sHOWCSR) :
                new ObjectParameter("SHOWCSR", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallQueueLoad_Summary_Result>("usp_WebCallQueueLoad_Summary", sHOWCAMPAIGNParameter, sHOWCATEGORYParameter, sHOWCSRParameter);
        }
    
        public virtual ObjectResult<usp_WebCallQueueLoad_WorkItems_Result> usp_WebCallQueueLoad_WorkItems(string uSERID, Nullable<int> qUERYOPTION)
        {
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var qUERYOPTIONParameter = qUERYOPTION.HasValue ?
                new ObjectParameter("QUERYOPTION", qUERYOPTION) :
                new ObjectParameter("QUERYOPTION", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallQueueLoad_WorkItems_Result>("usp_WebCallQueueLoad_WorkItems", uSERIDParameter, qUERYOPTIONParameter);
        }
    
        public virtual int usp_WebCallQueueLoanAppAuditInsert(ObjectParameter id, Nullable<int> web_Call_Queue_Key, Nullable<int> loan_Application_Key, Nullable<bool> is_Qualified, string reason_Denied)
        {
            var web_Call_Queue_KeyParameter = web_Call_Queue_Key.HasValue ?
                new ObjectParameter("Web_Call_Queue_Key", web_Call_Queue_Key) :
                new ObjectParameter("Web_Call_Queue_Key", typeof(int));
    
            var loan_Application_KeyParameter = loan_Application_Key.HasValue ?
                new ObjectParameter("Loan_Application_Key", loan_Application_Key) :
                new ObjectParameter("Loan_Application_Key", typeof(int));
    
            var is_QualifiedParameter = is_Qualified.HasValue ?
                new ObjectParameter("Is_Qualified", is_Qualified) :
                new ObjectParameter("Is_Qualified", typeof(bool));
    
            var reason_DeniedParameter = reason_Denied != null ?
                new ObjectParameter("Reason_Denied", reason_Denied) :
                new ObjectParameter("Reason_Denied", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueLoanAppAuditInsert", id, web_Call_Queue_KeyParameter, loan_Application_KeyParameter, is_QualifiedParameter, reason_DeniedParameter);
        }
    
        public virtual int usp_WebCallQueueSearch(string email, string lastname, string firstname, string userName, string tellerId, string phoneNumber, string reasonId, string actionId, string result1Id, string result2Id, string checkedOut, string customerId, string loanAppId, string completed, string visitorId, string categoryId, string statusId, string startFollowupDate, string endFollowupDate, string startOfflineDateTime, string endOfflineDateTime, string startOnlineDateTime, string endOnlineDateTime)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var tellerIdParameter = tellerId != null ?
                new ObjectParameter("TellerId", tellerId) :
                new ObjectParameter("TellerId", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var reasonIdParameter = reasonId != null ?
                new ObjectParameter("ReasonId", reasonId) :
                new ObjectParameter("ReasonId", typeof(string));
    
            var actionIdParameter = actionId != null ?
                new ObjectParameter("ActionId", actionId) :
                new ObjectParameter("ActionId", typeof(string));
    
            var result1IdParameter = result1Id != null ?
                new ObjectParameter("Result1Id", result1Id) :
                new ObjectParameter("Result1Id", typeof(string));
    
            var result2IdParameter = result2Id != null ?
                new ObjectParameter("Result2Id", result2Id) :
                new ObjectParameter("Result2Id", typeof(string));
    
            var checkedOutParameter = checkedOut != null ?
                new ObjectParameter("CheckedOut", checkedOut) :
                new ObjectParameter("CheckedOut", typeof(string));
    
            var customerIdParameter = customerId != null ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(string));
    
            var loanAppIdParameter = loanAppId != null ?
                new ObjectParameter("LoanAppId", loanAppId) :
                new ObjectParameter("LoanAppId", typeof(string));
    
            var completedParameter = completed != null ?
                new ObjectParameter("Completed", completed) :
                new ObjectParameter("Completed", typeof(string));
    
            var visitorIdParameter = visitorId != null ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(string));
    
            var categoryIdParameter = categoryId != null ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(string));
    
            var statusIdParameter = statusId != null ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(string));
    
            var startFollowupDateParameter = startFollowupDate != null ?
                new ObjectParameter("StartFollowupDate", startFollowupDate) :
                new ObjectParameter("StartFollowupDate", typeof(string));
    
            var endFollowupDateParameter = endFollowupDate != null ?
                new ObjectParameter("EndFollowupDate", endFollowupDate) :
                new ObjectParameter("EndFollowupDate", typeof(string));
    
            var startOfflineDateTimeParameter = startOfflineDateTime != null ?
                new ObjectParameter("StartOfflineDateTime", startOfflineDateTime) :
                new ObjectParameter("StartOfflineDateTime", typeof(string));
    
            var endOfflineDateTimeParameter = endOfflineDateTime != null ?
                new ObjectParameter("EndOfflineDateTime", endOfflineDateTime) :
                new ObjectParameter("EndOfflineDateTime", typeof(string));
    
            var startOnlineDateTimeParameter = startOnlineDateTime != null ?
                new ObjectParameter("StartOnlineDateTime", startOnlineDateTime) :
                new ObjectParameter("StartOnlineDateTime", typeof(string));
    
            var endOnlineDateTimeParameter = endOnlineDateTime != null ?
                new ObjectParameter("EndOnlineDateTime", endOnlineDateTime) :
                new ObjectParameter("EndOnlineDateTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallQueueSearch", emailParameter, lastnameParameter, firstnameParameter, userNameParameter, tellerIdParameter, phoneNumberParameter, reasonIdParameter, actionIdParameter, result1IdParameter, result2IdParameter, checkedOutParameter, customerIdParameter, loanAppIdParameter, completedParameter, visitorIdParameter, categoryIdParameter, statusIdParameter, startFollowupDateParameter, endFollowupDateParameter, startOfflineDateTimeParameter, endOfflineDateTimeParameter, startOnlineDateTimeParameter, endOnlineDateTimeParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRARR_GetRARRLookupList_Result> usp_WebCallRARR_GetRARRLookupList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARR_GetRARRLookupList_Result>("usp_WebCallRARR_GetRARRLookupList");
        }
    
        public virtual ObjectResult<usp_WebCallRARRAction_GetListByReason_Result> usp_WebCallRARRAction_GetListByReason(Nullable<int> rEASONID, Nullable<bool> isSupervisor)
        {
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var isSupervisorParameter = isSupervisor.HasValue ?
                new ObjectParameter("IsSupervisor", isSupervisor) :
                new ObjectParameter("IsSupervisor", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARRAction_GetListByReason_Result>("usp_WebCallRARRAction_GetListByReason", rEASONIDParameter, isSupervisorParameter);
        }
    
        public virtual int usp_WebCallRARRActionDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRActionDelete", idParameter);
        }
    
        public virtual int usp_WebCallRARRActionInsert(ObjectParameter id, string code, string desc)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRActionInsert", id, codeParameter, descParameter);
        }
    
        public virtual int usp_WebCallRARRActionUpdate(Nullable<int> id, string code, string desc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRActionUpdate", idParameter, codeParameter, descParameter);
        }
    
        public virtual int usp_WebCallRARRCategoryReasonDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRCategoryReasonDelete", idParameter);
        }
    
        public virtual int usp_WebCallRARRCategoryReasonInsert(ObjectParameter id, Nullable<int> categoryId, Nullable<int> reasonId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var reasonIdParameter = reasonId.HasValue ?
                new ObjectParameter("ReasonId", reasonId) :
                new ObjectParameter("ReasonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRCategoryReasonInsert", id, categoryIdParameter, reasonIdParameter);
        }
    
        public virtual int usp_WebCallRARRCategoryReasonUpdate(Nullable<int> id, Nullable<int> categoryId, Nullable<int> reasonId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var reasonIdParameter = reasonId.HasValue ?
                new ObjectParameter("ReasonId", reasonId) :
                new ObjectParameter("ReasonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRCategoryReasonUpdate", idParameter, categoryIdParameter, reasonIdParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRARRConfigurationLoad_Result> usp_WebCallRARRConfigurationLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARRConfigurationLoad_Result>("usp_WebCallRARRConfigurationLoad");
        }
    
        public virtual int usp_WebCallRARRDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRDelete", idParameter);
        }
    
        public virtual int usp_WebCallRARReasonDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARReasonDelete", idParameter);
        }
    
        public virtual int usp_WebCallRARReasonInsert(ObjectParameter id, string code, string desc)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARReasonInsert", id, codeParameter, descParameter);
        }
    
        public virtual int usp_WebCallRARReasonUpdate(Nullable<int> id, string code, string desc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARReasonUpdate", idParameter, codeParameter, descParameter);
        }
    
        public virtual int usp_WebCallRARResult1Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARResult1Delete", idParameter);
        }
    
        public virtual int usp_WebCallRARResult1Insert(ObjectParameter id, string code, string desc)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARResult1Insert", id, codeParameter, descParameter);
        }
    
        public virtual int usp_WebCallRARResult1Update(Nullable<int> id, string code, string desc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARResult1Update", idParameter, codeParameter, descParameter);
        }
    
        public virtual int usp_WebCallRARResult2Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARResult2Delete", idParameter);
        }
    
        public virtual int usp_WebCallRARResult2Insert(ObjectParameter id, string code, string desc)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARResult2Insert", id, codeParameter, descParameter);
        }
    
        public virtual int usp_WebCallRARResult2Update(Nullable<int> id, string code, string desc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARResult2Update", idParameter, codeParameter, descParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRARRFeaturesGet_Result> usp_WebCallRARRFeaturesGet(Nullable<int> rARRid)
        {
            var rARRidParameter = rARRid.HasValue ?
                new ObjectParameter("RARRid", rARRid) :
                new ObjectParameter("RARRid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARRFeaturesGet_Result>("usp_WebCallRARRFeaturesGet", rARRidParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRARRFeaturesGetAll_Result> usp_WebCallRARRFeaturesGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARRFeaturesGetAll_Result>("usp_WebCallRARRFeaturesGetAll");
        }
    
        public virtual int usp_WebCallRARRFeaturesInsert(ObjectParameter id, Nullable<int> rARRid, Nullable<int> featureId, Nullable<bool> featureEnable, Nullable<bool> cSRDualAuthEnabled, Nullable<bool> supDualAuthEnabled)
        {
            var rARRidParameter = rARRid.HasValue ?
                new ObjectParameter("RARRid", rARRid) :
                new ObjectParameter("RARRid", typeof(int));
    
            var featureIdParameter = featureId.HasValue ?
                new ObjectParameter("FeatureId", featureId) :
                new ObjectParameter("FeatureId", typeof(int));
    
            var featureEnableParameter = featureEnable.HasValue ?
                new ObjectParameter("FeatureEnable", featureEnable) :
                new ObjectParameter("FeatureEnable", typeof(bool));
    
            var cSRDualAuthEnabledParameter = cSRDualAuthEnabled.HasValue ?
                new ObjectParameter("CSRDualAuthEnabled", cSRDualAuthEnabled) :
                new ObjectParameter("CSRDualAuthEnabled", typeof(bool));
    
            var supDualAuthEnabledParameter = supDualAuthEnabled.HasValue ?
                new ObjectParameter("SupDualAuthEnabled", supDualAuthEnabled) :
                new ObjectParameter("SupDualAuthEnabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRFeaturesInsert", id, rARRidParameter, featureIdParameter, featureEnableParameter, cSRDualAuthEnabledParameter, supDualAuthEnabledParameter);
        }
    
        public virtual int usp_WebCallRARRFeaturesUpdate(Nullable<int> id, Nullable<int> rARRId, Nullable<int> featureId, Nullable<bool> featureEnable, Nullable<bool> cSRDualAuthEnabled, Nullable<bool> supDualAuthEnabled)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var rARRIdParameter = rARRId.HasValue ?
                new ObjectParameter("RARRId", rARRId) :
                new ObjectParameter("RARRId", typeof(int));
    
            var featureIdParameter = featureId.HasValue ?
                new ObjectParameter("FeatureId", featureId) :
                new ObjectParameter("FeatureId", typeof(int));
    
            var featureEnableParameter = featureEnable.HasValue ?
                new ObjectParameter("FeatureEnable", featureEnable) :
                new ObjectParameter("FeatureEnable", typeof(bool));
    
            var cSRDualAuthEnabledParameter = cSRDualAuthEnabled.HasValue ?
                new ObjectParameter("CSRDualAuthEnabled", cSRDualAuthEnabled) :
                new ObjectParameter("CSRDualAuthEnabled", typeof(bool));
    
            var supDualAuthEnabledParameter = supDualAuthEnabled.HasValue ?
                new ObjectParameter("SupDualAuthEnabled", supDualAuthEnabled) :
                new ObjectParameter("SupDualAuthEnabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRFeaturesUpdate", idParameter, rARRIdParameter, featureIdParameter, featureEnableParameter, cSRDualAuthEnabledParameter, supDualAuthEnabledParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRARRGet_Result> usp_WebCallRARRGet(Nullable<int> rARRid)
        {
            var rARRidParameter = rARRid.HasValue ?
                new ObjectParameter("RARRid", rARRid) :
                new ObjectParameter("RARRid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARRGet_Result>("usp_WebCallRARRGet", rARRidParameter);
        }
    
        public virtual int usp_WebCallRarrGroupDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRarrGroupDelete", idParameter);
        }
    
        public virtual int usp_WebCallRarrGroupInsert(ObjectParameter id, string description, Nullable<int> points, Nullable<int> rarrCountOffset)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var pointsParameter = points.HasValue ?
                new ObjectParameter("Points", points) :
                new ObjectParameter("Points", typeof(int));
    
            var rarrCountOffsetParameter = rarrCountOffset.HasValue ?
                new ObjectParameter("RarrCountOffset", rarrCountOffset) :
                new ObjectParameter("RarrCountOffset", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRarrGroupInsert", id, descriptionParameter, pointsParameter, rarrCountOffsetParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRarrGroupLoad_Result> usp_WebCallRarrGroupLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRarrGroupLoad_Result>("usp_WebCallRarrGroupLoad");
        }
    
        public virtual int usp_WebCallRarrGroupRarrDelete(Nullable<int> web_Call_Rarr_KEY, Nullable<int> web_Call_Rarr_Group_KEY)
        {
            var web_Call_Rarr_KEYParameter = web_Call_Rarr_KEY.HasValue ?
                new ObjectParameter("Web_Call_Rarr_KEY", web_Call_Rarr_KEY) :
                new ObjectParameter("Web_Call_Rarr_KEY", typeof(int));
    
            var web_Call_Rarr_Group_KEYParameter = web_Call_Rarr_Group_KEY.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Group_KEY", web_Call_Rarr_Group_KEY) :
                new ObjectParameter("Web_Call_Rarr_Group_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRarrGroupRarrDelete", web_Call_Rarr_KEYParameter, web_Call_Rarr_Group_KEYParameter);
        }
    
        public virtual int usp_WebCallRarrGroupRarrInsert(Nullable<int> web_Call_Rarr_KEY, Nullable<int> web_Call_Rarr_Group_KEY)
        {
            var web_Call_Rarr_KEYParameter = web_Call_Rarr_KEY.HasValue ?
                new ObjectParameter("Web_Call_Rarr_KEY", web_Call_Rarr_KEY) :
                new ObjectParameter("Web_Call_Rarr_KEY", typeof(int));
    
            var web_Call_Rarr_Group_KEYParameter = web_Call_Rarr_Group_KEY.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Group_KEY", web_Call_Rarr_Group_KEY) :
                new ObjectParameter("Web_Call_Rarr_Group_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRarrGroupRarrInsert", web_Call_Rarr_KEYParameter, web_Call_Rarr_Group_KEYParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRARRGroupRarrsLoad_Result> usp_WebCallRARRGroupRarrsLoad(Nullable<int> web_Call_Rarr_Group_KEY)
        {
            var web_Call_Rarr_Group_KEYParameter = web_Call_Rarr_Group_KEY.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Group_KEY", web_Call_Rarr_Group_KEY) :
                new ObjectParameter("Web_Call_Rarr_Group_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARRGroupRarrsLoad_Result>("usp_WebCallRARRGroupRarrsLoad", web_Call_Rarr_Group_KEYParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRarrGroupsGetList_Result> usp_WebCallRarrGroupsGetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRarrGroupsGetList_Result>("usp_WebCallRarrGroupsGetList");
        }
    
        public virtual ObjectResult<usp_WebCallRarrGroupsLoad_Result> usp_WebCallRarrGroupsLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRarrGroupsLoad_Result>("usp_WebCallRarrGroupsLoad");
        }
    
        public virtual int usp_WebCallRarrGroupUpdate(Nullable<int> id, string description, Nullable<int> points, Nullable<int> rarrCountOffset)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var pointsParameter = points.HasValue ?
                new ObjectParameter("Points", points) :
                new ObjectParameter("Points", typeof(int));
    
            var rarrCountOffsetParameter = rarrCountOffset.HasValue ?
                new ObjectParameter("RarrCountOffset", rarrCountOffset) :
                new ObjectParameter("RarrCountOffset", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRarrGroupUpdate", idParameter, descriptionParameter, pointsParameter, rarrCountOffsetParameter);
        }
    
        public virtual int usp_WebCallRARRHistoryDialerResultUpdate(Nullable<int> id, Nullable<int> dialerResultId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var dialerResultIdParameter = dialerResultId.HasValue ?
                new ObjectParameter("DialerResultId", dialerResultId) :
                new ObjectParameter("DialerResultId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRHistoryDialerResultUpdate", idParameter, dialerResultIdParameter);
        }
    
        public virtual int usp_WebCallRARRHistoryInsert(ObjectParameter id, Nullable<int> web_Call_Rarr_Key, Nullable<int> web_Call_Queue_Key, Nullable<int> web_Call_Rarr_Group_Key, string created_By, Nullable<System.DateTime> create_Date, string notes, Nullable<bool> isFollowUp, Nullable<System.DateTime> followUp_Date, string source, Nullable<decimal> forceApprovedAmount)
        {
            var web_Call_Rarr_KeyParameter = web_Call_Rarr_Key.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Key", web_Call_Rarr_Key) :
                new ObjectParameter("Web_Call_Rarr_Key", typeof(int));
    
            var web_Call_Queue_KeyParameter = web_Call_Queue_Key.HasValue ?
                new ObjectParameter("Web_Call_Queue_Key", web_Call_Queue_Key) :
                new ObjectParameter("Web_Call_Queue_Key", typeof(int));
    
            var web_Call_Rarr_Group_KeyParameter = web_Call_Rarr_Group_Key.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Group_Key", web_Call_Rarr_Group_Key) :
                new ObjectParameter("Web_Call_Rarr_Group_Key", typeof(int));
    
            var created_ByParameter = created_By != null ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(string));
    
            var create_DateParameter = create_Date.HasValue ?
                new ObjectParameter("Create_Date", create_Date) :
                new ObjectParameter("Create_Date", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var isFollowUpParameter = isFollowUp.HasValue ?
                new ObjectParameter("IsFollowUp", isFollowUp) :
                new ObjectParameter("IsFollowUp", typeof(bool));
    
            var followUp_DateParameter = followUp_Date.HasValue ?
                new ObjectParameter("FollowUp_Date", followUp_Date) :
                new ObjectParameter("FollowUp_Date", typeof(System.DateTime));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var forceApprovedAmountParameter = forceApprovedAmount.HasValue ?
                new ObjectParameter("ForceApprovedAmount", forceApprovedAmount) :
                new ObjectParameter("ForceApprovedAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRHistoryInsert", id, web_Call_Rarr_KeyParameter, web_Call_Queue_KeyParameter, web_Call_Rarr_Group_KeyParameter, created_ByParameter, create_DateParameter, notesParameter, isFollowUpParameter, followUp_DateParameter, sourceParameter, forceApprovedAmountParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRARRHistoryLoad_Result> usp_WebCallRARRHistoryLoad(Nullable<int> cUSTOMERID, Nullable<int> vISITORID, Nullable<int> lOANAPPID, Nullable<int> wEB_CALL_QUEUE_KEY, Nullable<bool> iNCLUDE_DIALER_RESULTS)
        {
            var cUSTOMERIDParameter = cUSTOMERID.HasValue ?
                new ObjectParameter("CUSTOMERID", cUSTOMERID) :
                new ObjectParameter("CUSTOMERID", typeof(int));
    
            var vISITORIDParameter = vISITORID.HasValue ?
                new ObjectParameter("VISITORID", vISITORID) :
                new ObjectParameter("VISITORID", typeof(int));
    
            var lOANAPPIDParameter = lOANAPPID.HasValue ?
                new ObjectParameter("LOANAPPID", lOANAPPID) :
                new ObjectParameter("LOANAPPID", typeof(int));
    
            var wEB_CALL_QUEUE_KEYParameter = wEB_CALL_QUEUE_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_QUEUE_KEY", wEB_CALL_QUEUE_KEY) :
                new ObjectParameter("WEB_CALL_QUEUE_KEY", typeof(int));
    
            var iNCLUDE_DIALER_RESULTSParameter = iNCLUDE_DIALER_RESULTS.HasValue ?
                new ObjectParameter("INCLUDE_DIALER_RESULTS", iNCLUDE_DIALER_RESULTS) :
                new ObjectParameter("INCLUDE_DIALER_RESULTS", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARRHistoryLoad_Result>("usp_WebCallRARRHistoryLoad", cUSTOMERIDParameter, vISITORIDParameter, lOANAPPIDParameter, wEB_CALL_QUEUE_KEYParameter, iNCLUDE_DIALER_RESULTSParameter);
        }
    
        public virtual int usp_WebCallRARRHistoryUpdate(ObjectParameter id, string notes)
        {
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRHistoryUpdate", id, notesParameter);
        }
    
        public virtual int usp_WebCallRARRInsert(ObjectParameter id, Nullable<int> reasonId, Nullable<int> actionId, Nullable<int> result1Id, Nullable<int> result2Id, Nullable<bool> followUpEnabled, Nullable<int> followUpAutoPopulate, Nullable<bool> followUpPopupSettingDialog, Nullable<int> web_Call_Rarr_Group_Key, Nullable<int> web_Dialer_Result_Type_key, Nullable<int> web_Call_Rarr_Type_key, Nullable<bool> escalate_To_Supervisor, Nullable<bool> disabled, Nullable<bool> updateCategory, Nullable<int> newCategoryId, Nullable<int> points, Nullable<bool> supervisorOnlyRarr)
        {
            var reasonIdParameter = reasonId.HasValue ?
                new ObjectParameter("ReasonId", reasonId) :
                new ObjectParameter("ReasonId", typeof(int));
    
            var actionIdParameter = actionId.HasValue ?
                new ObjectParameter("ActionId", actionId) :
                new ObjectParameter("ActionId", typeof(int));
    
            var result1IdParameter = result1Id.HasValue ?
                new ObjectParameter("Result1Id", result1Id) :
                new ObjectParameter("Result1Id", typeof(int));
    
            var result2IdParameter = result2Id.HasValue ?
                new ObjectParameter("Result2Id", result2Id) :
                new ObjectParameter("Result2Id", typeof(int));
    
            var followUpEnabledParameter = followUpEnabled.HasValue ?
                new ObjectParameter("FollowUpEnabled", followUpEnabled) :
                new ObjectParameter("FollowUpEnabled", typeof(bool));
    
            var followUpAutoPopulateParameter = followUpAutoPopulate.HasValue ?
                new ObjectParameter("FollowUpAutoPopulate", followUpAutoPopulate) :
                new ObjectParameter("FollowUpAutoPopulate", typeof(int));
    
            var followUpPopupSettingDialogParameter = followUpPopupSettingDialog.HasValue ?
                new ObjectParameter("FollowUpPopupSettingDialog", followUpPopupSettingDialog) :
                new ObjectParameter("FollowUpPopupSettingDialog", typeof(bool));
    
            var web_Call_Rarr_Group_KeyParameter = web_Call_Rarr_Group_Key.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Group_Key", web_Call_Rarr_Group_Key) :
                new ObjectParameter("Web_Call_Rarr_Group_Key", typeof(int));
    
            var web_Dialer_Result_Type_keyParameter = web_Dialer_Result_Type_key.HasValue ?
                new ObjectParameter("Web_Dialer_Result_Type_key", web_Dialer_Result_Type_key) :
                new ObjectParameter("Web_Dialer_Result_Type_key", typeof(int));
    
            var web_Call_Rarr_Type_keyParameter = web_Call_Rarr_Type_key.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Type_key", web_Call_Rarr_Type_key) :
                new ObjectParameter("Web_Call_Rarr_Type_key", typeof(int));
    
            var escalate_To_SupervisorParameter = escalate_To_Supervisor.HasValue ?
                new ObjectParameter("Escalate_To_Supervisor", escalate_To_Supervisor) :
                new ObjectParameter("Escalate_To_Supervisor", typeof(bool));
    
            var disabledParameter = disabled.HasValue ?
                new ObjectParameter("Disabled", disabled) :
                new ObjectParameter("Disabled", typeof(bool));
    
            var updateCategoryParameter = updateCategory.HasValue ?
                new ObjectParameter("UpdateCategory", updateCategory) :
                new ObjectParameter("UpdateCategory", typeof(bool));
    
            var newCategoryIdParameter = newCategoryId.HasValue ?
                new ObjectParameter("NewCategoryId", newCategoryId) :
                new ObjectParameter("NewCategoryId", typeof(int));
    
            var pointsParameter = points.HasValue ?
                new ObjectParameter("Points", points) :
                new ObjectParameter("Points", typeof(int));
    
            var supervisorOnlyRarrParameter = supervisorOnlyRarr.HasValue ?
                new ObjectParameter("SupervisorOnlyRarr", supervisorOnlyRarr) :
                new ObjectParameter("SupervisorOnlyRarr", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRInsert", id, reasonIdParameter, actionIdParameter, result1IdParameter, result2IdParameter, followUpEnabledParameter, followUpAutoPopulateParameter, followUpPopupSettingDialogParameter, web_Call_Rarr_Group_KeyParameter, web_Dialer_Result_Type_keyParameter, web_Call_Rarr_Type_keyParameter, escalate_To_SupervisorParameter, disabledParameter, updateCategoryParameter, newCategoryIdParameter, pointsParameter, supervisorOnlyRarrParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRARRListLoad_Result> usp_WebCallRARRListLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARRListLoad_Result>("usp_WebCallRARRListLoad");
        }
    
        public virtual ObjectResult<usp_WebCallRARRReason_GetListByCategory_Result> usp_WebCallRARRReason_GetListByCategory(Nullable<int> cATEGORYID, Nullable<bool> isSupervisor)
        {
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var isSupervisorParameter = isSupervisor.HasValue ?
                new ObjectParameter("IsSupervisor", isSupervisor) :
                new ObjectParameter("IsSupervisor", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARRReason_GetListByCategory_Result>("usp_WebCallRARRReason_GetListByCategory", cATEGORYIDParameter, isSupervisorParameter);
        }
    
        public virtual int usp_WebCallRARRTypeDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRTypeDelete", idParameter);
        }
    
        public virtual int usp_WebCallRARRTypeInsert(ObjectParameter id, string code, string desc)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRTypeInsert", id, codeParameter, descParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRARRTypeLoad_Result> usp_WebCallRARRTypeLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRARRTypeLoad_Result>("usp_WebCallRARRTypeLoad");
        }
    
        public virtual int usp_WebCallRARRTypeUpdate(Nullable<int> id, string code, string desc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRTypeUpdate", idParameter, codeParameter, descParameter);
        }
    
        public virtual int usp_WebCallRARRUpdate(Nullable<int> id, Nullable<int> reasonId, Nullable<int> actionId, Nullable<int> result1Id, Nullable<int> result2Id, Nullable<bool> followUpEnabled, Nullable<int> followUpAutoPopulate, Nullable<bool> followUpPopupSettingDialog, Nullable<int> web_Call_Rarr_Group_Key, Nullable<int> web_Dialer_Result_Type_key, Nullable<int> web_Call_Rarr_Type_key, Nullable<bool> escalate_To_Supervisor, Nullable<bool> disabled, Nullable<bool> updateCategory, Nullable<int> newCategoryId, Nullable<int> points, Nullable<bool> supervisorOnlyRarr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var reasonIdParameter = reasonId.HasValue ?
                new ObjectParameter("ReasonId", reasonId) :
                new ObjectParameter("ReasonId", typeof(int));
    
            var actionIdParameter = actionId.HasValue ?
                new ObjectParameter("ActionId", actionId) :
                new ObjectParameter("ActionId", typeof(int));
    
            var result1IdParameter = result1Id.HasValue ?
                new ObjectParameter("Result1Id", result1Id) :
                new ObjectParameter("Result1Id", typeof(int));
    
            var result2IdParameter = result2Id.HasValue ?
                new ObjectParameter("Result2Id", result2Id) :
                new ObjectParameter("Result2Id", typeof(int));
    
            var followUpEnabledParameter = followUpEnabled.HasValue ?
                new ObjectParameter("FollowUpEnabled", followUpEnabled) :
                new ObjectParameter("FollowUpEnabled", typeof(bool));
    
            var followUpAutoPopulateParameter = followUpAutoPopulate.HasValue ?
                new ObjectParameter("FollowUpAutoPopulate", followUpAutoPopulate) :
                new ObjectParameter("FollowUpAutoPopulate", typeof(int));
    
            var followUpPopupSettingDialogParameter = followUpPopupSettingDialog.HasValue ?
                new ObjectParameter("FollowUpPopupSettingDialog", followUpPopupSettingDialog) :
                new ObjectParameter("FollowUpPopupSettingDialog", typeof(bool));
    
            var web_Call_Rarr_Group_KeyParameter = web_Call_Rarr_Group_Key.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Group_Key", web_Call_Rarr_Group_Key) :
                new ObjectParameter("Web_Call_Rarr_Group_Key", typeof(int));
    
            var web_Dialer_Result_Type_keyParameter = web_Dialer_Result_Type_key.HasValue ?
                new ObjectParameter("Web_Dialer_Result_Type_key", web_Dialer_Result_Type_key) :
                new ObjectParameter("Web_Dialer_Result_Type_key", typeof(int));
    
            var web_Call_Rarr_Type_keyParameter = web_Call_Rarr_Type_key.HasValue ?
                new ObjectParameter("Web_Call_Rarr_Type_key", web_Call_Rarr_Type_key) :
                new ObjectParameter("Web_Call_Rarr_Type_key", typeof(int));
    
            var escalate_To_SupervisorParameter = escalate_To_Supervisor.HasValue ?
                new ObjectParameter("Escalate_To_Supervisor", escalate_To_Supervisor) :
                new ObjectParameter("Escalate_To_Supervisor", typeof(bool));
    
            var disabledParameter = disabled.HasValue ?
                new ObjectParameter("Disabled", disabled) :
                new ObjectParameter("Disabled", typeof(bool));
    
            var updateCategoryParameter = updateCategory.HasValue ?
                new ObjectParameter("UpdateCategory", updateCategory) :
                new ObjectParameter("UpdateCategory", typeof(bool));
    
            var newCategoryIdParameter = newCategoryId.HasValue ?
                new ObjectParameter("NewCategoryId", newCategoryId) :
                new ObjectParameter("NewCategoryId", typeof(int));
    
            var pointsParameter = points.HasValue ?
                new ObjectParameter("Points", points) :
                new ObjectParameter("Points", typeof(int));
    
            var supervisorOnlyRarrParameter = supervisorOnlyRarr.HasValue ?
                new ObjectParameter("SupervisorOnlyRarr", supervisorOnlyRarr) :
                new ObjectParameter("SupervisorOnlyRarr", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallRARRUpdate", idParameter, reasonIdParameter, actionIdParameter, result1IdParameter, result2IdParameter, followUpEnabledParameter, followUpAutoPopulateParameter, followUpPopupSettingDialogParameter, web_Call_Rarr_Group_KeyParameter, web_Dialer_Result_Type_keyParameter, web_Call_Rarr_Type_keyParameter, escalate_To_SupervisorParameter, disabledParameter, updateCategoryParameter, newCategoryIdParameter, pointsParameter, supervisorOnlyRarrParameter);
        }
    
        public virtual ObjectResult<usp_WebCallRelatedItemsLoad_Result> usp_WebCallRelatedItemsLoad(Nullable<int> parentItemId)
        {
            var parentItemIdParameter = parentItemId.HasValue ?
                new ObjectParameter("ParentItemId", parentItemId) :
                new ObjectParameter("ParentItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallRelatedItemsLoad_Result>("usp_WebCallRelatedItemsLoad", parentItemIdParameter);
        }
    
        public virtual int usp_WebCallReOpenQueueItem(Nullable<int> iD, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallReOpenQueueItem", iDParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebCallReOpenRelatedCustomerIssues(Nullable<int> iD, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallReOpenRelatedCustomerIssues", iDParameter, currentUserIdParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_CardCaptures_Result> usp_WebCallReports_CardCaptures(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_CardCaptures_Result>("usp_WebCallReports_CardCaptures", beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_CardRemovals_Result> usp_WebCallReports_CardRemovals(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_CardRemovals_Result>("usp_WebCallReports_CardRemovals", beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_ChangeDueDate_History_Result> usp_WebCallReports_ChangeDueDate_History(Nullable<int> datefirst, Nullable<bool> autoRange, Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var datefirstParameter = datefirst.HasValue ?
                new ObjectParameter("Datefirst", datefirst) :
                new ObjectParameter("Datefirst", typeof(int));
    
            var autoRangeParameter = autoRange.HasValue ?
                new ObjectParameter("AutoRange", autoRange) :
                new ObjectParameter("AutoRange", typeof(bool));
    
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_ChangeDueDate_History_Result>("usp_WebCallReports_ChangeDueDate_History", datefirstParameter, autoRangeParameter, beginDateParameter, endDateParameter);
        }
    
        public virtual int usp_WebCallReports_ChangeDueDate_Totals(Nullable<int> datefirst, Nullable<bool> autoRange, Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var datefirstParameter = datefirst.HasValue ?
                new ObjectParameter("Datefirst", datefirst) :
                new ObjectParameter("Datefirst", typeof(int));
    
            var autoRangeParameter = autoRange.HasValue ?
                new ObjectParameter("AutoRange", autoRange) :
                new ObjectParameter("AutoRange", typeof(bool));
    
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallReports_ChangeDueDate_Totals", datefirstParameter, autoRangeParameter, beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_CreditCardUsage_Result> usp_WebCallReports_CreditCardUsage(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> beginScoreDate, Nullable<System.DateTime> endScoreDate)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var beginScoreDateParameter = beginScoreDate.HasValue ?
                new ObjectParameter("BeginScoreDate", beginScoreDate) :
                new ObjectParameter("BeginScoreDate", typeof(System.DateTime));
    
            var endScoreDateParameter = endScoreDate.HasValue ?
                new ObjectParameter("EndScoreDate", endScoreDate) :
                new ObjectParameter("EndScoreDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_CreditCardUsage_Result>("usp_WebCallReports_CreditCardUsage", beginDateParameter, endDateParameter, beginScoreDateParameter, endScoreDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_CSRBonus_CSRSummary_Result> usp_WebCallReports_CSRBonus_CSRSummary(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<bool> countDefaultedLoans)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var countDefaultedLoansParameter = countDefaultedLoans.HasValue ?
                new ObjectParameter("CountDefaultedLoans", countDefaultedLoans) :
                new ObjectParameter("CountDefaultedLoans", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_CSRBonus_CSRSummary_Result>("usp_WebCallReports_CSRBonus_CSRSummary", beginDateParameter, endDateParameter, countDefaultedLoansParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_CSRBonus_Daily_Result> usp_WebCallReports_CSRBonus_Daily(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<bool> countDefaultedLoans, Nullable<int> minimumPointsPerLoan)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var countDefaultedLoansParameter = countDefaultedLoans.HasValue ?
                new ObjectParameter("CountDefaultedLoans", countDefaultedLoans) :
                new ObjectParameter("CountDefaultedLoans", typeof(bool));
    
            var minimumPointsPerLoanParameter = minimumPointsPerLoan.HasValue ?
                new ObjectParameter("MinimumPointsPerLoan", minimumPointsPerLoan) :
                new ObjectParameter("MinimumPointsPerLoan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_CSRBonus_Daily_Result>("usp_WebCallReports_CSRBonus_Daily", beginDateParameter, endDateParameter, countDefaultedLoansParameter, minimumPointsPerLoanParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_CSRRanking_ApplicationRARRs_Result> usp_WebCallReports_CSRRanking_ApplicationRARRs(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> rARRDaysOffset, Nullable<int> loanAppKey, string cSRKey, Nullable<int> vISITOR_KEY, string firstName, string lastName)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var rARRDaysOffsetParameter = rARRDaysOffset.HasValue ?
                new ObjectParameter("RARRDaysOffset", rARRDaysOffset) :
                new ObjectParameter("RARRDaysOffset", typeof(int));
    
            var loanAppKeyParameter = loanAppKey.HasValue ?
                new ObjectParameter("LoanAppKey", loanAppKey) :
                new ObjectParameter("LoanAppKey", typeof(int));
    
            var cSRKeyParameter = cSRKey != null ?
                new ObjectParameter("CSRKey", cSRKey) :
                new ObjectParameter("CSRKey", typeof(string));
    
            var vISITOR_KEYParameter = vISITOR_KEY.HasValue ?
                new ObjectParameter("VISITOR_KEY", vISITOR_KEY) :
                new ObjectParameter("VISITOR_KEY", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_CSRRanking_ApplicationRARRs_Result>("usp_WebCallReports_CSRRanking_ApplicationRARRs", startDateParameter, endDateParameter, rARRDaysOffsetParameter, loanAppKeyParameter, cSRKeyParameter, vISITOR_KEYParameter, firstNameParameter, lastNameParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_CSRRanking_CSRApplications_Result> usp_WebCallReports_CSRRanking_CSRApplications(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string rARRReasonKeys, string cSRKey, Nullable<bool> includeSupervisors, Nullable<bool> includeNonLoanAppRarrs)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var rARRReasonKeysParameter = rARRReasonKeys != null ?
                new ObjectParameter("RARRReasonKeys", rARRReasonKeys) :
                new ObjectParameter("RARRReasonKeys", typeof(string));
    
            var cSRKeyParameter = cSRKey != null ?
                new ObjectParameter("CSRKey", cSRKey) :
                new ObjectParameter("CSRKey", typeof(string));
    
            var includeSupervisorsParameter = includeSupervisors.HasValue ?
                new ObjectParameter("IncludeSupervisors", includeSupervisors) :
                new ObjectParameter("IncludeSupervisors", typeof(bool));
    
            var includeNonLoanAppRarrsParameter = includeNonLoanAppRarrs.HasValue ?
                new ObjectParameter("IncludeNonLoanAppRarrs", includeNonLoanAppRarrs) :
                new ObjectParameter("IncludeNonLoanAppRarrs", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_CSRRanking_CSRApplications_Result>("usp_WebCallReports_CSRRanking_CSRApplications", startDateParameter, endDateParameter, rARRReasonKeysParameter, cSRKeyParameter, includeSupervisorsParameter, includeNonLoanAppRarrsParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_CSRRanking_CSRSummary_Result> usp_WebCallReports_CSRRanking_CSRSummary(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string rARRReasonKeys, Nullable<bool> includeSupervisors, Nullable<bool> includeNonLoanAppRarrs)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var rARRReasonKeysParameter = rARRReasonKeys != null ?
                new ObjectParameter("RARRReasonKeys", rARRReasonKeys) :
                new ObjectParameter("RARRReasonKeys", typeof(string));
    
            var includeSupervisorsParameter = includeSupervisors.HasValue ?
                new ObjectParameter("IncludeSupervisors", includeSupervisors) :
                new ObjectParameter("IncludeSupervisors", typeof(bool));
    
            var includeNonLoanAppRarrsParameter = includeNonLoanAppRarrs.HasValue ?
                new ObjectParameter("IncludeNonLoanAppRarrs", includeNonLoanAppRarrs) :
                new ObjectParameter("IncludeNonLoanAppRarrs", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_CSRRanking_CSRSummary_Result>("usp_WebCallReports_CSRRanking_CSRSummary", startDateParameter, endDateParameter, rARRReasonKeysParameter, includeSupervisorsParameter, includeNonLoanAppRarrsParameter);
        }
    
        public virtual int usp_WebCallReports_CSRRARRActivity(string rARRList, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var rARRListParameter = rARRList != null ?
                new ObjectParameter("RARRList", rARRList) :
                new ObjectParameter("RARRList", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallReports_CSRRARRActivity", rARRListParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int usp_WebCallReports_CustomerFraud(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallReports_CustomerFraud", beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_CustomerResponseEfficiency_Result> usp_WebCallReports_CustomerResponseEfficiency(string teller, Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_CustomerResponseEfficiency_Result>("usp_WebCallReports_CustomerResponseEfficiency", tellerParameter, beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_CustomersInCategories_Result> usp_WebCallReports_CustomersInCategories(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate, Nullable<bool> includeClosedWorkItems, Nullable<int> categoryId, Nullable<int> appStatusFlags, Nullable<int> locationId)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var includeClosedWorkItemsParameter = includeClosedWorkItems.HasValue ?
                new ObjectParameter("IncludeClosedWorkItems", includeClosedWorkItems) :
                new ObjectParameter("IncludeClosedWorkItems", typeof(bool));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var appStatusFlagsParameter = appStatusFlags.HasValue ?
                new ObjectParameter("AppStatusFlags", appStatusFlags) :
                new ObjectParameter("AppStatusFlags", typeof(int));
    
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_CustomersInCategories_Result>("usp_WebCallReports_CustomersInCategories", beginDateParameter, endDateParameter, includeClosedWorkItemsParameter, categoryIdParameter, appStatusFlagsParameter, locationIdParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_DialerList_Result> usp_WebCallReports_DialerList(Nullable<int> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_DialerList_Result>("usp_WebCallReports_DialerList", campaignIDParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_DualAuthAudit_Result> usp_WebCallReports_DualAuthAudit(string requestedBy, string authorizedBy, Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var requestedByParameter = requestedBy != null ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(string));
    
            var authorizedByParameter = authorizedBy != null ?
                new ObjectParameter("AuthorizedBy", authorizedBy) :
                new ObjectParameter("AuthorizedBy", typeof(string));
    
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_DualAuthAudit_Result>("usp_WebCallReports_DualAuthAudit", requestedByParameter, authorizedByParameter, beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_EmailDispositionsByAddress_Result> usp_WebCallReports_EmailDispositionsByAddress(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_EmailDispositionsByAddress_Result>("usp_WebCallReports_EmailDispositionsByAddress", beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_EmailDispositionsByTeamMember_Result> usp_WebCallReports_EmailDispositionsByTeamMember(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_EmailDispositionsByTeamMember_Result>("usp_WebCallReports_EmailDispositionsByTeamMember", beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_EmailTotalHandleTime_Result> usp_WebCallReports_EmailTotalHandleTime(string teller, Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_EmailTotalHandleTime_Result>("usp_WebCallReports_EmailTotalHandleTime", tellerParameter, beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_EmailTotals_Result> usp_WebCallReports_EmailTotals(string teller, Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_EmailTotals_Result>("usp_WebCallReports_EmailTotals", tellerParameter, beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_FirstTimeDefaults_Result> usp_WebCallReports_FirstTimeDefaults()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_FirstTimeDefaults_Result>("usp_WebCallReports_FirstTimeDefaults");
        }
    
        public virtual ObjectResult<usp_WebCallReports_ForceApprovals_Result> usp_WebCallReports_ForceApprovals(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_ForceApprovals_Result>("usp_WebCallReports_ForceApprovals", beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_ForceApprovals1_Result> usp_WebCallReports_ForceApprovals1(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_ForceApprovals1_Result>("usp_WebCallReports_ForceApprovals1", beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_LBPApplicationStatus_Result> usp_WebCallReports_LBPApplicationStatus(Nullable<System.DateTime> applicationBeginDate, Nullable<System.DateTime> applicationEndDate, Nullable<System.DateTime> fundedBeginDate, Nullable<System.DateTime> fundedEndDate, Nullable<System.DateTime> scoreBeginDate, Nullable<System.DateTime> scoreEndDate)
        {
            var applicationBeginDateParameter = applicationBeginDate.HasValue ?
                new ObjectParameter("ApplicationBeginDate", applicationBeginDate) :
                new ObjectParameter("ApplicationBeginDate", typeof(System.DateTime));
    
            var applicationEndDateParameter = applicationEndDate.HasValue ?
                new ObjectParameter("ApplicationEndDate", applicationEndDate) :
                new ObjectParameter("ApplicationEndDate", typeof(System.DateTime));
    
            var fundedBeginDateParameter = fundedBeginDate.HasValue ?
                new ObjectParameter("FundedBeginDate", fundedBeginDate) :
                new ObjectParameter("FundedBeginDate", typeof(System.DateTime));
    
            var fundedEndDateParameter = fundedEndDate.HasValue ?
                new ObjectParameter("FundedEndDate", fundedEndDate) :
                new ObjectParameter("FundedEndDate", typeof(System.DateTime));
    
            var scoreBeginDateParameter = scoreBeginDate.HasValue ?
                new ObjectParameter("ScoreBeginDate", scoreBeginDate) :
                new ObjectParameter("ScoreBeginDate", typeof(System.DateTime));
    
            var scoreEndDateParameter = scoreEndDate.HasValue ?
                new ObjectParameter("ScoreEndDate", scoreEndDate) :
                new ObjectParameter("ScoreEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_LBPApplicationStatus_Result>("usp_WebCallReports_LBPApplicationStatus", applicationBeginDateParameter, applicationEndDateParameter, fundedBeginDateParameter, fundedEndDateParameter, scoreBeginDateParameter, scoreEndDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_LBPConversionRate_Result> usp_WebCallReports_LBPConversionRate(Nullable<System.DateTime> applicationBeginDate, Nullable<System.DateTime> applicationEndDate, Nullable<System.DateTime> fundedBeginDate, Nullable<System.DateTime> fundedEndDate, Nullable<System.DateTime> scoreBeginDate, Nullable<System.DateTime> scoreEndDate)
        {
            var applicationBeginDateParameter = applicationBeginDate.HasValue ?
                new ObjectParameter("ApplicationBeginDate", applicationBeginDate) :
                new ObjectParameter("ApplicationBeginDate", typeof(System.DateTime));
    
            var applicationEndDateParameter = applicationEndDate.HasValue ?
                new ObjectParameter("ApplicationEndDate", applicationEndDate) :
                new ObjectParameter("ApplicationEndDate", typeof(System.DateTime));
    
            var fundedBeginDateParameter = fundedBeginDate.HasValue ?
                new ObjectParameter("FundedBeginDate", fundedBeginDate) :
                new ObjectParameter("FundedBeginDate", typeof(System.DateTime));
    
            var fundedEndDateParameter = fundedEndDate.HasValue ?
                new ObjectParameter("FundedEndDate", fundedEndDate) :
                new ObjectParameter("FundedEndDate", typeof(System.DateTime));
    
            var scoreBeginDateParameter = scoreBeginDate.HasValue ?
                new ObjectParameter("ScoreBeginDate", scoreBeginDate) :
                new ObjectParameter("ScoreBeginDate", typeof(System.DateTime));
    
            var scoreEndDateParameter = scoreEndDate.HasValue ?
                new ObjectParameter("ScoreEndDate", scoreEndDate) :
                new ObjectParameter("ScoreEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_LBPConversionRate_Result>("usp_WebCallReports_LBPConversionRate", applicationBeginDateParameter, applicationEndDateParameter, fundedBeginDateParameter, fundedEndDateParameter, scoreBeginDateParameter, scoreEndDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_ManualCredits_Result> usp_WebCallReports_ManualCredits(Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_ManualCredits_Result>("usp_WebCallReports_ManualCredits", beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_PromoCodeByLoanDetails1_Result> usp_WebCallReports_PromoCodeByLoanDetails1(string promoCode, Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var promoCodeParameter = promoCode != null ?
                new ObjectParameter("PromoCode", promoCode) :
                new ObjectParameter("PromoCode", typeof(string));
    
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_PromoCodeByLoanDetails1_Result>("usp_WebCallReports_PromoCodeByLoanDetails1", promoCodeParameter, beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_PromoCodeTotals1_Result> usp_WebCallReports_PromoCodeTotals1(string promoCode, Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var promoCodeParameter = promoCode != null ?
                new ObjectParameter("PromoCode", promoCode) :
                new ObjectParameter("PromoCode", typeof(string));
    
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_PromoCodeTotals1_Result>("usp_WebCallReports_PromoCodeTotals1", promoCodeParameter, beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_PromoCodeTotalsByCSR1_Result> usp_WebCallReports_PromoCodeTotalsByCSR1(string promoCode, Nullable<System.DateTime> beginDate, Nullable<System.DateTime> endDate)
        {
            var promoCodeParameter = promoCode != null ?
                new ObjectParameter("PromoCode", promoCode) :
                new ObjectParameter("PromoCode", typeof(string));
    
            var beginDateParameter = beginDate.HasValue ?
                new ObjectParameter("BeginDate", beginDate) :
                new ObjectParameter("BeginDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_PromoCodeTotalsByCSR1_Result>("usp_WebCallReports_PromoCodeTotalsByCSR1", promoCodeParameter, beginDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_SRCDaily_Result> usp_WebCallReports_SRCDaily(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_SRCDaily_Result>("usp_WebCallReports_SRCDaily", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallReports_UserWorkComplete_Result> usp_WebCallReports_UserWorkComplete(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallReports_UserWorkComplete_Result>("usp_WebCallReports_UserWorkComplete", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallResult1_GetListByReasonAction_Result> usp_WebCallResult1_GetListByReasonAction(Nullable<int> rEASONID, Nullable<int> aCTIONID, Nullable<bool> isSupervisor)
        {
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var aCTIONIDParameter = aCTIONID.HasValue ?
                new ObjectParameter("ACTIONID", aCTIONID) :
                new ObjectParameter("ACTIONID", typeof(int));
    
            var isSupervisorParameter = isSupervisor.HasValue ?
                new ObjectParameter("IsSupervisor", isSupervisor) :
                new ObjectParameter("IsSupervisor", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallResult1_GetListByReasonAction_Result>("usp_WebCallResult1_GetListByReasonAction", rEASONIDParameter, aCTIONIDParameter, isSupervisorParameter);
        }
    
        public virtual ObjectResult<usp_WebCallResult2_GetListByReasonActionResult1_Result> usp_WebCallResult2_GetListByReasonActionResult1(Nullable<int> rEASONID, Nullable<int> aCTIONID, Nullable<int> rESULT1ID, Nullable<bool> isSupervisor)
        {
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var aCTIONIDParameter = aCTIONID.HasValue ?
                new ObjectParameter("ACTIONID", aCTIONID) :
                new ObjectParameter("ACTIONID", typeof(int));
    
            var rESULT1IDParameter = rESULT1ID.HasValue ?
                new ObjectParameter("RESULT1ID", rESULT1ID) :
                new ObjectParameter("RESULT1ID", typeof(int));
    
            var isSupervisorParameter = isSupervisor.HasValue ?
                new ObjectParameter("IsSupervisor", isSupervisor) :
                new ObjectParameter("IsSupervisor", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallResult2_GetListByReasonActionResult1_Result>("usp_WebCallResult2_GetListByReasonActionResult1", rEASONIDParameter, aCTIONIDParameter, rESULT1IDParameter, isSupervisorParameter);
        }
    
        public virtual int usp_WebCallSearch(string lastname, string firstname, string email, string sSN, string loanNumber, string applicationNumber, string state, string phone, Nullable<bool> internetOnly, string aBA, string accountNumber, Nullable<bool> showCompletedWorkItems)
        {
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var sSNParameter = sSN != null ?
                new ObjectParameter("SSN", sSN) :
                new ObjectParameter("SSN", typeof(string));
    
            var loanNumberParameter = loanNumber != null ?
                new ObjectParameter("LoanNumber", loanNumber) :
                new ObjectParameter("LoanNumber", typeof(string));
    
            var applicationNumberParameter = applicationNumber != null ?
                new ObjectParameter("ApplicationNumber", applicationNumber) :
                new ObjectParameter("ApplicationNumber", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var internetOnlyParameter = internetOnly.HasValue ?
                new ObjectParameter("InternetOnly", internetOnly) :
                new ObjectParameter("InternetOnly", typeof(bool));
    
            var aBAParameter = aBA != null ?
                new ObjectParameter("ABA", aBA) :
                new ObjectParameter("ABA", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var showCompletedWorkItemsParameter = showCompletedWorkItems.HasValue ?
                new ObjectParameter("ShowCompletedWorkItems", showCompletedWorkItems) :
                new ObjectParameter("ShowCompletedWorkItems", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallSearch", lastnameParameter, firstnameParameter, emailParameter, sSNParameter, loanNumberParameter, applicationNumberParameter, stateParameter, phoneParameter, internetOnlyParameter, aBAParameter, accountNumberParameter, showCompletedWorkItemsParameter);
        }
    
        public virtual int usp_WebCallSuppressRarrPoints(Nullable<int> rarrHistoryKey, string supressPointsReason)
        {
            var rarrHistoryKeyParameter = rarrHistoryKey.HasValue ?
                new ObjectParameter("RarrHistoryKey", rarrHistoryKey) :
                new ObjectParameter("RarrHistoryKey", typeof(int));
    
            var supressPointsReasonParameter = supressPointsReason != null ?
                new ObjectParameter("SupressPointsReason", supressPointsReason) :
                new ObjectParameter("SupressPointsReason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallSuppressRarrPoints", rarrHistoryKeyParameter, supressPointsReasonParameter);
        }
    
        public virtual int usp_WebCallTeamDelete(Nullable<int> web_Call_Team_Key)
        {
            var web_Call_Team_KeyParameter = web_Call_Team_Key.HasValue ?
                new ObjectParameter("Web_Call_Team_Key", web_Call_Team_Key) :
                new ObjectParameter("Web_Call_Team_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallTeamDelete", web_Call_Team_KeyParameter);
        }
    
        public virtual int usp_WebCallTeamInsert(ObjectParameter web_Call_Team_Key, string name, string created_By)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var created_ByParameter = created_By != null ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallTeamInsert", web_Call_Team_Key, nameParameter, created_ByParameter);
        }
    
        public virtual ObjectResult<usp_WebCallTeamsLoad_Result> usp_WebCallTeamsLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallTeamsLoad_Result>("usp_WebCallTeamsLoad");
        }
    
        public virtual int usp_WebCallTeamUpdate(Nullable<int> web_Call_Team_Key, string name)
        {
            var web_Call_Team_KeyParameter = web_Call_Team_Key.HasValue ?
                new ObjectParameter("Web_Call_Team_Key", web_Call_Team_Key) :
                new ObjectParameter("Web_Call_Team_Key", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallTeamUpdate", web_Call_Team_KeyParameter, nameParameter);
        }
    
        public virtual int usp_WebCallTeamUserDelete(Nullable<int> web_Call_TeamUser_Key)
        {
            var web_Call_TeamUser_KeyParameter = web_Call_TeamUser_Key.HasValue ?
                new ObjectParameter("Web_Call_TeamUser_Key", web_Call_TeamUser_Key) :
                new ObjectParameter("Web_Call_TeamUser_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallTeamUserDelete", web_Call_TeamUser_KeyParameter);
        }
    
        public virtual int usp_WebCallTeamUserInsert(ObjectParameter web_Call_TeamUser_Key, Nullable<int> web_Call_Team_Key, string teller, string created_By)
        {
            var web_Call_Team_KeyParameter = web_Call_Team_Key.HasValue ?
                new ObjectParameter("Web_Call_Team_Key", web_Call_Team_Key) :
                new ObjectParameter("Web_Call_Team_Key", typeof(int));
    
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var created_ByParameter = created_By != null ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallTeamUserInsert", web_Call_TeamUser_Key, web_Call_Team_KeyParameter, tellerParameter, created_ByParameter);
        }
    
        public virtual ObjectResult<usp_WebCallTeamUsersLoad_Result> usp_WebCallTeamUsersLoad(Nullable<int> web_Call_Team_Key)
        {
            var web_Call_Team_KeyParameter = web_Call_Team_Key.HasValue ?
                new ObjectParameter("Web_Call_Team_Key", web_Call_Team_Key) :
                new ObjectParameter("Web_Call_Team_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallTeamUsersLoad_Result>("usp_WebCallTeamUsersLoad", web_Call_Team_KeyParameter);
        }
    
        public virtual int usp_WebCallUnSuppressRarrPoints(Nullable<int> rarrHistoryKey)
        {
            var rarrHistoryKeyParameter = rarrHistoryKey.HasValue ?
                new ObjectParameter("RarrHistoryKey", rarrHistoryKey) :
                new ObjectParameter("RarrHistoryKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallUnSuppressRarrPoints", rarrHistoryKeyParameter);
        }
    
        public virtual int usp_WebCallUpdateQueueFromWorkQueue(Nullable<int> queueID)
        {
            var queueIDParameter = queueID.HasValue ?
                new ObjectParameter("QueueID", queueID) :
                new ObjectParameter("QueueID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallUpdateQueueFromWorkQueue", queueIDParameter);
        }
    
        public virtual ObjectResult<usp_WebCallUserActivityHistory_Result> usp_WebCallUserActivityHistory(Nullable<System.DateTime> minStartDate, Nullable<System.DateTime> maxStartDate, Nullable<bool> includeActive, string user)
        {
            var minStartDateParameter = minStartDate.HasValue ?
                new ObjectParameter("MinStartDate", minStartDate) :
                new ObjectParameter("MinStartDate", typeof(System.DateTime));
    
            var maxStartDateParameter = maxStartDate.HasValue ?
                new ObjectParameter("MaxStartDate", maxStartDate) :
                new ObjectParameter("MaxStartDate", typeof(System.DateTime));
    
            var includeActiveParameter = includeActive.HasValue ?
                new ObjectParameter("IncludeActive", includeActive) :
                new ObjectParameter("IncludeActive", typeof(bool));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallUserActivityHistory_Result>("usp_WebCallUserActivityHistory", minStartDateParameter, maxStartDateParameter, includeActiveParameter, userParameter);
        }
    
        public virtual int usp_WebCallUserSettingDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallUserSettingDelete", idParameter);
        }
    
        public virtual int usp_WebCallUserSettingInsert(ObjectParameter id, string user, string setting, string value)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var settingParameter = setting != null ?
                new ObjectParameter("Setting", setting) :
                new ObjectParameter("Setting", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallUserSettingInsert", id, userParameter, settingParameter, valueParameter);
        }
    
        public virtual ObjectResult<usp_WebCallUserSettingsLoadByUser_Result> usp_WebCallUserSettingsLoadByUser(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallUserSettingsLoadByUser_Result>("usp_WebCallUserSettingsLoadByUser", userParameter);
        }
    
        public virtual int usp_WebCallUserSettingUpdate(Nullable<int> id, string user, string setting, string value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var settingParameter = setting != null ?
                new ObjectParameter("Setting", setting) :
                new ObjectParameter("Setting", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallUserSettingUpdate", idParameter, userParameter, settingParameter, valueParameter);
        }
    
        public virtual int usp_WebCallVisitorAlertDelete(Nullable<int> web_Call_VisitorAlertId)
        {
            var web_Call_VisitorAlertIdParameter = web_Call_VisitorAlertId.HasValue ?
                new ObjectParameter("Web_Call_VisitorAlertId", web_Call_VisitorAlertId) :
                new ObjectParameter("Web_Call_VisitorAlertId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallVisitorAlertDelete", web_Call_VisitorAlertIdParameter);
        }
    
        public virtual int usp_WebCallVisitorAlertInsert(ObjectParameter web_Call_VisitorAlertId, Nullable<int> visitorId, string alertNote, Nullable<System.DateTime> expirationDate, Nullable<bool> active, string userName, Nullable<System.DateTime> editDate)
        {
            var visitorIdParameter = visitorId.HasValue ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(int));
    
            var alertNoteParameter = alertNote != null ?
                new ObjectParameter("AlertNote", alertNote) :
                new ObjectParameter("AlertNote", typeof(string));
    
            var expirationDateParameter = expirationDate.HasValue ?
                new ObjectParameter("ExpirationDate", expirationDate) :
                new ObjectParameter("ExpirationDate", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var editDateParameter = editDate.HasValue ?
                new ObjectParameter("EditDate", editDate) :
                new ObjectParameter("EditDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallVisitorAlertInsert", web_Call_VisitorAlertId, visitorIdParameter, alertNoteParameter, expirationDateParameter, activeParameter, userNameParameter, editDateParameter);
        }
    
        public virtual ObjectResult<usp_WebCallVisitorAlertLoad_Result> usp_WebCallVisitorAlertLoad(Nullable<int> visitorId)
        {
            var visitorIdParameter = visitorId.HasValue ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallVisitorAlertLoad_Result>("usp_WebCallVisitorAlertLoad", visitorIdParameter);
        }
    
        public virtual int usp_WebCallVisitorAlertUpdate(Nullable<int> web_Call_VisitorAlertId, Nullable<int> visitorId, string alertNote, Nullable<System.DateTime> expirationDate, Nullable<bool> active, string userName, Nullable<System.DateTime> editDate)
        {
            var web_Call_VisitorAlertIdParameter = web_Call_VisitorAlertId.HasValue ?
                new ObjectParameter("Web_Call_VisitorAlertId", web_Call_VisitorAlertId) :
                new ObjectParameter("Web_Call_VisitorAlertId", typeof(int));
    
            var visitorIdParameter = visitorId.HasValue ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(int));
    
            var alertNoteParameter = alertNote != null ?
                new ObjectParameter("AlertNote", alertNote) :
                new ObjectParameter("AlertNote", typeof(string));
    
            var expirationDateParameter = expirationDate.HasValue ?
                new ObjectParameter("ExpirationDate", expirationDate) :
                new ObjectParameter("ExpirationDate", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var editDateParameter = editDate.HasValue ?
                new ObjectParameter("EditDate", editDate) :
                new ObjectParameter("EditDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallVisitorAlertUpdate", web_Call_VisitorAlertIdParameter, visitorIdParameter, alertNoteParameter, expirationDateParameter, activeParameter, userNameParameter, editDateParameter);
        }
    
        public virtual int usp_WebCallVisitorSearch(string email, string lastname, string firstname, string address, string city, string state, string zipcode, string sSN, string loanAppId)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(string));
    
            var sSNParameter = sSN != null ?
                new ObjectParameter("SSN", sSN) :
                new ObjectParameter("SSN", typeof(string));
    
            var loanAppIdParameter = loanAppId != null ?
                new ObjectParameter("LoanAppId", loanAppId) :
                new ObjectParameter("LoanAppId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallVisitorSearch", emailParameter, lastnameParameter, firstnameParameter, addressParameter, cityParameter, stateParameter, zipcodeParameter, sSNParameter, loanAppIdParameter);
        }
    
        public virtual int usp_WebCallWebEmergencyAlertTemplateDelete(Nullable<int> web_Call_Web_Emergency_Alert_Template_Key)
        {
            var web_Call_Web_Emergency_Alert_Template_KeyParameter = web_Call_Web_Emergency_Alert_Template_Key.HasValue ?
                new ObjectParameter("Web_Call_Web_Emergency_Alert_Template_Key", web_Call_Web_Emergency_Alert_Template_Key) :
                new ObjectParameter("Web_Call_Web_Emergency_Alert_Template_Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWebEmergencyAlertTemplateDelete", web_Call_Web_Emergency_Alert_Template_KeyParameter);
        }
    
        public virtual int usp_WebCallWebEmergencyAlertTemplateInsert(ObjectParameter web_Call_Web_Emergency_Alert_Template_Key, string scenario, string alert_Template_Text, string currentUserId)
        {
            var scenarioParameter = scenario != null ?
                new ObjectParameter("Scenario", scenario) :
                new ObjectParameter("Scenario", typeof(string));
    
            var alert_Template_TextParameter = alert_Template_Text != null ?
                new ObjectParameter("Alert_Template_Text", alert_Template_Text) :
                new ObjectParameter("Alert_Template_Text", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWebEmergencyAlertTemplateInsert", web_Call_Web_Emergency_Alert_Template_Key, scenarioParameter, alert_Template_TextParameter, currentUserIdParameter);
        }
    
        public virtual ObjectResult<usp_WebCallWebEmergencyAlertTemplatesLoad_Result> usp_WebCallWebEmergencyAlertTemplatesLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallWebEmergencyAlertTemplatesLoad_Result>("usp_WebCallWebEmergencyAlertTemplatesLoad");
        }
    
        public virtual int usp_WebCallWebEmergencyAlertTemplateUpdate(Nullable<int> web_Call_Web_Emergency_Alert_Template_Key, string scenario, string alert_Template_Text, string currentUserId)
        {
            var web_Call_Web_Emergency_Alert_Template_KeyParameter = web_Call_Web_Emergency_Alert_Template_Key.HasValue ?
                new ObjectParameter("Web_Call_Web_Emergency_Alert_Template_Key", web_Call_Web_Emergency_Alert_Template_Key) :
                new ObjectParameter("Web_Call_Web_Emergency_Alert_Template_Key", typeof(int));
    
            var scenarioParameter = scenario != null ?
                new ObjectParameter("Scenario", scenario) :
                new ObjectParameter("Scenario", typeof(string));
    
            var alert_Template_TextParameter = alert_Template_Text != null ?
                new ObjectParameter("Alert_Template_Text", alert_Template_Text) :
                new ObjectParameter("Alert_Template_Text", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWebEmergencyAlertTemplateUpdate", web_Call_Web_Emergency_Alert_Template_KeyParameter, scenarioParameter, alert_Template_TextParameter, currentUserIdParameter);
        }
    
        public virtual ObjectResult<usp_WebCallWebSessionQueueItemHistoryLoad_Result> usp_WebCallWebSessionQueueItemHistoryLoad(Nullable<long> webVisitKey)
        {
            var webVisitKeyParameter = webVisitKey.HasValue ?
                new ObjectParameter("webVisitKey", webVisitKey) :
                new ObjectParameter("webVisitKey", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallWebSessionQueueItemHistoryLoad_Result>("usp_WebCallWebSessionQueueItemHistoryLoad", webVisitKeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallWebSessionsLoad_Result> usp_WebCallWebSessionsLoad(Nullable<int> visitorId)
        {
            var visitorIdParameter = visitorId.HasValue ?
                new ObjectParameter("VisitorId", visitorId) :
                new ObjectParameter("VisitorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallWebSessionsLoad_Result>("usp_WebCallWebSessionsLoad", visitorIdParameter);
        }
    
        public virtual int usp_WebCallWorkItemAssignChatInfo(Nullable<int> iD, Nullable<System.Guid> cHATSESSIONID, string cHATCSRID, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cHATSESSIONIDParameter = cHATSESSIONID.HasValue ?
                new ObjectParameter("CHATSESSIONID", cHATSESSIONID) :
                new ObjectParameter("CHATSESSIONID", typeof(System.Guid));
    
            var cHATCSRIDParameter = cHATCSRID != null ?
                new ObjectParameter("CHATCSRID", cHATCSRID) :
                new ObjectParameter("CHATCSRID", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemAssignChatInfo", iDParameter, cHATSESSIONIDParameter, cHATCSRIDParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebCallWorkItemAssignUser(Nullable<int> iD, string uSERID, string uSERNAME, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemAssignUser", iDParameter, uSERIDParameter, uSERNAMEParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebCallWorkItemCancelCheckout(Nullable<int> iD, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemCancelCheckout", iDParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebCallWorkItemCategoryHistoryInsert(Nullable<int> wEB_CALL_QUEUE_KEY, Nullable<int> wEB_CALL_CATEGORY_KEY)
        {
            var wEB_CALL_QUEUE_KEYParameter = wEB_CALL_QUEUE_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_QUEUE_KEY", wEB_CALL_QUEUE_KEY) :
                new ObjectParameter("WEB_CALL_QUEUE_KEY", typeof(int));
    
            var wEB_CALL_CATEGORY_KEYParameter = wEB_CALL_CATEGORY_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_CATEGORY_KEY", wEB_CALL_CATEGORY_KEY) :
                new ObjectParameter("WEB_CALL_CATEGORY_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemCategoryHistoryInsert", wEB_CALL_QUEUE_KEYParameter, wEB_CALL_CATEGORY_KEYParameter);
        }
    
        public virtual int usp_WebCallWorkItemCategoryUpdate(Nullable<int> iD, Nullable<int> categoryId, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemCategoryUpdate", iDParameter, categoryIdParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebCallWorkItemCheckOutForEdit(Nullable<int> iD, string uSERID, string uSERNAME, Nullable<int> campaignId, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var campaignIdParameter = campaignId.HasValue ?
                new ObjectParameter("CampaignId", campaignId) :
                new ObjectParameter("CampaignId", typeof(int));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemCheckOutForEdit", iDParameter, uSERIDParameter, uSERNAMEParameter, campaignIdParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebCallWorkItemHistoryInsert(Nullable<int> wEB_CALL_QUEUE_KEY, Nullable<int> wEB_CALL_CATEGORY_KEY)
        {
            var wEB_CALL_QUEUE_KEYParameter = wEB_CALL_QUEUE_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_QUEUE_KEY", wEB_CALL_QUEUE_KEY) :
                new ObjectParameter("WEB_CALL_QUEUE_KEY", typeof(int));
    
            var wEB_CALL_CATEGORY_KEYParameter = wEB_CALL_CATEGORY_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_CATEGORY_KEY", wEB_CALL_CATEGORY_KEY) :
                new ObjectParameter("WEB_CALL_CATEGORY_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemHistoryInsert", wEB_CALL_QUEUE_KEYParameter, wEB_CALL_CATEGORY_KEYParameter);
        }
    
        public virtual int usp_WebCallWorkItemInsert(ObjectParameter iD, string eMAIL, string fIRSNAME, string lASTNAME, Nullable<int> cATEGORYID, string uSERNAME, string uSERID, string hOMEPHONE, string cELLPHONE, string wORKPHONE, Nullable<int> rEASONID, Nullable<int> aCTIONID, Nullable<int> rESULT1ID, Nullable<int> rESULT2ID, Nullable<int> rARRID, string nOTES, Nullable<System.DateTime> fOLLOWUPDATE, Nullable<bool> cOMPLETED, Nullable<bool> cHECKEDOUT, Nullable<System.Guid> cHATSESSIONID, string cHATCSRID, Nullable<int> customerId, Nullable<int> lOANAPPID, Nullable<int> vISITORID, Nullable<int> lOANID, Nullable<bool> sUPERVISORESCALLATION, Nullable<bool> iTSupportEscallation, Nullable<System.DateTime> oNLINEDATE, Nullable<System.DateTime> oFFLINEDATE, Nullable<int> status, string webSource, Nullable<short> location, string address, string city, string state, string zipcode, string leadId, string buyer, Nullable<decimal> soldAmount, string finalScore, string currentUserId, Nullable<int> workItemColor, Nullable<int> workItemType, Nullable<System.DateTime> modifiedDate, Nullable<int> risreptKey)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fIRSNAMEParameter = fIRSNAME != null ?
                new ObjectParameter("FIRSNAME", fIRSNAME) :
                new ObjectParameter("FIRSNAME", typeof(string));
    
            var lASTNAMEParameter = lASTNAME != null ?
                new ObjectParameter("LASTNAME", lASTNAME) :
                new ObjectParameter("LASTNAME", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var hOMEPHONEParameter = hOMEPHONE != null ?
                new ObjectParameter("HOMEPHONE", hOMEPHONE) :
                new ObjectParameter("HOMEPHONE", typeof(string));
    
            var cELLPHONEParameter = cELLPHONE != null ?
                new ObjectParameter("CELLPHONE", cELLPHONE) :
                new ObjectParameter("CELLPHONE", typeof(string));
    
            var wORKPHONEParameter = wORKPHONE != null ?
                new ObjectParameter("WORKPHONE", wORKPHONE) :
                new ObjectParameter("WORKPHONE", typeof(string));
    
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var aCTIONIDParameter = aCTIONID.HasValue ?
                new ObjectParameter("ACTIONID", aCTIONID) :
                new ObjectParameter("ACTIONID", typeof(int));
    
            var rESULT1IDParameter = rESULT1ID.HasValue ?
                new ObjectParameter("RESULT1ID", rESULT1ID) :
                new ObjectParameter("RESULT1ID", typeof(int));
    
            var rESULT2IDParameter = rESULT2ID.HasValue ?
                new ObjectParameter("RESULT2ID", rESULT2ID) :
                new ObjectParameter("RESULT2ID", typeof(int));
    
            var rARRIDParameter = rARRID.HasValue ?
                new ObjectParameter("RARRID", rARRID) :
                new ObjectParameter("RARRID", typeof(int));
    
            var nOTESParameter = nOTES != null ?
                new ObjectParameter("NOTES", nOTES) :
                new ObjectParameter("NOTES", typeof(string));
    
            var fOLLOWUPDATEParameter = fOLLOWUPDATE.HasValue ?
                new ObjectParameter("FOLLOWUPDATE", fOLLOWUPDATE) :
                new ObjectParameter("FOLLOWUPDATE", typeof(System.DateTime));
    
            var cOMPLETEDParameter = cOMPLETED.HasValue ?
                new ObjectParameter("COMPLETED", cOMPLETED) :
                new ObjectParameter("COMPLETED", typeof(bool));
    
            var cHECKEDOUTParameter = cHECKEDOUT.HasValue ?
                new ObjectParameter("CHECKEDOUT", cHECKEDOUT) :
                new ObjectParameter("CHECKEDOUT", typeof(bool));
    
            var cHATSESSIONIDParameter = cHATSESSIONID.HasValue ?
                new ObjectParameter("CHATSESSIONID", cHATSESSIONID) :
                new ObjectParameter("CHATSESSIONID", typeof(System.Guid));
    
            var cHATCSRIDParameter = cHATCSRID != null ?
                new ObjectParameter("CHATCSRID", cHATCSRID) :
                new ObjectParameter("CHATCSRID", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var lOANAPPIDParameter = lOANAPPID.HasValue ?
                new ObjectParameter("LOANAPPID", lOANAPPID) :
                new ObjectParameter("LOANAPPID", typeof(int));
    
            var vISITORIDParameter = vISITORID.HasValue ?
                new ObjectParameter("VISITORID", vISITORID) :
                new ObjectParameter("VISITORID", typeof(int));
    
            var lOANIDParameter = lOANID.HasValue ?
                new ObjectParameter("LOANID", lOANID) :
                new ObjectParameter("LOANID", typeof(int));
    
            var sUPERVISORESCALLATIONParameter = sUPERVISORESCALLATION.HasValue ?
                new ObjectParameter("SUPERVISORESCALLATION", sUPERVISORESCALLATION) :
                new ObjectParameter("SUPERVISORESCALLATION", typeof(bool));
    
            var iTSupportEscallationParameter = iTSupportEscallation.HasValue ?
                new ObjectParameter("ITSupportEscallation", iTSupportEscallation) :
                new ObjectParameter("ITSupportEscallation", typeof(bool));
    
            var oNLINEDATEParameter = oNLINEDATE.HasValue ?
                new ObjectParameter("ONLINEDATE", oNLINEDATE) :
                new ObjectParameter("ONLINEDATE", typeof(System.DateTime));
    
            var oFFLINEDATEParameter = oFFLINEDATE.HasValue ?
                new ObjectParameter("OFFLINEDATE", oFFLINEDATE) :
                new ObjectParameter("OFFLINEDATE", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var webSourceParameter = webSource != null ?
                new ObjectParameter("WebSource", webSource) :
                new ObjectParameter("WebSource", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(string));
    
            var leadIdParameter = leadId != null ?
                new ObjectParameter("LeadId", leadId) :
                new ObjectParameter("LeadId", typeof(string));
    
            var buyerParameter = buyer != null ?
                new ObjectParameter("Buyer", buyer) :
                new ObjectParameter("Buyer", typeof(string));
    
            var soldAmountParameter = soldAmount.HasValue ?
                new ObjectParameter("SoldAmount", soldAmount) :
                new ObjectParameter("SoldAmount", typeof(decimal));
    
            var finalScoreParameter = finalScore != null ?
                new ObjectParameter("FinalScore", finalScore) :
                new ObjectParameter("FinalScore", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var workItemColorParameter = workItemColor.HasValue ?
                new ObjectParameter("WorkItemColor", workItemColor) :
                new ObjectParameter("WorkItemColor", typeof(int));
    
            var workItemTypeParameter = workItemType.HasValue ?
                new ObjectParameter("WorkItemType", workItemType) :
                new ObjectParameter("WorkItemType", typeof(int));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var risreptKeyParameter = risreptKey.HasValue ?
                new ObjectParameter("RisreptKey", risreptKey) :
                new ObjectParameter("RisreptKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemInsert", iD, eMAILParameter, fIRSNAMEParameter, lASTNAMEParameter, cATEGORYIDParameter, uSERNAMEParameter, uSERIDParameter, hOMEPHONEParameter, cELLPHONEParameter, wORKPHONEParameter, rEASONIDParameter, aCTIONIDParameter, rESULT1IDParameter, rESULT2IDParameter, rARRIDParameter, nOTESParameter, fOLLOWUPDATEParameter, cOMPLETEDParameter, cHECKEDOUTParameter, cHATSESSIONIDParameter, cHATCSRIDParameter, customerIdParameter, lOANAPPIDParameter, vISITORIDParameter, lOANIDParameter, sUPERVISORESCALLATIONParameter, iTSupportEscallationParameter, oNLINEDATEParameter, oFFLINEDATEParameter, statusParameter, webSourceParameter, locationParameter, addressParameter, cityParameter, stateParameter, zipcodeParameter, leadIdParameter, buyerParameter, soldAmountParameter, finalScoreParameter, currentUserIdParameter, workItemColorParameter, workItemTypeParameter, modifiedDateParameter, risreptKeyParameter);
        }
    
        public virtual ObjectResult<usp_WebCallWorkItemLoadByCampaign_Result> usp_WebCallWorkItemLoadByCampaign(Nullable<int> cAMPAIGNID, string uSERID, string uSERNAME)
        {
            var cAMPAIGNIDParameter = cAMPAIGNID.HasValue ?
                new ObjectParameter("CAMPAIGNID", cAMPAIGNID) :
                new ObjectParameter("CAMPAIGNID", typeof(int));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallWorkItemLoadByCampaign_Result>("usp_WebCallWorkItemLoadByCampaign", cAMPAIGNIDParameter, uSERIDParameter, uSERNAMEParameter);
        }
    
        public virtual ObjectResult<usp_WebCallWorkItemLoadById_Result> usp_WebCallWorkItemLoadById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallWorkItemLoadById_Result>("usp_WebCallWorkItemLoadById", iDParameter);
        }
    
        public virtual ObjectResult<usp_WebCallWorkItemLoadByIdWithUser_Result> usp_WebCallWorkItemLoadByIdWithUser(Nullable<int> iD, string uSERID, string uSERNAME)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebCallWorkItemLoadByIdWithUser_Result>("usp_WebCallWorkItemLoadByIdWithUser", iDParameter, uSERIDParameter, uSERNAMEParameter);
        }
    
        public virtual int usp_WebCallWorkItemRemoveAbandoned(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemRemoveAbandoned", iDParameter);
        }
    
        public virtual int usp_WebCallWorkItemSetColor(Nullable<int> iD, Nullable<int> workItemColor, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var workItemColorParameter = workItemColor.HasValue ?
                new ObjectParameter("WorkItemColor", workItemColor) :
                new ObjectParameter("WorkItemColor", typeof(int));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemSetColor", iDParameter, workItemColorParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebCallWorkItemSetComplete(Nullable<int> iD, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemSetComplete", iDParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebCallWorkItemsPendingSignatureSearch(string email, string lastname, string firstname, string phoneNumber, string address, string city, string state, string zipcode, string sSN, string loanAppId, string rARRId_SentDocsForSignature, string rARRId_WillSignDocsOnline)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(string));
    
            var sSNParameter = sSN != null ?
                new ObjectParameter("SSN", sSN) :
                new ObjectParameter("SSN", typeof(string));
    
            var loanAppIdParameter = loanAppId != null ?
                new ObjectParameter("LoanAppId", loanAppId) :
                new ObjectParameter("LoanAppId", typeof(string));
    
            var rARRId_SentDocsForSignatureParameter = rARRId_SentDocsForSignature != null ?
                new ObjectParameter("RARRId_SentDocsForSignature", rARRId_SentDocsForSignature) :
                new ObjectParameter("RARRId_SentDocsForSignature", typeof(string));
    
            var rARRId_WillSignDocsOnlineParameter = rARRId_WillSignDocsOnline != null ?
                new ObjectParameter("RARRId_WillSignDocsOnline", rARRId_WillSignDocsOnline) :
                new ObjectParameter("RARRId_WillSignDocsOnline", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemsPendingSignatureSearch", emailParameter, lastnameParameter, firstnameParameter, phoneNumberParameter, addressParameter, cityParameter, stateParameter, zipcodeParameter, sSNParameter, loanAppIdParameter, rARRId_SentDocsForSignatureParameter, rARRId_WillSignDocsOnlineParameter);
        }
    
        public virtual int usp_WebCallWorkItemUnAssignUser(Nullable<int> iD, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemUnAssignUser", iDParameter, currentUserIdParameter);
        }
    
        public virtual int usp_WebCallWorkItemUpdate(Nullable<int> iD, string eMAIL, string fIRSNAME, string lASTNAME, Nullable<int> cATEGORYID, string uSERNAME, string uSERID, string hOMEPHONE, string cELLPHONE, string wORKPHONE, Nullable<int> rEASONID, Nullable<int> aCTIONID, Nullable<int> rESULT1ID, Nullable<int> rESULT2ID, Nullable<int> rARRID, string nOTES, Nullable<System.DateTime> fOLLOWUPDATE, Nullable<bool> cOMPLETED, Nullable<bool> cHECKEDOUT, Nullable<System.Guid> cHATSESSIONID, string cHATCSRID, Nullable<int> customerId, Nullable<int> lOANAPPID, Nullable<int> vISITORID, Nullable<int> lOANID, Nullable<bool> sUPERVISORESCALLATION, Nullable<bool> iTSupportEscallation, Nullable<System.DateTime> oNLINEDATE, Nullable<System.DateTime> oFFLINEDATE, Nullable<int> status, string webSource, Nullable<short> location, string address, string city, string state, string zipcode, string leadId, string buyer, Nullable<decimal> soldAmount, string finalScore, string currentUserId, Nullable<int> workItemColor, Nullable<int> workItemType, Nullable<System.DateTime> modifiedDate, Nullable<System.DateTime> originalModifiedDate, Nullable<int> risReptKey, ObjectParameter rowsChanged)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fIRSNAMEParameter = fIRSNAME != null ?
                new ObjectParameter("FIRSNAME", fIRSNAME) :
                new ObjectParameter("FIRSNAME", typeof(string));
    
            var lASTNAMEParameter = lASTNAME != null ?
                new ObjectParameter("LASTNAME", lASTNAME) :
                new ObjectParameter("LASTNAME", typeof(string));
    
            var cATEGORYIDParameter = cATEGORYID.HasValue ?
                new ObjectParameter("CATEGORYID", cATEGORYID) :
                new ObjectParameter("CATEGORYID", typeof(int));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var uSERIDParameter = uSERID != null ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(string));
    
            var hOMEPHONEParameter = hOMEPHONE != null ?
                new ObjectParameter("HOMEPHONE", hOMEPHONE) :
                new ObjectParameter("HOMEPHONE", typeof(string));
    
            var cELLPHONEParameter = cELLPHONE != null ?
                new ObjectParameter("CELLPHONE", cELLPHONE) :
                new ObjectParameter("CELLPHONE", typeof(string));
    
            var wORKPHONEParameter = wORKPHONE != null ?
                new ObjectParameter("WORKPHONE", wORKPHONE) :
                new ObjectParameter("WORKPHONE", typeof(string));
    
            var rEASONIDParameter = rEASONID.HasValue ?
                new ObjectParameter("REASONID", rEASONID) :
                new ObjectParameter("REASONID", typeof(int));
    
            var aCTIONIDParameter = aCTIONID.HasValue ?
                new ObjectParameter("ACTIONID", aCTIONID) :
                new ObjectParameter("ACTIONID", typeof(int));
    
            var rESULT1IDParameter = rESULT1ID.HasValue ?
                new ObjectParameter("RESULT1ID", rESULT1ID) :
                new ObjectParameter("RESULT1ID", typeof(int));
    
            var rESULT2IDParameter = rESULT2ID.HasValue ?
                new ObjectParameter("RESULT2ID", rESULT2ID) :
                new ObjectParameter("RESULT2ID", typeof(int));
    
            var rARRIDParameter = rARRID.HasValue ?
                new ObjectParameter("RARRID", rARRID) :
                new ObjectParameter("RARRID", typeof(int));
    
            var nOTESParameter = nOTES != null ?
                new ObjectParameter("NOTES", nOTES) :
                new ObjectParameter("NOTES", typeof(string));
    
            var fOLLOWUPDATEParameter = fOLLOWUPDATE.HasValue ?
                new ObjectParameter("FOLLOWUPDATE", fOLLOWUPDATE) :
                new ObjectParameter("FOLLOWUPDATE", typeof(System.DateTime));
    
            var cOMPLETEDParameter = cOMPLETED.HasValue ?
                new ObjectParameter("COMPLETED", cOMPLETED) :
                new ObjectParameter("COMPLETED", typeof(bool));
    
            var cHECKEDOUTParameter = cHECKEDOUT.HasValue ?
                new ObjectParameter("CHECKEDOUT", cHECKEDOUT) :
                new ObjectParameter("CHECKEDOUT", typeof(bool));
    
            var cHATSESSIONIDParameter = cHATSESSIONID.HasValue ?
                new ObjectParameter("CHATSESSIONID", cHATSESSIONID) :
                new ObjectParameter("CHATSESSIONID", typeof(System.Guid));
    
            var cHATCSRIDParameter = cHATCSRID != null ?
                new ObjectParameter("CHATCSRID", cHATCSRID) :
                new ObjectParameter("CHATCSRID", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var lOANAPPIDParameter = lOANAPPID.HasValue ?
                new ObjectParameter("LOANAPPID", lOANAPPID) :
                new ObjectParameter("LOANAPPID", typeof(int));
    
            var vISITORIDParameter = vISITORID.HasValue ?
                new ObjectParameter("VISITORID", vISITORID) :
                new ObjectParameter("VISITORID", typeof(int));
    
            var lOANIDParameter = lOANID.HasValue ?
                new ObjectParameter("LOANID", lOANID) :
                new ObjectParameter("LOANID", typeof(int));
    
            var sUPERVISORESCALLATIONParameter = sUPERVISORESCALLATION.HasValue ?
                new ObjectParameter("SUPERVISORESCALLATION", sUPERVISORESCALLATION) :
                new ObjectParameter("SUPERVISORESCALLATION", typeof(bool));
    
            var iTSupportEscallationParameter = iTSupportEscallation.HasValue ?
                new ObjectParameter("ITSupportEscallation", iTSupportEscallation) :
                new ObjectParameter("ITSupportEscallation", typeof(bool));
    
            var oNLINEDATEParameter = oNLINEDATE.HasValue ?
                new ObjectParameter("ONLINEDATE", oNLINEDATE) :
                new ObjectParameter("ONLINEDATE", typeof(System.DateTime));
    
            var oFFLINEDATEParameter = oFFLINEDATE.HasValue ?
                new ObjectParameter("OFFLINEDATE", oFFLINEDATE) :
                new ObjectParameter("OFFLINEDATE", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var webSourceParameter = webSource != null ?
                new ObjectParameter("WebSource", webSource) :
                new ObjectParameter("WebSource", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(short));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(string));
    
            var leadIdParameter = leadId != null ?
                new ObjectParameter("LeadId", leadId) :
                new ObjectParameter("LeadId", typeof(string));
    
            var buyerParameter = buyer != null ?
                new ObjectParameter("Buyer", buyer) :
                new ObjectParameter("Buyer", typeof(string));
    
            var soldAmountParameter = soldAmount.HasValue ?
                new ObjectParameter("SoldAmount", soldAmount) :
                new ObjectParameter("SoldAmount", typeof(decimal));
    
            var finalScoreParameter = finalScore != null ?
                new ObjectParameter("FinalScore", finalScore) :
                new ObjectParameter("FinalScore", typeof(string));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            var workItemColorParameter = workItemColor.HasValue ?
                new ObjectParameter("WorkItemColor", workItemColor) :
                new ObjectParameter("WorkItemColor", typeof(int));
    
            var workItemTypeParameter = workItemType.HasValue ?
                new ObjectParameter("WorkItemType", workItemType) :
                new ObjectParameter("WorkItemType", typeof(int));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var originalModifiedDateParameter = originalModifiedDate.HasValue ?
                new ObjectParameter("OriginalModifiedDate", originalModifiedDate) :
                new ObjectParameter("OriginalModifiedDate", typeof(System.DateTime));
    
            var risReptKeyParameter = risReptKey.HasValue ?
                new ObjectParameter("RisReptKey", risReptKey) :
                new ObjectParameter("RisReptKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemUpdate", iDParameter, eMAILParameter, fIRSNAMEParameter, lASTNAMEParameter, cATEGORYIDParameter, uSERNAMEParameter, uSERIDParameter, hOMEPHONEParameter, cELLPHONEParameter, wORKPHONEParameter, rEASONIDParameter, aCTIONIDParameter, rESULT1IDParameter, rESULT2IDParameter, rARRIDParameter, nOTESParameter, fOLLOWUPDATEParameter, cOMPLETEDParameter, cHECKEDOUTParameter, cHATSESSIONIDParameter, cHATCSRIDParameter, customerIdParameter, lOANAPPIDParameter, vISITORIDParameter, lOANIDParameter, sUPERVISORESCALLATIONParameter, iTSupportEscallationParameter, oNLINEDATEParameter, oFFLINEDATEParameter, statusParameter, webSourceParameter, locationParameter, addressParameter, cityParameter, stateParameter, zipcodeParameter, leadIdParameter, buyerParameter, soldAmountParameter, finalScoreParameter, currentUserIdParameter, workItemColorParameter, workItemTypeParameter, modifiedDateParameter, originalModifiedDateParameter, risReptKeyParameter, rowsChanged);
        }
    
        public virtual int usp_WebCallWorkItemUpdateAssignedCampaign(Nullable<int> iD, Nullable<int> cAMPAIGNID, string currentUserId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cAMPAIGNIDParameter = cAMPAIGNID.HasValue ?
                new ObjectParameter("CAMPAIGNID", cAMPAIGNID) :
                new ObjectParameter("CAMPAIGNID", typeof(int));
    
            var currentUserIdParameter = currentUserId != null ?
                new ObjectParameter("CurrentUserId", currentUserId) :
                new ObjectParameter("CurrentUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebCallWorkItemUpdateAssignedCampaign", iDParameter, cAMPAIGNIDParameter, currentUserIdParameter);
        }
    
        public virtual ObjectResult<string> usp_WebDenialRules(Nullable<int> lOAN_APPLICATION_KEY)
        {
            var lOAN_APPLICATION_KEYParameter = lOAN_APPLICATION_KEY.HasValue ?
                new ObjectParameter("LOAN_APPLICATION_KEY", lOAN_APPLICATION_KEY) :
                new ObjectParameter("LOAN_APPLICATION_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_WebDenialRules", lOAN_APPLICATION_KEYParameter);
        }
    
        public virtual int usp_WebDialerCallResultInsertUpdate(Nullable<int> wEB_DIALER_CALL_RESULT_KEY, Nullable<bool> aBANDONED, Nullable<System.TimeSpan> aFTER_CALL_WORK_TIME, string aGENT, string aNI, Nullable<int> aNI_AREA_CODE, Nullable<int> aNI_COUNTRY_CODE, string aNI_STATE, Nullable<int> aPPLICATION_KEY, Nullable<System.TimeSpan> bILL_TIME, Nullable<int> cALLS, Nullable<int> cALLS_COMPLETED_IN_IVR, Nullable<int> cALLS_TIMED_OUT_IN_IVR, Nullable<int> cALL_ID, Nullable<System.TimeSpan> cALL_TIME, string cALL_TYPE, string cAMPAIGN, Nullable<int> cONFERENCES, Nullable<System.TimeSpan> cONFERENCE_TIME, Nullable<System.TimeSpan> cONSULT_TIME, Nullable<bool> cONTACTED, Nullable<int> cONTACT_ID, Nullable<decimal> cOST, Nullable<int> cUSTOMER_KEY, string dESTINATION_AGENT, string dISPOSITION, string dNIS, Nullable<int> dNIS_AREA_CODE, Nullable<int> dNIS_COUNTRY_CODE, string dNIS_STATE, Nullable<int> eXTENSION, Nullable<System.TimeSpan> hANDLE_TIME, Nullable<int> hOLDS, Nullable<System.TimeSpan> hOLD_TIME, Nullable<bool> iS_COMPLETE, string iVR_PATH, Nullable<System.TimeSpan> iVR_TIME, string lIST_NAME, Nullable<int> lOAN_KEY, Nullable<int> lOCATION, Nullable<System.TimeSpan> mANUAL_DIALING_TIME, Nullable<int> mARKETING_SENT_KEY, string mRKT_CAMPAIGN, string nOTES, Nullable<int> pARKS, Nullable<System.TimeSpan> pARK_TIME, Nullable<System.TimeSpan> pREVIEW_TIME, Nullable<int> pRIORITY, Nullable<int> qUEUE_TYPE, Nullable<System.TimeSpan> qUEUE_WAIT_TIME, Nullable<decimal> rATE, string rESULT, Nullable<System.TimeSpan> rING_TIME, Nullable<int> rISREPT_KEY, Nullable<int> sERVICE_LEVEL, string sESSION_ID, string sKILL, Nullable<System.TimeSpan> sPEED_OF_ANSWER, Nullable<System.TimeSpan> tALK_TIME, Nullable<System.TimeSpan> tALK_TIME_LESS_HOLD_AND_PARK, string tELLER, Nullable<System.TimeSpan> tHIRD_PARTY_TALK_TIME, Nullable<System.DateTime> tIME_STAMP, Nullable<int> tRANSFERS, Nullable<int> vISITOR_KEY, Nullable<int> wEB_CALL_QUEUE_KEY, Nullable<int> wEB_DIALER_RESULT_TYPE_KEY)
        {
            var wEB_DIALER_CALL_RESULT_KEYParameter = wEB_DIALER_CALL_RESULT_KEY.HasValue ?
                new ObjectParameter("WEB_DIALER_CALL_RESULT_KEY", wEB_DIALER_CALL_RESULT_KEY) :
                new ObjectParameter("WEB_DIALER_CALL_RESULT_KEY", typeof(int));
    
            var aBANDONEDParameter = aBANDONED.HasValue ?
                new ObjectParameter("ABANDONED", aBANDONED) :
                new ObjectParameter("ABANDONED", typeof(bool));
    
            var aFTER_CALL_WORK_TIMEParameter = aFTER_CALL_WORK_TIME.HasValue ?
                new ObjectParameter("AFTER_CALL_WORK_TIME", aFTER_CALL_WORK_TIME) :
                new ObjectParameter("AFTER_CALL_WORK_TIME", typeof(System.TimeSpan));
    
            var aGENTParameter = aGENT != null ?
                new ObjectParameter("AGENT", aGENT) :
                new ObjectParameter("AGENT", typeof(string));
    
            var aNIParameter = aNI != null ?
                new ObjectParameter("ANI", aNI) :
                new ObjectParameter("ANI", typeof(string));
    
            var aNI_AREA_CODEParameter = aNI_AREA_CODE.HasValue ?
                new ObjectParameter("ANI_AREA_CODE", aNI_AREA_CODE) :
                new ObjectParameter("ANI_AREA_CODE", typeof(int));
    
            var aNI_COUNTRY_CODEParameter = aNI_COUNTRY_CODE.HasValue ?
                new ObjectParameter("ANI_COUNTRY_CODE", aNI_COUNTRY_CODE) :
                new ObjectParameter("ANI_COUNTRY_CODE", typeof(int));
    
            var aNI_STATEParameter = aNI_STATE != null ?
                new ObjectParameter("ANI_STATE", aNI_STATE) :
                new ObjectParameter("ANI_STATE", typeof(string));
    
            var aPPLICATION_KEYParameter = aPPLICATION_KEY.HasValue ?
                new ObjectParameter("APPLICATION_KEY", aPPLICATION_KEY) :
                new ObjectParameter("APPLICATION_KEY", typeof(int));
    
            var bILL_TIMEParameter = bILL_TIME.HasValue ?
                new ObjectParameter("BILL_TIME", bILL_TIME) :
                new ObjectParameter("BILL_TIME", typeof(System.TimeSpan));
    
            var cALLSParameter = cALLS.HasValue ?
                new ObjectParameter("CALLS", cALLS) :
                new ObjectParameter("CALLS", typeof(int));
    
            var cALLS_COMPLETED_IN_IVRParameter = cALLS_COMPLETED_IN_IVR.HasValue ?
                new ObjectParameter("CALLS_COMPLETED_IN_IVR", cALLS_COMPLETED_IN_IVR) :
                new ObjectParameter("CALLS_COMPLETED_IN_IVR", typeof(int));
    
            var cALLS_TIMED_OUT_IN_IVRParameter = cALLS_TIMED_OUT_IN_IVR.HasValue ?
                new ObjectParameter("CALLS_TIMED_OUT_IN_IVR", cALLS_TIMED_OUT_IN_IVR) :
                new ObjectParameter("CALLS_TIMED_OUT_IN_IVR", typeof(int));
    
            var cALL_IDParameter = cALL_ID.HasValue ?
                new ObjectParameter("CALL_ID", cALL_ID) :
                new ObjectParameter("CALL_ID", typeof(int));
    
            var cALL_TIMEParameter = cALL_TIME.HasValue ?
                new ObjectParameter("CALL_TIME", cALL_TIME) :
                new ObjectParameter("CALL_TIME", typeof(System.TimeSpan));
    
            var cALL_TYPEParameter = cALL_TYPE != null ?
                new ObjectParameter("CALL_TYPE", cALL_TYPE) :
                new ObjectParameter("CALL_TYPE", typeof(string));
    
            var cAMPAIGNParameter = cAMPAIGN != null ?
                new ObjectParameter("CAMPAIGN", cAMPAIGN) :
                new ObjectParameter("CAMPAIGN", typeof(string));
    
            var cONFERENCESParameter = cONFERENCES.HasValue ?
                new ObjectParameter("CONFERENCES", cONFERENCES) :
                new ObjectParameter("CONFERENCES", typeof(int));
    
            var cONFERENCE_TIMEParameter = cONFERENCE_TIME.HasValue ?
                new ObjectParameter("CONFERENCE_TIME", cONFERENCE_TIME) :
                new ObjectParameter("CONFERENCE_TIME", typeof(System.TimeSpan));
    
            var cONSULT_TIMEParameter = cONSULT_TIME.HasValue ?
                new ObjectParameter("CONSULT_TIME", cONSULT_TIME) :
                new ObjectParameter("CONSULT_TIME", typeof(System.TimeSpan));
    
            var cONTACTEDParameter = cONTACTED.HasValue ?
                new ObjectParameter("CONTACTED", cONTACTED) :
                new ObjectParameter("CONTACTED", typeof(bool));
    
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var cOSTParameter = cOST.HasValue ?
                new ObjectParameter("COST", cOST) :
                new ObjectParameter("COST", typeof(decimal));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var dESTINATION_AGENTParameter = dESTINATION_AGENT != null ?
                new ObjectParameter("DESTINATION_AGENT", dESTINATION_AGENT) :
                new ObjectParameter("DESTINATION_AGENT", typeof(string));
    
            var dISPOSITIONParameter = dISPOSITION != null ?
                new ObjectParameter("DISPOSITION", dISPOSITION) :
                new ObjectParameter("DISPOSITION", typeof(string));
    
            var dNISParameter = dNIS != null ?
                new ObjectParameter("DNIS", dNIS) :
                new ObjectParameter("DNIS", typeof(string));
    
            var dNIS_AREA_CODEParameter = dNIS_AREA_CODE.HasValue ?
                new ObjectParameter("DNIS_AREA_CODE", dNIS_AREA_CODE) :
                new ObjectParameter("DNIS_AREA_CODE", typeof(int));
    
            var dNIS_COUNTRY_CODEParameter = dNIS_COUNTRY_CODE.HasValue ?
                new ObjectParameter("DNIS_COUNTRY_CODE", dNIS_COUNTRY_CODE) :
                new ObjectParameter("DNIS_COUNTRY_CODE", typeof(int));
    
            var dNIS_STATEParameter = dNIS_STATE != null ?
                new ObjectParameter("DNIS_STATE", dNIS_STATE) :
                new ObjectParameter("DNIS_STATE", typeof(string));
    
            var eXTENSIONParameter = eXTENSION.HasValue ?
                new ObjectParameter("EXTENSION", eXTENSION) :
                new ObjectParameter("EXTENSION", typeof(int));
    
            var hANDLE_TIMEParameter = hANDLE_TIME.HasValue ?
                new ObjectParameter("HANDLE_TIME", hANDLE_TIME) :
                new ObjectParameter("HANDLE_TIME", typeof(System.TimeSpan));
    
            var hOLDSParameter = hOLDS.HasValue ?
                new ObjectParameter("HOLDS", hOLDS) :
                new ObjectParameter("HOLDS", typeof(int));
    
            var hOLD_TIMEParameter = hOLD_TIME.HasValue ?
                new ObjectParameter("HOLD_TIME", hOLD_TIME) :
                new ObjectParameter("HOLD_TIME", typeof(System.TimeSpan));
    
            var iS_COMPLETEParameter = iS_COMPLETE.HasValue ?
                new ObjectParameter("IS_COMPLETE", iS_COMPLETE) :
                new ObjectParameter("IS_COMPLETE", typeof(bool));
    
            var iVR_PATHParameter = iVR_PATH != null ?
                new ObjectParameter("IVR_PATH", iVR_PATH) :
                new ObjectParameter("IVR_PATH", typeof(string));
    
            var iVR_TIMEParameter = iVR_TIME.HasValue ?
                new ObjectParameter("IVR_TIME", iVR_TIME) :
                new ObjectParameter("IVR_TIME", typeof(System.TimeSpan));
    
            var lIST_NAMEParameter = lIST_NAME != null ?
                new ObjectParameter("LIST_NAME", lIST_NAME) :
                new ObjectParameter("LIST_NAME", typeof(string));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(int));
    
            var mANUAL_DIALING_TIMEParameter = mANUAL_DIALING_TIME.HasValue ?
                new ObjectParameter("MANUAL_DIALING_TIME", mANUAL_DIALING_TIME) :
                new ObjectParameter("MANUAL_DIALING_TIME", typeof(System.TimeSpan));
    
            var mARKETING_SENT_KEYParameter = mARKETING_SENT_KEY.HasValue ?
                new ObjectParameter("MARKETING_SENT_KEY", mARKETING_SENT_KEY) :
                new ObjectParameter("MARKETING_SENT_KEY", typeof(int));
    
            var mRKT_CAMPAIGNParameter = mRKT_CAMPAIGN != null ?
                new ObjectParameter("MRKT_CAMPAIGN", mRKT_CAMPAIGN) :
                new ObjectParameter("MRKT_CAMPAIGN", typeof(string));
    
            var nOTESParameter = nOTES != null ?
                new ObjectParameter("NOTES", nOTES) :
                new ObjectParameter("NOTES", typeof(string));
    
            var pARKSParameter = pARKS.HasValue ?
                new ObjectParameter("PARKS", pARKS) :
                new ObjectParameter("PARKS", typeof(int));
    
            var pARK_TIMEParameter = pARK_TIME.HasValue ?
                new ObjectParameter("PARK_TIME", pARK_TIME) :
                new ObjectParameter("PARK_TIME", typeof(System.TimeSpan));
    
            var pREVIEW_TIMEParameter = pREVIEW_TIME.HasValue ?
                new ObjectParameter("PREVIEW_TIME", pREVIEW_TIME) :
                new ObjectParameter("PREVIEW_TIME", typeof(System.TimeSpan));
    
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(int));
    
            var qUEUE_TYPEParameter = qUEUE_TYPE.HasValue ?
                new ObjectParameter("QUEUE_TYPE", qUEUE_TYPE) :
                new ObjectParameter("QUEUE_TYPE", typeof(int));
    
            var qUEUE_WAIT_TIMEParameter = qUEUE_WAIT_TIME.HasValue ?
                new ObjectParameter("QUEUE_WAIT_TIME", qUEUE_WAIT_TIME) :
                new ObjectParameter("QUEUE_WAIT_TIME", typeof(System.TimeSpan));
    
            var rATEParameter = rATE.HasValue ?
                new ObjectParameter("RATE", rATE) :
                new ObjectParameter("RATE", typeof(decimal));
    
            var rESULTParameter = rESULT != null ?
                new ObjectParameter("RESULT", rESULT) :
                new ObjectParameter("RESULT", typeof(string));
    
            var rING_TIMEParameter = rING_TIME.HasValue ?
                new ObjectParameter("RING_TIME", rING_TIME) :
                new ObjectParameter("RING_TIME", typeof(System.TimeSpan));
    
            var rISREPT_KEYParameter = rISREPT_KEY.HasValue ?
                new ObjectParameter("RISREPT_KEY", rISREPT_KEY) :
                new ObjectParameter("RISREPT_KEY", typeof(int));
    
            var sERVICE_LEVELParameter = sERVICE_LEVEL.HasValue ?
                new ObjectParameter("SERVICE_LEVEL", sERVICE_LEVEL) :
                new ObjectParameter("SERVICE_LEVEL", typeof(int));
    
            var sESSION_IDParameter = sESSION_ID != null ?
                new ObjectParameter("SESSION_ID", sESSION_ID) :
                new ObjectParameter("SESSION_ID", typeof(string));
    
            var sKILLParameter = sKILL != null ?
                new ObjectParameter("SKILL", sKILL) :
                new ObjectParameter("SKILL", typeof(string));
    
            var sPEED_OF_ANSWERParameter = sPEED_OF_ANSWER.HasValue ?
                new ObjectParameter("SPEED_OF_ANSWER", sPEED_OF_ANSWER) :
                new ObjectParameter("SPEED_OF_ANSWER", typeof(System.TimeSpan));
    
            var tALK_TIMEParameter = tALK_TIME.HasValue ?
                new ObjectParameter("TALK_TIME", tALK_TIME) :
                new ObjectParameter("TALK_TIME", typeof(System.TimeSpan));
    
            var tALK_TIME_LESS_HOLD_AND_PARKParameter = tALK_TIME_LESS_HOLD_AND_PARK.HasValue ?
                new ObjectParameter("TALK_TIME_LESS_HOLD_AND_PARK", tALK_TIME_LESS_HOLD_AND_PARK) :
                new ObjectParameter("TALK_TIME_LESS_HOLD_AND_PARK", typeof(System.TimeSpan));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var tHIRD_PARTY_TALK_TIMEParameter = tHIRD_PARTY_TALK_TIME.HasValue ?
                new ObjectParameter("THIRD_PARTY_TALK_TIME", tHIRD_PARTY_TALK_TIME) :
                new ObjectParameter("THIRD_PARTY_TALK_TIME", typeof(System.TimeSpan));
    
            var tIME_STAMPParameter = tIME_STAMP.HasValue ?
                new ObjectParameter("TIME_STAMP", tIME_STAMP) :
                new ObjectParameter("TIME_STAMP", typeof(System.DateTime));
    
            var tRANSFERSParameter = tRANSFERS.HasValue ?
                new ObjectParameter("TRANSFERS", tRANSFERS) :
                new ObjectParameter("TRANSFERS", typeof(int));
    
            var vISITOR_KEYParameter = vISITOR_KEY.HasValue ?
                new ObjectParameter("VISITOR_KEY", vISITOR_KEY) :
                new ObjectParameter("VISITOR_KEY", typeof(int));
    
            var wEB_CALL_QUEUE_KEYParameter = wEB_CALL_QUEUE_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_QUEUE_KEY", wEB_CALL_QUEUE_KEY) :
                new ObjectParameter("WEB_CALL_QUEUE_KEY", typeof(int));
    
            var wEB_DIALER_RESULT_TYPE_KEYParameter = wEB_DIALER_RESULT_TYPE_KEY.HasValue ?
                new ObjectParameter("WEB_DIALER_RESULT_TYPE_KEY", wEB_DIALER_RESULT_TYPE_KEY) :
                new ObjectParameter("WEB_DIALER_RESULT_TYPE_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebDialerCallResultInsertUpdate", wEB_DIALER_CALL_RESULT_KEYParameter, aBANDONEDParameter, aFTER_CALL_WORK_TIMEParameter, aGENTParameter, aNIParameter, aNI_AREA_CODEParameter, aNI_COUNTRY_CODEParameter, aNI_STATEParameter, aPPLICATION_KEYParameter, bILL_TIMEParameter, cALLSParameter, cALLS_COMPLETED_IN_IVRParameter, cALLS_TIMED_OUT_IN_IVRParameter, cALL_IDParameter, cALL_TIMEParameter, cALL_TYPEParameter, cAMPAIGNParameter, cONFERENCESParameter, cONFERENCE_TIMEParameter, cONSULT_TIMEParameter, cONTACTEDParameter, cONTACT_IDParameter, cOSTParameter, cUSTOMER_KEYParameter, dESTINATION_AGENTParameter, dISPOSITIONParameter, dNISParameter, dNIS_AREA_CODEParameter, dNIS_COUNTRY_CODEParameter, dNIS_STATEParameter, eXTENSIONParameter, hANDLE_TIMEParameter, hOLDSParameter, hOLD_TIMEParameter, iS_COMPLETEParameter, iVR_PATHParameter, iVR_TIMEParameter, lIST_NAMEParameter, lOAN_KEYParameter, lOCATIONParameter, mANUAL_DIALING_TIMEParameter, mARKETING_SENT_KEYParameter, mRKT_CAMPAIGNParameter, nOTESParameter, pARKSParameter, pARK_TIMEParameter, pREVIEW_TIMEParameter, pRIORITYParameter, qUEUE_TYPEParameter, qUEUE_WAIT_TIMEParameter, rATEParameter, rESULTParameter, rING_TIMEParameter, rISREPT_KEYParameter, sERVICE_LEVELParameter, sESSION_IDParameter, sKILLParameter, sPEED_OF_ANSWERParameter, tALK_TIMEParameter, tALK_TIME_LESS_HOLD_AND_PARKParameter, tELLERParameter, tHIRD_PARTY_TALK_TIMEParameter, tIME_STAMPParameter, tRANSFERSParameter, vISITOR_KEYParameter, wEB_CALL_QUEUE_KEYParameter, wEB_DIALER_RESULT_TYPE_KEYParameter);
        }
    
        public virtual ObjectResult<usp_WebDialerCallResultMerge_Result> usp_WebDialerCallResultMerge(Nullable<int> wEB_DIALER_CALL_RESULT_KEY, Nullable<bool> aBANDONED, Nullable<System.TimeSpan> aFTER_CALL_WORK_TIME, string aGENT, string aNI, Nullable<int> aNI_AREA_CODE, Nullable<int> aNI_COUNTRY_CODE, string aNI_STATE, Nullable<int> aPPLICATION_KEY, Nullable<System.TimeSpan> bILL_TIME, Nullable<int> cALLS, Nullable<int> cALLS_COMPLETED_IN_IVR, Nullable<int> cALLS_TIMED_OUT_IN_IVR, Nullable<int> cALL_ID, Nullable<System.TimeSpan> cALL_TIME, string cALL_TYPE, string cAMPAIGN, Nullable<int> cONFERENCES, Nullable<System.TimeSpan> cONFERENCE_TIME, Nullable<System.TimeSpan> cONSULT_TIME, Nullable<bool> cONTACTED, Nullable<int> cONTACT_ID, Nullable<decimal> cOST, Nullable<int> cUSTOMER_KEY, string dESTINATION_AGENT, string dISPOSITION, string dNIS, Nullable<int> dNIS_AREA_CODE, Nullable<int> dNIS_COUNTRY_CODE, string dNIS_STATE, Nullable<int> eXTENSION, Nullable<System.TimeSpan> hANDLE_TIME, Nullable<int> hOLDS, Nullable<System.TimeSpan> hOLD_TIME, Nullable<bool> iS_COMPLETE, string iVR_PATH, Nullable<System.TimeSpan> iVR_TIME, string lIST_NAME, Nullable<int> lOAN_KEY, Nullable<int> lOCATION, Nullable<System.TimeSpan> mANUAL_DIALING_TIME, Nullable<int> mARKETING_SENT_KEY, string mRKT_CAMPAIGN, string nOTES, Nullable<int> pARKS, Nullable<System.TimeSpan> pARK_TIME, Nullable<System.TimeSpan> pREVIEW_TIME, Nullable<int> pRIORITY, Nullable<int> qUEUE_TYPE, Nullable<System.TimeSpan> qUEUE_WAIT_TIME, Nullable<decimal> rATE, string rESULT, Nullable<System.TimeSpan> rING_TIME, Nullable<int> rISREPT_KEY, Nullable<int> sERVICE_LEVEL, string sESSION_ID, string sKILL, Nullable<System.TimeSpan> sPEED_OF_ANSWER, Nullable<System.TimeSpan> tALK_TIME, Nullable<System.TimeSpan> tALK_TIME_LESS_HOLD_AND_PARK, string tELLER, Nullable<System.TimeSpan> tHIRD_PARTY_TALK_TIME, Nullable<System.DateTime> tIME_STAMP, Nullable<int> tRANSFERS, Nullable<int> vISITOR_KEY, Nullable<int> wEB_CALL_QUEUE_KEY, Nullable<int> wEB_DIALER_RESULT_TYPE_KEY, Nullable<System.DateTime> dATE_ENTERED, Nullable<System.DateTime> lAST_MODIFIED, string nOBLE_HASH)
        {
            var wEB_DIALER_CALL_RESULT_KEYParameter = wEB_DIALER_CALL_RESULT_KEY.HasValue ?
                new ObjectParameter("WEB_DIALER_CALL_RESULT_KEY", wEB_DIALER_CALL_RESULT_KEY) :
                new ObjectParameter("WEB_DIALER_CALL_RESULT_KEY", typeof(int));
    
            var aBANDONEDParameter = aBANDONED.HasValue ?
                new ObjectParameter("ABANDONED", aBANDONED) :
                new ObjectParameter("ABANDONED", typeof(bool));
    
            var aFTER_CALL_WORK_TIMEParameter = aFTER_CALL_WORK_TIME.HasValue ?
                new ObjectParameter("AFTER_CALL_WORK_TIME", aFTER_CALL_WORK_TIME) :
                new ObjectParameter("AFTER_CALL_WORK_TIME", typeof(System.TimeSpan));
    
            var aGENTParameter = aGENT != null ?
                new ObjectParameter("AGENT", aGENT) :
                new ObjectParameter("AGENT", typeof(string));
    
            var aNIParameter = aNI != null ?
                new ObjectParameter("ANI", aNI) :
                new ObjectParameter("ANI", typeof(string));
    
            var aNI_AREA_CODEParameter = aNI_AREA_CODE.HasValue ?
                new ObjectParameter("ANI_AREA_CODE", aNI_AREA_CODE) :
                new ObjectParameter("ANI_AREA_CODE", typeof(int));
    
            var aNI_COUNTRY_CODEParameter = aNI_COUNTRY_CODE.HasValue ?
                new ObjectParameter("ANI_COUNTRY_CODE", aNI_COUNTRY_CODE) :
                new ObjectParameter("ANI_COUNTRY_CODE", typeof(int));
    
            var aNI_STATEParameter = aNI_STATE != null ?
                new ObjectParameter("ANI_STATE", aNI_STATE) :
                new ObjectParameter("ANI_STATE", typeof(string));
    
            var aPPLICATION_KEYParameter = aPPLICATION_KEY.HasValue ?
                new ObjectParameter("APPLICATION_KEY", aPPLICATION_KEY) :
                new ObjectParameter("APPLICATION_KEY", typeof(int));
    
            var bILL_TIMEParameter = bILL_TIME.HasValue ?
                new ObjectParameter("BILL_TIME", bILL_TIME) :
                new ObjectParameter("BILL_TIME", typeof(System.TimeSpan));
    
            var cALLSParameter = cALLS.HasValue ?
                new ObjectParameter("CALLS", cALLS) :
                new ObjectParameter("CALLS", typeof(int));
    
            var cALLS_COMPLETED_IN_IVRParameter = cALLS_COMPLETED_IN_IVR.HasValue ?
                new ObjectParameter("CALLS_COMPLETED_IN_IVR", cALLS_COMPLETED_IN_IVR) :
                new ObjectParameter("CALLS_COMPLETED_IN_IVR", typeof(int));
    
            var cALLS_TIMED_OUT_IN_IVRParameter = cALLS_TIMED_OUT_IN_IVR.HasValue ?
                new ObjectParameter("CALLS_TIMED_OUT_IN_IVR", cALLS_TIMED_OUT_IN_IVR) :
                new ObjectParameter("CALLS_TIMED_OUT_IN_IVR", typeof(int));
    
            var cALL_IDParameter = cALL_ID.HasValue ?
                new ObjectParameter("CALL_ID", cALL_ID) :
                new ObjectParameter("CALL_ID", typeof(int));
    
            var cALL_TIMEParameter = cALL_TIME.HasValue ?
                new ObjectParameter("CALL_TIME", cALL_TIME) :
                new ObjectParameter("CALL_TIME", typeof(System.TimeSpan));
    
            var cALL_TYPEParameter = cALL_TYPE != null ?
                new ObjectParameter("CALL_TYPE", cALL_TYPE) :
                new ObjectParameter("CALL_TYPE", typeof(string));
    
            var cAMPAIGNParameter = cAMPAIGN != null ?
                new ObjectParameter("CAMPAIGN", cAMPAIGN) :
                new ObjectParameter("CAMPAIGN", typeof(string));
    
            var cONFERENCESParameter = cONFERENCES.HasValue ?
                new ObjectParameter("CONFERENCES", cONFERENCES) :
                new ObjectParameter("CONFERENCES", typeof(int));
    
            var cONFERENCE_TIMEParameter = cONFERENCE_TIME.HasValue ?
                new ObjectParameter("CONFERENCE_TIME", cONFERENCE_TIME) :
                new ObjectParameter("CONFERENCE_TIME", typeof(System.TimeSpan));
    
            var cONSULT_TIMEParameter = cONSULT_TIME.HasValue ?
                new ObjectParameter("CONSULT_TIME", cONSULT_TIME) :
                new ObjectParameter("CONSULT_TIME", typeof(System.TimeSpan));
    
            var cONTACTEDParameter = cONTACTED.HasValue ?
                new ObjectParameter("CONTACTED", cONTACTED) :
                new ObjectParameter("CONTACTED", typeof(bool));
    
            var cONTACT_IDParameter = cONTACT_ID.HasValue ?
                new ObjectParameter("CONTACT_ID", cONTACT_ID) :
                new ObjectParameter("CONTACT_ID", typeof(int));
    
            var cOSTParameter = cOST.HasValue ?
                new ObjectParameter("COST", cOST) :
                new ObjectParameter("COST", typeof(decimal));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var dESTINATION_AGENTParameter = dESTINATION_AGENT != null ?
                new ObjectParameter("DESTINATION_AGENT", dESTINATION_AGENT) :
                new ObjectParameter("DESTINATION_AGENT", typeof(string));
    
            var dISPOSITIONParameter = dISPOSITION != null ?
                new ObjectParameter("DISPOSITION", dISPOSITION) :
                new ObjectParameter("DISPOSITION", typeof(string));
    
            var dNISParameter = dNIS != null ?
                new ObjectParameter("DNIS", dNIS) :
                new ObjectParameter("DNIS", typeof(string));
    
            var dNIS_AREA_CODEParameter = dNIS_AREA_CODE.HasValue ?
                new ObjectParameter("DNIS_AREA_CODE", dNIS_AREA_CODE) :
                new ObjectParameter("DNIS_AREA_CODE", typeof(int));
    
            var dNIS_COUNTRY_CODEParameter = dNIS_COUNTRY_CODE.HasValue ?
                new ObjectParameter("DNIS_COUNTRY_CODE", dNIS_COUNTRY_CODE) :
                new ObjectParameter("DNIS_COUNTRY_CODE", typeof(int));
    
            var dNIS_STATEParameter = dNIS_STATE != null ?
                new ObjectParameter("DNIS_STATE", dNIS_STATE) :
                new ObjectParameter("DNIS_STATE", typeof(string));
    
            var eXTENSIONParameter = eXTENSION.HasValue ?
                new ObjectParameter("EXTENSION", eXTENSION) :
                new ObjectParameter("EXTENSION", typeof(int));
    
            var hANDLE_TIMEParameter = hANDLE_TIME.HasValue ?
                new ObjectParameter("HANDLE_TIME", hANDLE_TIME) :
                new ObjectParameter("HANDLE_TIME", typeof(System.TimeSpan));
    
            var hOLDSParameter = hOLDS.HasValue ?
                new ObjectParameter("HOLDS", hOLDS) :
                new ObjectParameter("HOLDS", typeof(int));
    
            var hOLD_TIMEParameter = hOLD_TIME.HasValue ?
                new ObjectParameter("HOLD_TIME", hOLD_TIME) :
                new ObjectParameter("HOLD_TIME", typeof(System.TimeSpan));
    
            var iS_COMPLETEParameter = iS_COMPLETE.HasValue ?
                new ObjectParameter("IS_COMPLETE", iS_COMPLETE) :
                new ObjectParameter("IS_COMPLETE", typeof(bool));
    
            var iVR_PATHParameter = iVR_PATH != null ?
                new ObjectParameter("IVR_PATH", iVR_PATH) :
                new ObjectParameter("IVR_PATH", typeof(string));
    
            var iVR_TIMEParameter = iVR_TIME.HasValue ?
                new ObjectParameter("IVR_TIME", iVR_TIME) :
                new ObjectParameter("IVR_TIME", typeof(System.TimeSpan));
    
            var lIST_NAMEParameter = lIST_NAME != null ?
                new ObjectParameter("LIST_NAME", lIST_NAME) :
                new ObjectParameter("LIST_NAME", typeof(string));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var lOCATIONParameter = lOCATION.HasValue ?
                new ObjectParameter("LOCATION", lOCATION) :
                new ObjectParameter("LOCATION", typeof(int));
    
            var mANUAL_DIALING_TIMEParameter = mANUAL_DIALING_TIME.HasValue ?
                new ObjectParameter("MANUAL_DIALING_TIME", mANUAL_DIALING_TIME) :
                new ObjectParameter("MANUAL_DIALING_TIME", typeof(System.TimeSpan));
    
            var mARKETING_SENT_KEYParameter = mARKETING_SENT_KEY.HasValue ?
                new ObjectParameter("MARKETING_SENT_KEY", mARKETING_SENT_KEY) :
                new ObjectParameter("MARKETING_SENT_KEY", typeof(int));
    
            var mRKT_CAMPAIGNParameter = mRKT_CAMPAIGN != null ?
                new ObjectParameter("MRKT_CAMPAIGN", mRKT_CAMPAIGN) :
                new ObjectParameter("MRKT_CAMPAIGN", typeof(string));
    
            var nOTESParameter = nOTES != null ?
                new ObjectParameter("NOTES", nOTES) :
                new ObjectParameter("NOTES", typeof(string));
    
            var pARKSParameter = pARKS.HasValue ?
                new ObjectParameter("PARKS", pARKS) :
                new ObjectParameter("PARKS", typeof(int));
    
            var pARK_TIMEParameter = pARK_TIME.HasValue ?
                new ObjectParameter("PARK_TIME", pARK_TIME) :
                new ObjectParameter("PARK_TIME", typeof(System.TimeSpan));
    
            var pREVIEW_TIMEParameter = pREVIEW_TIME.HasValue ?
                new ObjectParameter("PREVIEW_TIME", pREVIEW_TIME) :
                new ObjectParameter("PREVIEW_TIME", typeof(System.TimeSpan));
    
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(int));
    
            var qUEUE_TYPEParameter = qUEUE_TYPE.HasValue ?
                new ObjectParameter("QUEUE_TYPE", qUEUE_TYPE) :
                new ObjectParameter("QUEUE_TYPE", typeof(int));
    
            var qUEUE_WAIT_TIMEParameter = qUEUE_WAIT_TIME.HasValue ?
                new ObjectParameter("QUEUE_WAIT_TIME", qUEUE_WAIT_TIME) :
                new ObjectParameter("QUEUE_WAIT_TIME", typeof(System.TimeSpan));
    
            var rATEParameter = rATE.HasValue ?
                new ObjectParameter("RATE", rATE) :
                new ObjectParameter("RATE", typeof(decimal));
    
            var rESULTParameter = rESULT != null ?
                new ObjectParameter("RESULT", rESULT) :
                new ObjectParameter("RESULT", typeof(string));
    
            var rING_TIMEParameter = rING_TIME.HasValue ?
                new ObjectParameter("RING_TIME", rING_TIME) :
                new ObjectParameter("RING_TIME", typeof(System.TimeSpan));
    
            var rISREPT_KEYParameter = rISREPT_KEY.HasValue ?
                new ObjectParameter("RISREPT_KEY", rISREPT_KEY) :
                new ObjectParameter("RISREPT_KEY", typeof(int));
    
            var sERVICE_LEVELParameter = sERVICE_LEVEL.HasValue ?
                new ObjectParameter("SERVICE_LEVEL", sERVICE_LEVEL) :
                new ObjectParameter("SERVICE_LEVEL", typeof(int));
    
            var sESSION_IDParameter = sESSION_ID != null ?
                new ObjectParameter("SESSION_ID", sESSION_ID) :
                new ObjectParameter("SESSION_ID", typeof(string));
    
            var sKILLParameter = sKILL != null ?
                new ObjectParameter("SKILL", sKILL) :
                new ObjectParameter("SKILL", typeof(string));
    
            var sPEED_OF_ANSWERParameter = sPEED_OF_ANSWER.HasValue ?
                new ObjectParameter("SPEED_OF_ANSWER", sPEED_OF_ANSWER) :
                new ObjectParameter("SPEED_OF_ANSWER", typeof(System.TimeSpan));
    
            var tALK_TIMEParameter = tALK_TIME.HasValue ?
                new ObjectParameter("TALK_TIME", tALK_TIME) :
                new ObjectParameter("TALK_TIME", typeof(System.TimeSpan));
    
            var tALK_TIME_LESS_HOLD_AND_PARKParameter = tALK_TIME_LESS_HOLD_AND_PARK.HasValue ?
                new ObjectParameter("TALK_TIME_LESS_HOLD_AND_PARK", tALK_TIME_LESS_HOLD_AND_PARK) :
                new ObjectParameter("TALK_TIME_LESS_HOLD_AND_PARK", typeof(System.TimeSpan));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var tHIRD_PARTY_TALK_TIMEParameter = tHIRD_PARTY_TALK_TIME.HasValue ?
                new ObjectParameter("THIRD_PARTY_TALK_TIME", tHIRD_PARTY_TALK_TIME) :
                new ObjectParameter("THIRD_PARTY_TALK_TIME", typeof(System.TimeSpan));
    
            var tIME_STAMPParameter = tIME_STAMP.HasValue ?
                new ObjectParameter("TIME_STAMP", tIME_STAMP) :
                new ObjectParameter("TIME_STAMP", typeof(System.DateTime));
    
            var tRANSFERSParameter = tRANSFERS.HasValue ?
                new ObjectParameter("TRANSFERS", tRANSFERS) :
                new ObjectParameter("TRANSFERS", typeof(int));
    
            var vISITOR_KEYParameter = vISITOR_KEY.HasValue ?
                new ObjectParameter("VISITOR_KEY", vISITOR_KEY) :
                new ObjectParameter("VISITOR_KEY", typeof(int));
    
            var wEB_CALL_QUEUE_KEYParameter = wEB_CALL_QUEUE_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_QUEUE_KEY", wEB_CALL_QUEUE_KEY) :
                new ObjectParameter("WEB_CALL_QUEUE_KEY", typeof(int));
    
            var wEB_DIALER_RESULT_TYPE_KEYParameter = wEB_DIALER_RESULT_TYPE_KEY.HasValue ?
                new ObjectParameter("WEB_DIALER_RESULT_TYPE_KEY", wEB_DIALER_RESULT_TYPE_KEY) :
                new ObjectParameter("WEB_DIALER_RESULT_TYPE_KEY", typeof(int));
    
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            var lAST_MODIFIEDParameter = lAST_MODIFIED.HasValue ?
                new ObjectParameter("LAST_MODIFIED", lAST_MODIFIED) :
                new ObjectParameter("LAST_MODIFIED", typeof(System.DateTime));
    
            var nOBLE_HASHParameter = nOBLE_HASH != null ?
                new ObjectParameter("NOBLE_HASH", nOBLE_HASH) :
                new ObjectParameter("NOBLE_HASH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebDialerCallResultMerge_Result>("usp_WebDialerCallResultMerge", wEB_DIALER_CALL_RESULT_KEYParameter, aBANDONEDParameter, aFTER_CALL_WORK_TIMEParameter, aGENTParameter, aNIParameter, aNI_AREA_CODEParameter, aNI_COUNTRY_CODEParameter, aNI_STATEParameter, aPPLICATION_KEYParameter, bILL_TIMEParameter, cALLSParameter, cALLS_COMPLETED_IN_IVRParameter, cALLS_TIMED_OUT_IN_IVRParameter, cALL_IDParameter, cALL_TIMEParameter, cALL_TYPEParameter, cAMPAIGNParameter, cONFERENCESParameter, cONFERENCE_TIMEParameter, cONSULT_TIMEParameter, cONTACTEDParameter, cONTACT_IDParameter, cOSTParameter, cUSTOMER_KEYParameter, dESTINATION_AGENTParameter, dISPOSITIONParameter, dNISParameter, dNIS_AREA_CODEParameter, dNIS_COUNTRY_CODEParameter, dNIS_STATEParameter, eXTENSIONParameter, hANDLE_TIMEParameter, hOLDSParameter, hOLD_TIMEParameter, iS_COMPLETEParameter, iVR_PATHParameter, iVR_TIMEParameter, lIST_NAMEParameter, lOAN_KEYParameter, lOCATIONParameter, mANUAL_DIALING_TIMEParameter, mARKETING_SENT_KEYParameter, mRKT_CAMPAIGNParameter, nOTESParameter, pARKSParameter, pARK_TIMEParameter, pREVIEW_TIMEParameter, pRIORITYParameter, qUEUE_TYPEParameter, qUEUE_WAIT_TIMEParameter, rATEParameter, rESULTParameter, rING_TIMEParameter, rISREPT_KEYParameter, sERVICE_LEVELParameter, sESSION_IDParameter, sKILLParameter, sPEED_OF_ANSWERParameter, tALK_TIMEParameter, tALK_TIME_LESS_HOLD_AND_PARKParameter, tELLERParameter, tHIRD_PARTY_TALK_TIMEParameter, tIME_STAMPParameter, tRANSFERSParameter, vISITOR_KEYParameter, wEB_CALL_QUEUE_KEYParameter, wEB_DIALER_RESULT_TYPE_KEYParameter, dATE_ENTEREDParameter, lAST_MODIFIEDParameter, nOBLE_HASHParameter);
        }
    
        public virtual int usp_WebDialerCollectionItemResetMaxRI()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebDialerCollectionItemResetMaxRI");
        }
    
        public virtual int usp_WebDialerCollectionItemUpdateFollowup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebDialerCollectionItemUpdateFollowup");
        }
    
        public virtual int usp_WebDialerCollectionItemUpdateFromDialerKeys()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebDialerCollectionItemUpdateFromDialerKeys");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_WebDialerHostQualify(Nullable<int> visitorKey, Nullable<int> queueKey, Nullable<int> campaignID)
        {
            var visitorKeyParameter = visitorKey.HasValue ?
                new ObjectParameter("VisitorKey", visitorKey) :
                new ObjectParameter("VisitorKey", typeof(int));
    
            var queueKeyParameter = queueKey.HasValue ?
                new ObjectParameter("QueueKey", queueKey) :
                new ObjectParameter("QueueKey", typeof(int));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_WebDialerHostQualify", visitorKeyParameter, queueKeyParameter, campaignIDParameter);
        }
    
        public virtual int usp_WebDialerHostRequest(Nullable<int> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebDialerHostRequest", campaignIDParameter);
        }
    
        public virtual int usp_WebDialerInsertCuroCollectionAction(Nullable<int> workItemKey, string five9Disposition, string phoneNo)
        {
            var workItemKeyParameter = workItemKey.HasValue ?
                new ObjectParameter("WorkItemKey", workItemKey) :
                new ObjectParameter("WorkItemKey", typeof(int));
    
            var five9DispositionParameter = five9Disposition != null ?
                new ObjectParameter("Five9Disposition", five9Disposition) :
                new ObjectParameter("Five9Disposition", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebDialerInsertCuroCollectionAction", workItemKeyParameter, five9DispositionParameter, phoneNoParameter);
        }
    
        public virtual ObjectResult<usp_WebDialerPhoneLineLoad_Result> usp_WebDialerPhoneLineLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebDialerPhoneLineLoad_Result>("usp_WebDialerPhoneLineLoad");
        }
    
        public virtual int usp_WebDialerPhoneLineUpdate(Nullable<int> web_Dialer_Phone_Line_Key, string description, Nullable<int> line_No, Nullable<int> color_RGB, Nullable<bool> enabled, string phone)
        {
            var web_Dialer_Phone_Line_KeyParameter = web_Dialer_Phone_Line_Key.HasValue ?
                new ObjectParameter("Web_Dialer_Phone_Line_Key", web_Dialer_Phone_Line_Key) :
                new ObjectParameter("Web_Dialer_Phone_Line_Key", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var line_NoParameter = line_No.HasValue ?
                new ObjectParameter("Line_No", line_No) :
                new ObjectParameter("Line_No", typeof(int));
    
            var color_RGBParameter = color_RGB.HasValue ?
                new ObjectParameter("Color_RGB", color_RGB) :
                new ObjectParameter("Color_RGB", typeof(int));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebDialerPhoneLineUpdate", web_Dialer_Phone_Line_KeyParameter, descriptionParameter, line_NoParameter, color_RGBParameter, enabledParameter, phoneParameter);
        }
    
        public virtual ObjectResult<usp_WebDialerRecordingLoad_Result> usp_WebDialerRecordingLoad(Nullable<int> wEB_CALL_RECORDING_ARCHIVE_KEY, Nullable<int> wEB_ARCHIVE_KEY, string tELLER, Nullable<int> wORK_ITEM_ID, Nullable<int> cUSTOMER_KEY, Nullable<int> lOAN_KEY, Nullable<System.DateTime> bEGIN_DATE, Nullable<System.DateTime> eND_DATE)
        {
            var wEB_CALL_RECORDING_ARCHIVE_KEYParameter = wEB_CALL_RECORDING_ARCHIVE_KEY.HasValue ?
                new ObjectParameter("WEB_CALL_RECORDING_ARCHIVE_KEY", wEB_CALL_RECORDING_ARCHIVE_KEY) :
                new ObjectParameter("WEB_CALL_RECORDING_ARCHIVE_KEY", typeof(int));
    
            var wEB_ARCHIVE_KEYParameter = wEB_ARCHIVE_KEY.HasValue ?
                new ObjectParameter("WEB_ARCHIVE_KEY", wEB_ARCHIVE_KEY) :
                new ObjectParameter("WEB_ARCHIVE_KEY", typeof(int));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var wORK_ITEM_IDParameter = wORK_ITEM_ID.HasValue ?
                new ObjectParameter("WORK_ITEM_ID", wORK_ITEM_ID) :
                new ObjectParameter("WORK_ITEM_ID", typeof(int));
    
            var cUSTOMER_KEYParameter = cUSTOMER_KEY.HasValue ?
                new ObjectParameter("CUSTOMER_KEY", cUSTOMER_KEY) :
                new ObjectParameter("CUSTOMER_KEY", typeof(int));
    
            var lOAN_KEYParameter = lOAN_KEY.HasValue ?
                new ObjectParameter("LOAN_KEY", lOAN_KEY) :
                new ObjectParameter("LOAN_KEY", typeof(int));
    
            var bEGIN_DATEParameter = bEGIN_DATE.HasValue ?
                new ObjectParameter("BEGIN_DATE", bEGIN_DATE) :
                new ObjectParameter("BEGIN_DATE", typeof(System.DateTime));
    
            var eND_DATEParameter = eND_DATE.HasValue ?
                new ObjectParameter("END_DATE", eND_DATE) :
                new ObjectParameter("END_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebDialerRecordingLoad_Result>("usp_WebDialerRecordingLoad", wEB_CALL_RECORDING_ARCHIVE_KEYParameter, wEB_ARCHIVE_KEYParameter, tELLERParameter, wORK_ITEM_IDParameter, cUSTOMER_KEYParameter, lOAN_KEYParameter, bEGIN_DATEParameter, eND_DATEParameter);
        }
    
        public virtual int usp_WebDialerResultInsertUpdate(Nullable<int> webDialerResultKey, string result, string listName, string phoneType, Nullable<int> visitorKey, string teller, Nullable<int> webCallQueueKey, string incomingDID, Nullable<System.DateTime> aUDIO_DROPPED_DATE, Nullable<System.DateTime> cALL_ENDED_DATE, Nullable<int> webDialerResultTypeKey, string aNI, Nullable<int> aNI_COUNTRY_CODE, Nullable<System.TimeSpan> bILL_TIME, string cALL_TYPE, Nullable<int> cALLS, string cAMPAIGN, string cATEGORY, string cOMMENTS, Nullable<bool> cONTACT, Nullable<decimal> cOST, Nullable<System.DateTime> cALL_DATE, string dESTINATION_AGENT, string dISPOSITION, string dNIS, Nullable<int> dNIS_COUNTRY_CODE, Nullable<bool> dROPPED, Nullable<System.TimeSpan> dURATION, Nullable<System.TimeSpan> hANDLE_TIME, Nullable<System.TimeSpan> hOLD_TIME, string iVR_FLOW, Nullable<System.TimeSpan> mANUAL_DIALING_TIME, Nullable<System.TimeSpan> pREVIEW_TIME, Nullable<int> pRIORITY, Nullable<System.TimeSpan> qUEUE_TIME, Nullable<decimal> rATE, Nullable<int> sERVICE_LEVEL, string sESSION_ID, string sKILL, Nullable<System.TimeSpan> sPEED_OF_ANSWER, Nullable<System.TimeSpan> tALK_TIME, Nullable<System.DateTime> wORK_ITEM_DATE, Nullable<System.TimeSpan> tHIRD_PARTY_TALK_TIME, Nullable<System.TimeSpan> wRAP_TIME, Nullable<bool> iS_COMPLETE, string aGENT, string aGENT_EMAIL, Nullable<int> aGENT_EXTENSION, string aGENT_NAME, Nullable<int> aNI_AREA_CODE, string cITY, string cOMPANY, string cOUNTRY, string dEST_AGENT_EMAIL, Nullable<int> dEST_AGENT_EXTENSION, string dEST_AGENT_NAME, Nullable<int> dNIS_AREA_CODE, string fIRST_NAME, string lAST_NAME, string nUMBER1, string nUMBER2, string nUMBER3, string cALLED_STATE, string sTREET, Nullable<System.TimeSpan> cALL_TIME, Nullable<System.DateTime> tIME_STAMP, string zIP, string mARKETING_SENT_KEY)
        {
            var webDialerResultKeyParameter = webDialerResultKey.HasValue ?
                new ObjectParameter("WebDialerResultKey", webDialerResultKey) :
                new ObjectParameter("WebDialerResultKey", typeof(int));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var listNameParameter = listName != null ?
                new ObjectParameter("ListName", listName) :
                new ObjectParameter("ListName", typeof(string));
    
            var phoneTypeParameter = phoneType != null ?
                new ObjectParameter("PhoneType", phoneType) :
                new ObjectParameter("PhoneType", typeof(string));
    
            var visitorKeyParameter = visitorKey.HasValue ?
                new ObjectParameter("VisitorKey", visitorKey) :
                new ObjectParameter("VisitorKey", typeof(int));
    
            var tellerParameter = teller != null ?
                new ObjectParameter("Teller", teller) :
                new ObjectParameter("Teller", typeof(string));
    
            var webCallQueueKeyParameter = webCallQueueKey.HasValue ?
                new ObjectParameter("WebCallQueueKey", webCallQueueKey) :
                new ObjectParameter("WebCallQueueKey", typeof(int));
    
            var incomingDIDParameter = incomingDID != null ?
                new ObjectParameter("IncomingDID", incomingDID) :
                new ObjectParameter("IncomingDID", typeof(string));
    
            var aUDIO_DROPPED_DATEParameter = aUDIO_DROPPED_DATE.HasValue ?
                new ObjectParameter("AUDIO_DROPPED_DATE", aUDIO_DROPPED_DATE) :
                new ObjectParameter("AUDIO_DROPPED_DATE", typeof(System.DateTime));
    
            var cALL_ENDED_DATEParameter = cALL_ENDED_DATE.HasValue ?
                new ObjectParameter("CALL_ENDED_DATE", cALL_ENDED_DATE) :
                new ObjectParameter("CALL_ENDED_DATE", typeof(System.DateTime));
    
            var webDialerResultTypeKeyParameter = webDialerResultTypeKey.HasValue ?
                new ObjectParameter("WebDialerResultTypeKey", webDialerResultTypeKey) :
                new ObjectParameter("WebDialerResultTypeKey", typeof(int));
    
            var aNIParameter = aNI != null ?
                new ObjectParameter("ANI", aNI) :
                new ObjectParameter("ANI", typeof(string));
    
            var aNI_COUNTRY_CODEParameter = aNI_COUNTRY_CODE.HasValue ?
                new ObjectParameter("ANI_COUNTRY_CODE", aNI_COUNTRY_CODE) :
                new ObjectParameter("ANI_COUNTRY_CODE", typeof(int));
    
            var bILL_TIMEParameter = bILL_TIME.HasValue ?
                new ObjectParameter("BILL_TIME", bILL_TIME) :
                new ObjectParameter("BILL_TIME", typeof(System.TimeSpan));
    
            var cALL_TYPEParameter = cALL_TYPE != null ?
                new ObjectParameter("CALL_TYPE", cALL_TYPE) :
                new ObjectParameter("CALL_TYPE", typeof(string));
    
            var cALLSParameter = cALLS.HasValue ?
                new ObjectParameter("CALLS", cALLS) :
                new ObjectParameter("CALLS", typeof(int));
    
            var cAMPAIGNParameter = cAMPAIGN != null ?
                new ObjectParameter("CAMPAIGN", cAMPAIGN) :
                new ObjectParameter("CAMPAIGN", typeof(string));
    
            var cATEGORYParameter = cATEGORY != null ?
                new ObjectParameter("CATEGORY", cATEGORY) :
                new ObjectParameter("CATEGORY", typeof(string));
    
            var cOMMENTSParameter = cOMMENTS != null ?
                new ObjectParameter("COMMENTS", cOMMENTS) :
                new ObjectParameter("COMMENTS", typeof(string));
    
            var cONTACTParameter = cONTACT.HasValue ?
                new ObjectParameter("CONTACT", cONTACT) :
                new ObjectParameter("CONTACT", typeof(bool));
    
            var cOSTParameter = cOST.HasValue ?
                new ObjectParameter("COST", cOST) :
                new ObjectParameter("COST", typeof(decimal));
    
            var cALL_DATEParameter = cALL_DATE.HasValue ?
                new ObjectParameter("CALL_DATE", cALL_DATE) :
                new ObjectParameter("CALL_DATE", typeof(System.DateTime));
    
            var dESTINATION_AGENTParameter = dESTINATION_AGENT != null ?
                new ObjectParameter("DESTINATION_AGENT", dESTINATION_AGENT) :
                new ObjectParameter("DESTINATION_AGENT", typeof(string));
    
            var dISPOSITIONParameter = dISPOSITION != null ?
                new ObjectParameter("DISPOSITION", dISPOSITION) :
                new ObjectParameter("DISPOSITION", typeof(string));
    
            var dNISParameter = dNIS != null ?
                new ObjectParameter("DNIS", dNIS) :
                new ObjectParameter("DNIS", typeof(string));
    
            var dNIS_COUNTRY_CODEParameter = dNIS_COUNTRY_CODE.HasValue ?
                new ObjectParameter("DNIS_COUNTRY_CODE", dNIS_COUNTRY_CODE) :
                new ObjectParameter("DNIS_COUNTRY_CODE", typeof(int));
    
            var dROPPEDParameter = dROPPED.HasValue ?
                new ObjectParameter("DROPPED", dROPPED) :
                new ObjectParameter("DROPPED", typeof(bool));
    
            var dURATIONParameter = dURATION.HasValue ?
                new ObjectParameter("DURATION", dURATION) :
                new ObjectParameter("DURATION", typeof(System.TimeSpan));
    
            var hANDLE_TIMEParameter = hANDLE_TIME.HasValue ?
                new ObjectParameter("HANDLE_TIME", hANDLE_TIME) :
                new ObjectParameter("HANDLE_TIME", typeof(System.TimeSpan));
    
            var hOLD_TIMEParameter = hOLD_TIME.HasValue ?
                new ObjectParameter("HOLD_TIME", hOLD_TIME) :
                new ObjectParameter("HOLD_TIME", typeof(System.TimeSpan));
    
            var iVR_FLOWParameter = iVR_FLOW != null ?
                new ObjectParameter("IVR_FLOW", iVR_FLOW) :
                new ObjectParameter("IVR_FLOW", typeof(string));
    
            var mANUAL_DIALING_TIMEParameter = mANUAL_DIALING_TIME.HasValue ?
                new ObjectParameter("MANUAL_DIALING_TIME", mANUAL_DIALING_TIME) :
                new ObjectParameter("MANUAL_DIALING_TIME", typeof(System.TimeSpan));
    
            var pREVIEW_TIMEParameter = pREVIEW_TIME.HasValue ?
                new ObjectParameter("PREVIEW_TIME", pREVIEW_TIME) :
                new ObjectParameter("PREVIEW_TIME", typeof(System.TimeSpan));
    
            var pRIORITYParameter = pRIORITY.HasValue ?
                new ObjectParameter("PRIORITY", pRIORITY) :
                new ObjectParameter("PRIORITY", typeof(int));
    
            var qUEUE_TIMEParameter = qUEUE_TIME.HasValue ?
                new ObjectParameter("QUEUE_TIME", qUEUE_TIME) :
                new ObjectParameter("QUEUE_TIME", typeof(System.TimeSpan));
    
            var rATEParameter = rATE.HasValue ?
                new ObjectParameter("RATE", rATE) :
                new ObjectParameter("RATE", typeof(decimal));
    
            var sERVICE_LEVELParameter = sERVICE_LEVEL.HasValue ?
                new ObjectParameter("SERVICE_LEVEL", sERVICE_LEVEL) :
                new ObjectParameter("SERVICE_LEVEL", typeof(int));
    
            var sESSION_IDParameter = sESSION_ID != null ?
                new ObjectParameter("SESSION_ID", sESSION_ID) :
                new ObjectParameter("SESSION_ID", typeof(string));
    
            var sKILLParameter = sKILL != null ?
                new ObjectParameter("SKILL", sKILL) :
                new ObjectParameter("SKILL", typeof(string));
    
            var sPEED_OF_ANSWERParameter = sPEED_OF_ANSWER.HasValue ?
                new ObjectParameter("SPEED_OF_ANSWER", sPEED_OF_ANSWER) :
                new ObjectParameter("SPEED_OF_ANSWER", typeof(System.TimeSpan));
    
            var tALK_TIMEParameter = tALK_TIME.HasValue ?
                new ObjectParameter("TALK_TIME", tALK_TIME) :
                new ObjectParameter("TALK_TIME", typeof(System.TimeSpan));
    
            var wORK_ITEM_DATEParameter = wORK_ITEM_DATE.HasValue ?
                new ObjectParameter("WORK_ITEM_DATE", wORK_ITEM_DATE) :
                new ObjectParameter("WORK_ITEM_DATE", typeof(System.DateTime));
    
            var tHIRD_PARTY_TALK_TIMEParameter = tHIRD_PARTY_TALK_TIME.HasValue ?
                new ObjectParameter("THIRD_PARTY_TALK_TIME", tHIRD_PARTY_TALK_TIME) :
                new ObjectParameter("THIRD_PARTY_TALK_TIME", typeof(System.TimeSpan));
    
            var wRAP_TIMEParameter = wRAP_TIME.HasValue ?
                new ObjectParameter("WRAP_TIME", wRAP_TIME) :
                new ObjectParameter("WRAP_TIME", typeof(System.TimeSpan));
    
            var iS_COMPLETEParameter = iS_COMPLETE.HasValue ?
                new ObjectParameter("IS_COMPLETE", iS_COMPLETE) :
                new ObjectParameter("IS_COMPLETE", typeof(bool));
    
            var aGENTParameter = aGENT != null ?
                new ObjectParameter("AGENT", aGENT) :
                new ObjectParameter("AGENT", typeof(string));
    
            var aGENT_EMAILParameter = aGENT_EMAIL != null ?
                new ObjectParameter("AGENT_EMAIL", aGENT_EMAIL) :
                new ObjectParameter("AGENT_EMAIL", typeof(string));
    
            var aGENT_EXTENSIONParameter = aGENT_EXTENSION.HasValue ?
                new ObjectParameter("AGENT_EXTENSION", aGENT_EXTENSION) :
                new ObjectParameter("AGENT_EXTENSION", typeof(int));
    
            var aGENT_NAMEParameter = aGENT_NAME != null ?
                new ObjectParameter("AGENT_NAME", aGENT_NAME) :
                new ObjectParameter("AGENT_NAME", typeof(string));
    
            var aNI_AREA_CODEParameter = aNI_AREA_CODE.HasValue ?
                new ObjectParameter("ANI_AREA_CODE", aNI_AREA_CODE) :
                new ObjectParameter("ANI_AREA_CODE", typeof(int));
    
            var cITYParameter = cITY != null ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(string));
    
            var cOMPANYParameter = cOMPANY != null ?
                new ObjectParameter("COMPANY", cOMPANY) :
                new ObjectParameter("COMPANY", typeof(string));
    
            var cOUNTRYParameter = cOUNTRY != null ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(string));
    
            var dEST_AGENT_EMAILParameter = dEST_AGENT_EMAIL != null ?
                new ObjectParameter("DEST_AGENT_EMAIL", dEST_AGENT_EMAIL) :
                new ObjectParameter("DEST_AGENT_EMAIL", typeof(string));
    
            var dEST_AGENT_EXTENSIONParameter = dEST_AGENT_EXTENSION.HasValue ?
                new ObjectParameter("DEST_AGENT_EXTENSION", dEST_AGENT_EXTENSION) :
                new ObjectParameter("DEST_AGENT_EXTENSION", typeof(int));
    
            var dEST_AGENT_NAMEParameter = dEST_AGENT_NAME != null ?
                new ObjectParameter("DEST_AGENT_NAME", dEST_AGENT_NAME) :
                new ObjectParameter("DEST_AGENT_NAME", typeof(string));
    
            var dNIS_AREA_CODEParameter = dNIS_AREA_CODE.HasValue ?
                new ObjectParameter("DNIS_AREA_CODE", dNIS_AREA_CODE) :
                new ObjectParameter("DNIS_AREA_CODE", typeof(int));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var nUMBER1Parameter = nUMBER1 != null ?
                new ObjectParameter("NUMBER1", nUMBER1) :
                new ObjectParameter("NUMBER1", typeof(string));
    
            var nUMBER2Parameter = nUMBER2 != null ?
                new ObjectParameter("NUMBER2", nUMBER2) :
                new ObjectParameter("NUMBER2", typeof(string));
    
            var nUMBER3Parameter = nUMBER3 != null ?
                new ObjectParameter("NUMBER3", nUMBER3) :
                new ObjectParameter("NUMBER3", typeof(string));
    
            var cALLED_STATEParameter = cALLED_STATE != null ?
                new ObjectParameter("CALLED_STATE", cALLED_STATE) :
                new ObjectParameter("CALLED_STATE", typeof(string));
    
            var sTREETParameter = sTREET != null ?
                new ObjectParameter("STREET", sTREET) :
                new ObjectParameter("STREET", typeof(string));
    
            var cALL_TIMEParameter = cALL_TIME.HasValue ?
                new ObjectParameter("CALL_TIME", cALL_TIME) :
                new ObjectParameter("CALL_TIME", typeof(System.TimeSpan));
    
            var tIME_STAMPParameter = tIME_STAMP.HasValue ?
                new ObjectParameter("TIME_STAMP", tIME_STAMP) :
                new ObjectParameter("TIME_STAMP", typeof(System.DateTime));
    
            var zIPParameter = zIP != null ?
                new ObjectParameter("ZIP", zIP) :
                new ObjectParameter("ZIP", typeof(string));
    
            var mARKETING_SENT_KEYParameter = mARKETING_SENT_KEY != null ?
                new ObjectParameter("MARKETING_SENT_KEY", mARKETING_SENT_KEY) :
                new ObjectParameter("MARKETING_SENT_KEY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebDialerResultInsertUpdate", webDialerResultKeyParameter, resultParameter, listNameParameter, phoneTypeParameter, visitorKeyParameter, tellerParameter, webCallQueueKeyParameter, incomingDIDParameter, aUDIO_DROPPED_DATEParameter, cALL_ENDED_DATEParameter, webDialerResultTypeKeyParameter, aNIParameter, aNI_COUNTRY_CODEParameter, bILL_TIMEParameter, cALL_TYPEParameter, cALLSParameter, cAMPAIGNParameter, cATEGORYParameter, cOMMENTSParameter, cONTACTParameter, cOSTParameter, cALL_DATEParameter, dESTINATION_AGENTParameter, dISPOSITIONParameter, dNISParameter, dNIS_COUNTRY_CODEParameter, dROPPEDParameter, dURATIONParameter, hANDLE_TIMEParameter, hOLD_TIMEParameter, iVR_FLOWParameter, mANUAL_DIALING_TIMEParameter, pREVIEW_TIMEParameter, pRIORITYParameter, qUEUE_TIMEParameter, rATEParameter, sERVICE_LEVELParameter, sESSION_IDParameter, sKILLParameter, sPEED_OF_ANSWERParameter, tALK_TIMEParameter, wORK_ITEM_DATEParameter, tHIRD_PARTY_TALK_TIMEParameter, wRAP_TIMEParameter, iS_COMPLETEParameter, aGENTParameter, aGENT_EMAILParameter, aGENT_EXTENSIONParameter, aGENT_NAMEParameter, aNI_AREA_CODEParameter, cITYParameter, cOMPANYParameter, cOUNTRYParameter, dEST_AGENT_EMAILParameter, dEST_AGENT_EXTENSIONParameter, dEST_AGENT_NAMEParameter, dNIS_AREA_CODEParameter, fIRST_NAMEParameter, lAST_NAMEParameter, nUMBER1Parameter, nUMBER2Parameter, nUMBER3Parameter, cALLED_STATEParameter, sTREETParameter, cALL_TIMEParameter, tIME_STAMPParameter, zIPParameter, mARKETING_SENT_KEYParameter);
        }
    
        public virtual ObjectResult<usp_WebDialerResultTypeLoad_Result> usp_WebDialerResultTypeLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebDialerResultTypeLoad_Result>("usp_WebDialerResultTypeLoad");
        }
    
        public virtual int usp_WebDialerUserDelete(Nullable<int> wEB_DIALER_USER_KEY)
        {
            var wEB_DIALER_USER_KEYParameter = wEB_DIALER_USER_KEY.HasValue ?
                new ObjectParameter("WEB_DIALER_USER_KEY", wEB_DIALER_USER_KEY) :
                new ObjectParameter("WEB_DIALER_USER_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebDialerUserDelete", wEB_DIALER_USER_KEYParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_WebDialerUserInsertUpdate(Nullable<int> wEB_DIALER_USER_KEY, string tELLER, string dIALER_USER_ID, Nullable<bool> iS_ACTIVE, Nullable<System.DateTime> dATE_ENTERED)
        {
            var wEB_DIALER_USER_KEYParameter = wEB_DIALER_USER_KEY.HasValue ?
                new ObjectParameter("WEB_DIALER_USER_KEY", wEB_DIALER_USER_KEY) :
                new ObjectParameter("WEB_DIALER_USER_KEY", typeof(int));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var dIALER_USER_IDParameter = dIALER_USER_ID != null ?
                new ObjectParameter("DIALER_USER_ID", dIALER_USER_ID) :
                new ObjectParameter("DIALER_USER_ID", typeof(string));
    
            var iS_ACTIVEParameter = iS_ACTIVE.HasValue ?
                new ObjectParameter("IS_ACTIVE", iS_ACTIVE) :
                new ObjectParameter("IS_ACTIVE", typeof(bool));
    
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_WebDialerUserInsertUpdate", wEB_DIALER_USER_KEYParameter, tELLERParameter, dIALER_USER_IDParameter, iS_ACTIVEParameter, dATE_ENTEREDParameter);
        }
    
        public virtual ObjectResult<usp_WebDialerUserLoadByDialerUser_Result> usp_WebDialerUserLoadByDialerUser(string dIALER_USER_ID)
        {
            var dIALER_USER_IDParameter = dIALER_USER_ID != null ?
                new ObjectParameter("DIALER_USER_ID", dIALER_USER_ID) :
                new ObjectParameter("DIALER_USER_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebDialerUserLoadByDialerUser_Result>("usp_WebDialerUserLoadByDialerUser", dIALER_USER_IDParameter);
        }
    
        public virtual ObjectResult<usp_WebDialerUserLoadByID_Result> usp_WebDialerUserLoadByID(Nullable<int> wEB_DIALER_USER_KEY)
        {
            var wEB_DIALER_USER_KEYParameter = wEB_DIALER_USER_KEY.HasValue ?
                new ObjectParameter("WEB_DIALER_USER_KEY", wEB_DIALER_USER_KEY) :
                new ObjectParameter("WEB_DIALER_USER_KEY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebDialerUserLoadByID_Result>("usp_WebDialerUserLoadByID", wEB_DIALER_USER_KEYParameter);
        }
    
        public virtual ObjectResult<usp_WebDialerUserLoadByTeller_Result> usp_WebDialerUserLoadByTeller(string tELLER)
        {
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebDialerUserLoadByTeller_Result>("usp_WebDialerUserLoadByTeller", tELLERParameter);
        }
    
        public virtual int usp_WebEmailNotesDelete(string wEB_EMAIL_UNIQUE_ID)
        {
            var wEB_EMAIL_UNIQUE_IDParameter = wEB_EMAIL_UNIQUE_ID != null ?
                new ObjectParameter("WEB_EMAIL_UNIQUE_ID", wEB_EMAIL_UNIQUE_ID) :
                new ObjectParameter("WEB_EMAIL_UNIQUE_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebEmailNotesDelete", wEB_EMAIL_UNIQUE_IDParameter);
        }
    
        public virtual int usp_WebEmailNotesInsert(ObjectParameter wEB_EMAIL_NOTES_KEY, string wEB_EMAIL_UNIQUE_ID, string tELLER, string nOTES, Nullable<System.DateTime> dATE_ENTERED)
        {
            var wEB_EMAIL_UNIQUE_IDParameter = wEB_EMAIL_UNIQUE_ID != null ?
                new ObjectParameter("WEB_EMAIL_UNIQUE_ID", wEB_EMAIL_UNIQUE_ID) :
                new ObjectParameter("WEB_EMAIL_UNIQUE_ID", typeof(string));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            var nOTESParameter = nOTES != null ?
                new ObjectParameter("NOTES", nOTES) :
                new ObjectParameter("NOTES", typeof(string));
    
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebEmailNotesInsert", wEB_EMAIL_NOTES_KEY, wEB_EMAIL_UNIQUE_IDParameter, tELLERParameter, nOTESParameter, dATE_ENTEREDParameter);
        }
    
        public virtual int usp_WebEmailNotesLoad(string wEB_EMAIL_UNIQUE_ID, string tELLER)
        {
            var wEB_EMAIL_UNIQUE_IDParameter = wEB_EMAIL_UNIQUE_ID != null ?
                new ObjectParameter("WEB_EMAIL_UNIQUE_ID", wEB_EMAIL_UNIQUE_ID) :
                new ObjectParameter("WEB_EMAIL_UNIQUE_ID", typeof(string));
    
            var tELLERParameter = tELLER != null ?
                new ObjectParameter("TELLER", tELLER) :
                new ObjectParameter("TELLER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebEmailNotesLoad", wEB_EMAIL_UNIQUE_IDParameter, tELLERParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_WebImage_Insert(Nullable<int> lOAN_APPLICATION_KEY, byte[] dATA, string sOURCE_URL, string sOURCE_HTML)
        {
            var lOAN_APPLICATION_KEYParameter = lOAN_APPLICATION_KEY.HasValue ?
                new ObjectParameter("LOAN_APPLICATION_KEY", lOAN_APPLICATION_KEY) :
                new ObjectParameter("LOAN_APPLICATION_KEY", typeof(int));
    
            var dATAParameter = dATA != null ?
                new ObjectParameter("DATA", dATA) :
                new ObjectParameter("DATA", typeof(byte[]));
    
            var sOURCE_URLParameter = sOURCE_URL != null ?
                new ObjectParameter("SOURCE_URL", sOURCE_URL) :
                new ObjectParameter("SOURCE_URL", typeof(string));
    
            var sOURCE_HTMLParameter = sOURCE_HTML != null ?
                new ObjectParameter("SOURCE_HTML", sOURCE_HTML) :
                new ObjectParameter("SOURCE_HTML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_WebImage_Insert", lOAN_APPLICATION_KEYParameter, dATAParameter, sOURCE_URLParameter, sOURCE_HTMLParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_WebLead_GetExisting(string email, string ssn, string aba, Nullable<long> acct, Nullable<int> dayCount)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var ssnParameter = ssn != null ?
                new ObjectParameter("ssn", ssn) :
                new ObjectParameter("ssn", typeof(string));
    
            var abaParameter = aba != null ?
                new ObjectParameter("aba", aba) :
                new ObjectParameter("aba", typeof(string));
    
            var acctParameter = acct.HasValue ?
                new ObjectParameter("acct", acct) :
                new ObjectParameter("acct", typeof(long));
    
            var dayCountParameter = dayCount.HasValue ?
                new ObjectParameter("dayCount", dayCount) :
                new ObjectParameter("dayCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_WebLead_GetExisting", emailParameter, ssnParameter, abaParameter, acctParameter, dayCountParameter);
        }
    
        public virtual ObjectResult<usp_WebLeadGen_CheckLimits_Result> usp_WebLeadGen_CheckLimits(Nullable<int> leadgenkey)
        {
            var leadgenkeyParameter = leadgenkey.HasValue ?
                new ObjectParameter("leadgenkey", leadgenkey) :
                new ObjectParameter("leadgenkey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_WebLeadGen_CheckLimits_Result>("usp_WebLeadGen_CheckLimits", leadgenkeyParameter);
        }
    
        public virtual int usp_WebLeadSale_Insert(Nullable<System.DateTime> dATE_ENTERED, Nullable<int> lOAN_APPLICATION_KEY, Nullable<byte> sTATUS, Nullable<int> lEAD_ID, Nullable<int> bUYER_ID, string dELIVERY_URL, string dELIVERY_MSG, string eRROR, Nullable<decimal> pRICE, ObjectParameter wEBLEADSALE_KEY)
        {
            var dATE_ENTEREDParameter = dATE_ENTERED.HasValue ?
                new ObjectParameter("DATE_ENTERED", dATE_ENTERED) :
                new ObjectParameter("DATE_ENTERED", typeof(System.DateTime));
    
            var lOAN_APPLICATION_KEYParameter = lOAN_APPLICATION_KEY.HasValue ?
                new ObjectParameter("LOAN_APPLICATION_KEY", lOAN_APPLICATION_KEY) :
                new ObjectParameter("LOAN_APPLICATION_KEY", typeof(int));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(byte));
    
            var lEAD_IDParameter = lEAD_ID.HasValue ?
                new ObjectParameter("LEAD_ID", lEAD_ID) :
                new ObjectParameter("LEAD_ID", typeof(int));
    
            var bUYER_IDParameter = bUYER_ID.HasValue ?
                new ObjectParameter("BUYER_ID", bUYER_ID) :
                new ObjectParameter("BUYER_ID", typeof(int));
    
            var dELIVERY_URLParameter = dELIVERY_URL != null ?
                new ObjectParameter("DELIVERY_URL", dELIVERY_URL) :
                new ObjectParameter("DELIVERY_URL", typeof(string));
    
            var dELIVERY_MSGParameter = dELIVERY_MSG != null ?
                new ObjectParameter("DELIVERY_MSG", dELIVERY_MSG) :
                new ObjectParameter("DELIVERY_MSG", typeof(string));
    
            var eRRORParameter = eRROR != null ?
                new ObjectParameter("ERROR", eRROR) :
                new ObjectParameter("ERROR", typeof(string));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_WebLeadSale_Insert", dATE_ENTEREDParameter, lOAN_APPLICATION_KEYParameter, sTATUSParameter, lEAD_IDParameter, bUYER_IDParameter, dELIVERY_URLParameter, dELIVERY_MSGParameter, eRRORParameter, pRICEParameter, wEBLEADSALE_KEY);
        }
    
        [DbFunction("EF6EdmxModelContainer", "XtdaTD")]
        public virtual IQueryable<XtdaTD_Result> XtdaTD(Nullable<int> tdkey)
        {
            var tdkeyParameter = tdkey.HasValue ?
                new ObjectParameter("tdkey", tdkey) :
                new ObjectParameter("tdkey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<XtdaTD_Result>("[EF6EdmxModelContainer].[XtdaTD](@tdkey)", tdkeyParameter);
        }
    }
}
