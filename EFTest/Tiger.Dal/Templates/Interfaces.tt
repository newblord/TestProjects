<#@ assembly name="EnvDTE" #> 
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Globalization" #>
<#@ assembly name="envdte80" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ template language="C#" debug="true" hostspecific="true"#>
<#@ include file="TemplateFileManagerV2.1.ttinclude" #>
<#@ output extension=".cs"#>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

<#
var manager = TemplateFileManager.Create(this);

List<CodeClass> classes = new List<CodeClass>();

classes = VSHelper.FindClasses("Tiger.DataModel","Tiger.Dal.Models", this.Host);

foreach (CodeClass entity in classes)
{
	manager.StartNewFile("I" + entity.Name + ".cs","Tiger.DataModel","Interfaces");
	
	CreateHeader();
	BeginNamespace("Interfaces.Models");
   BeginInterface(entity.Name);

	foreach(CodeProperty codeProperty in entity.Members)
	{
		var writeGet = false;
		var writeSet = false;

		if(codeProperty.Getter!=null && codeProperty.Getter.Access!=vsCMAccess.vsCMAccessPrivate) 
			writeGet = true;
		if(codeProperty.Setter!=null)
			writeSet = true;
		
		WriteLine("{0} {1}{2}{3}",codeProperty.Type.AsString, codeProperty.Name, writeGet ? " { get;" : "", writeSet ? " set; }" : "");
	}

	CloseBrace();
	CloseBrace();

	manager.StartNewFile("I" + entity.Name + "Repository.cs","Interfaces","Repositories");
	
	CreateHeader();

	WriteLine("using Data.Entities;");
	WriteLine("using System.Collections.Generic;");

	BeginNamespace("Interfaces.Repositories");
	BeginInterface(entity.Name + "Repository : IRepository<" + entity.Name + ">");

	WriteLine("new {0} Insert({0} data);", entity.Name);
	WriteLine("new {0} Update({0} data);", entity.Name);
	WriteLine("new void Delete(int id);", entity.Name);
	WriteLine("new {0} FindById(int id);", entity.Name);
	WriteLine("new IEnumerable<{0}> GetAll();", entity.Name);

	CloseBrace();
	CloseBrace();
}

manager.Process();
#>


<#+

public void CreateHeader()
{
	WriteLine("//------------------------------------------------------------------------------");
	WriteLine("// <auto-generated>");
	WriteLine("//     This code was generated from a template.");
	WriteLine("//");
	WriteLine("//     Manual changes to this file may cause unexpected behavior in your application.");
	WriteLine("//     Manual changes to this file will be overwritten if the code is regenerated.");
	WriteLine("// </auto-generated>");
	WriteLine("//------------------------------------------------------------------------------");
}

public void BeginNamespace(string name)
{
	WriteLine("namespace {0}", name);
	WriteLine("{");

	PushIndent("\t");
}

public void BeginInterface(string name)
{
	WriteLine("public interface I{0}", name);
	WriteLine("{");

	PushIndent("\t");
}

public void CloseBrace()
{
	PopIndent();
	WriteLine("}");
}

#> 
